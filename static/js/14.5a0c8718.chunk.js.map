{"version":3,"sources":["components/painter/index.ts"],"names":["mount","Promise","resolve","a","mountView","mountSketch","sketch","setup","menu","getComponent","mountHook","run","reset","specification","label","type","category","prototype","ElementMoveForward","ElementMoveBackward","ElementTurnLeft","ElementTurnRight","ElementSetXY","ElementSetHeading","ElementDrawArc","ElementSetColor","ElementSetThickness","ElementPenUp","ElementPenDown","ElementSetBackground","ElementClear"],"mappings":"kSAYO,SAASA,IACZ,OAAO,IAAIC,SAAQ,SAACC,GAChB,sBAAC,sBAAAC,EAAA,sEACSC,kBADT,uBAESC,sBAAYC,UAFrB,OAGGJ,IAHH,0CAAD,MAWD,SAASK,IACZ,OAAO,IAAIN,SAAQ,SAACC,GAChB,IAAMM,EAAOC,uBAAa,QACtBD,IACAA,EAAKE,UAAU,MAAOC,OACtBH,EAAKE,UAAU,QAASE,UAG5BA,kBAEAV,OA6BD,IAAMW,EAET,CACA,eAAgB,CACZC,MAAO,UACPC,KAAM,YACNC,SAAU,WACVC,UAAWC,sBAEf,gBAAiB,CACbJ,MAAO,WACPC,KAAM,YACNC,SAAU,WACVC,UAAWE,uBAEf,YAAa,CACTL,MAAO,OACPC,KAAM,YACNC,SAAU,WACVC,UAAWG,mBAEf,aAAc,CACVN,MAAO,QACPC,KAAM,YACNC,SAAU,WACVC,UAAWI,oBAEf,SAAU,CACNP,MAAO,SACPC,KAAM,YACNC,SAAU,WACVC,UAAWK,gBAEf,cAAe,CACXR,MAAO,cACPC,KAAM,YACNC,SAAU,WACVC,UAAWM,qBAEf,WAAY,CACRT,MAAO,WACPC,KAAM,YACNC,SAAU,WACVC,UAAWO,kBAEf,YAAa,CACTV,MAAO,YACPC,KAAM,YACNC,SAAU,MACVC,UAAWQ,mBAEf,gBAAiB,CACbX,MAAO,gBACPC,KAAM,YACNC,SAAU,MACVC,UAAWS,uBAEf,SAAU,CACNZ,MAAO,SACPC,KAAM,YACNC,SAAU,MACVC,UAAWU,gBAEf,WAAY,CACRb,MAAO,WACPC,KAAM,YACNC,SAAU,MACVC,UAAWW,kBAEf,iBAAkB,CACdd,MAAO,iBACPC,KAAM,YACNC,SAAU,MACVC,UAAWY,wBAEf,MAAS,CACLf,MAAO,QACPC,KAAM,YACNC,SAAU,MACVC,UAAWa","file":"static/js/14.5a0c8718.chunk.js","sourcesContent":["import { IComponentMenu } from '../../@types/components/menu';\n\nimport { getComponent } from '../../config';\n\nimport { mount as mountView, mountSketch } from './view';\nimport { sketch, run, reset } from './painter';\n\n// -- public functions -----------------------------------------------------------------------------\n\n/**\n * Mounts the Painter component.\n */\nexport function mount(): Promise<void> {\n    return new Promise((resolve) => {\n        (async () => {\n            await mountView();\n            await mountSketch(sketch);\n            resolve();\n        })();\n    });\n}\n\n/**\n * Initializes the Painter component; mounts the hooks.\n */\nexport function setup(): Promise<void> {\n    return new Promise((resolve) => {\n        const menu = getComponent('menu') as IComponentMenu;\n        if (menu) {\n            menu.mountHook('run', run);\n            menu.mountHook('reset', reset);\n        }\n\n        reset();\n\n        resolve();\n    });\n}\n\n// == specification ================================================================================\n\nimport { IElementSpecification } from '@sugarlabs/musicblocks-v4-lib';\n\nimport {\n    ElementMoveForward,\n    ElementMoveBackward,\n    ElementTurnLeft,\n    ElementTurnRight,\n    ElementSetXY,\n    ElementSetHeading,\n    ElementDrawArc,\n    ElementSetColor,\n    ElementSetThickness,\n    ElementPenUp,\n    ElementPenDown,\n    ElementSetBackground,\n    ElementClear,\n} from './painter';\n\n// -------------------------------------------------------------------------------------------------\n\n/**\n * Syntax element specification object for the Painter component.\n */\nexport const specification: {\n    [identifier: string]: IElementSpecification;\n} = {\n    'move-forward': {\n        label: 'forward',\n        type: 'Statement',\n        category: 'Graphics',\n        prototype: ElementMoveForward,\n    },\n    'move-backward': {\n        label: 'backward',\n        type: 'Statement',\n        category: 'Graphics',\n        prototype: ElementMoveBackward,\n    },\n    'turn-left': {\n        label: 'left',\n        type: 'Statement',\n        category: 'Graphics',\n        prototype: ElementTurnLeft,\n    },\n    'turn-right': {\n        label: 'right',\n        type: 'Statement',\n        category: 'Graphics',\n        prototype: ElementTurnRight,\n    },\n    'set-xy': {\n        label: 'set xy',\n        type: 'Statement',\n        category: 'Graphics',\n        prototype: ElementSetXY,\n    },\n    'set-heading': {\n        label: 'set heading',\n        type: 'Statement',\n        category: 'Graphics',\n        prototype: ElementSetHeading,\n    },\n    'draw-arc': {\n        label: 'draw arc',\n        type: 'Statement',\n        category: 'Graphics',\n        prototype: ElementDrawArc,\n    },\n    'set-color': {\n        label: 'set color',\n        type: 'Statement',\n        category: 'Pen',\n        prototype: ElementSetColor,\n    },\n    'set-thickness': {\n        label: 'set thickness',\n        type: 'Statement',\n        category: 'Pen',\n        prototype: ElementSetThickness,\n    },\n    'pen-up': {\n        label: 'pen up',\n        type: 'Statement',\n        category: 'Pen',\n        prototype: ElementPenUp,\n    },\n    'pen-down': {\n        label: 'pen down',\n        type: 'Statement',\n        category: 'Pen',\n        prototype: ElementPenDown,\n    },\n    'set-background': {\n        label: 'set background',\n        type: 'Statement',\n        category: 'Pen',\n        prototype: ElementSetBackground,\n    },\n    'clear': {\n        label: 'clear',\n        type: 'Statement',\n        category: 'Pen',\n        prototype: ElementClear,\n    },\n};\n"],"sourceRoot":""}