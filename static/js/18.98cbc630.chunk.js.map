{"version":3,"sources":["components/painter/core/sketchP5.ts"],"names":["sketch","setup","container","getBoundingClientRect","width","height","p5","p","createCanvas","noLoop","translate","angleMode","DEGREES","scale","drawLine","x1","y1","x2","y2","line","drawPoint","x","y","point","drawArc","w","h","start","stop","noFill","arc","OPEN","drawBezier","x3","y3","x4","y4","bezier","setFillOn","v1","v2","v3","fill","setFillOff","setColor","stroke","setThickness","value","strokeWeight","setBackground","background","clear"],"mappings":"4GAAA,sdAKIA,EALJ,iBAWO,SAASC,EAAMC,GAClB,MAA0BA,EAAUC,wBAA5BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAEf,IAAIC,KAAG,SAACC,GACJP,EAASO,EAETA,EAAEN,MAAQ,WACNM,EAAEC,aAAaJ,EAAOC,GACtBE,EAAEE,SACFF,EAAEG,UAAUH,EAAEH,MAAQ,EAAGG,EAAEF,OAAS,GACpCE,EAAEI,UAAUJ,EAAEK,SACdL,EAAEM,MAAM,GAAI,MAEjBX,GAUA,SAASY,EAASC,EAAYC,EAAYC,EAAYC,GACzDlB,EAAOmB,KAAKJ,EAAIC,EAAIC,EAAIC,GAQrB,SAASE,EAAUC,EAAWC,GACjCtB,EAAOuB,MAAMF,EAAGC,GAYb,SAASE,EACZH,EACAC,EACAG,EACAC,EACAC,EACAC,GAEA5B,EAAO6B,SACP7B,EAAO8B,IAAIT,EAAGC,EAAGG,EAAGC,EAAGC,EAAOC,EAAM5B,EAAO+B,MAcxC,SAASC,EACZjB,EACAC,EACAC,EACAC,EACAe,EACAC,EACAC,EACAC,GAEApC,EAAOqC,OAAOtB,EAAIC,EAAIC,EAAIC,EAAIe,EAAIC,EAAIC,EAAIC,GAevC,SAASE,EAAUC,EAAYC,EAAaC,GAC7B,kBAAPD,GAAiC,kBAAPC,EACjCzC,EAAO0C,KAAKH,EAAIC,EAAIC,GAEpBzC,EAAO0C,KAAKH,GAOb,SAASI,IACZ3C,EAAO6B,SAeJ,SAASe,EAASL,EAAYC,EAAaC,GAC5B,kBAAPD,GAAiC,kBAAPC,EACjCzC,EAAO6C,OAAON,EAAIC,EAAIC,GAEtBzC,EAAO6C,OAAON,GAQf,SAASO,EAAaC,GACzB/C,EAAOgD,aAAaD,GAejB,SAASE,EAAcV,EAAYC,EAAaC,GACjC,kBAAPD,GAAiC,kBAAPC,EACjCzC,EAAOkD,WAAWX,EAAIC,EAAIC,GAE1BzC,EAAOkD,WAAWX,GAOnB,SAASY,IACZnD,EAAOmD","file":"static/js/18.98cbc630.chunk.js","sourcesContent":["import p5 from 'p5';\n\n// -------------------------------------------------------------------------------------------------\n\n/** p5 sketch instance. */\nlet sketch: p5;\n\n/**\n * Initializes a p5 instance and sets it up inside provided DOM element.\n * @param container - DOM element which will contain the p5 canvas.\n */\nexport function setup(container: HTMLElement): void {\n    const { width, height } = container.getBoundingClientRect();\n\n    new p5((p: p5) => {\n        sketch = p;\n\n        p.setup = () => {\n            p.createCanvas(width, height);\n            p.noLoop();\n            p.translate(p.width / 2, p.height / 2);\n            p.angleMode(p.DEGREES);\n            p.scale(1, -1);\n        };\n    }, container);\n}\n\n/**\n * Draws a straight line.\n * @param x1 - x co-ordinate of point 1\n * @param y1 - y co-ordinate of point 1\n * @param x2 - x co-ordinate of point 2\n * @param y2 - y co-ordinate of point 2\n */\nexport function drawLine(x1: number, y1: number, x2: number, y2: number): void {\n    sketch.line(x1, y1, x2, y2);\n}\n\n/**\n * Draws a point.\n * @param x - x co-ordinate of the point\n * @param y - y co-ordinate of the point\n */\nexport function drawPoint(x: number, y: number): void {\n    sketch.point(x, y);\n}\n\n/**\n * Draws an arc.\n * @param x - x co-ordinate of arc's ellipse\n * @param y - y co-ordinate of arc's ellipse\n * @param w - width of arc's ellipse\n * @param h - height of arc's ellipse\n * @param start - angle to start the arc - in Radians\n * @param stop - angle to stop the arc - in Radians\n */\nexport function drawArc(\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    start: number,\n    stop: number,\n): void {\n    sketch.noFill();\n    sketch.arc(x, y, w, h, start, stop, sketch.OPEN);\n}\n\n/**\n * Draws a bezier curve.\n * @param x1 - x co-ordinate of anchor point 1\n * @param y1 - y co-ordinate of anchor point 1\n * @param x2 - x co-ordinate of control point 1\n * @param y2 - y co-ordinate of control point 1\n * @param x3 - x co-ordinate of control point 2\n * @param y3 - y co-ordinate of control point 2\n * @param x4 - x co-ordinate of anchor point 2\n * @param y4 - y co-ordinate of anchor point 2\n */\nexport function drawBezier(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    x3: number,\n    y3: number,\n    x4: number,\n    y4: number,\n): void {\n    sketch.bezier(x1, y1, x2, y2, x3, y3, x4, y4);\n}\n\n/**\n * Sets fill color.\n * @param value - greyscale value\n */\nexport function setFillOn(value: number): void;\n/**\n * Sets fill color.\n * @param v1 - red channel value\n * @param v2 - green channel value\n * @param v3 - blue channel value\n */\nexport function setFillOn(v1: number, v2?: number, v3?: number): void;\nexport function setFillOn(v1: number, v2?: number, v3?: number): void {\n    if (typeof v2 === 'number' && typeof v3 === 'number') {\n        sketch.fill(v1, v2, v3);\n    } else {\n        sketch.fill(v1);\n    }\n}\n\n/**\n * Clears the fill color.\n */\nexport function setFillOff(): void {\n    sketch.noFill();\n}\n\n/**\n * Sets drawing color.\n * @param value - greyscale value\n */\nexport function setColor(value: number): void;\n/**\n * Sets drawing color.\n * @param v1 - red channel value\n * @param v2 - green channel value\n * @param v3 - blue channel value\n */\nexport function setColor(v1: number, v2?: number, v3?: number): void;\nexport function setColor(v1: number, v2?: number, v3?: number): void {\n    if (typeof v2 === 'number' && typeof v3 === 'number') {\n        sketch.stroke(v1, v2, v3);\n    } else {\n        sketch.stroke(v1);\n    }\n}\n\n/**\n * Sets drawing thickness.\n * @param value - thickness\n */\nexport function setThickness(value: number): void {\n    sketch.strokeWeight(value);\n}\n\n/**\n * Sets background color.\n * @param value - greyscale value\n */\nexport function setBackground(value: number): void;\n/**\n * Sets background color.\n * @param v1 - red channel value\n * @param v2 - green channel value\n * @param v3 - blue channel value\n */\nexport function setBackground(v1: number, v2?: number, v3?: number): void;\nexport function setBackground(v1: number, v2?: number, v3?: number): void {\n    if (typeof v2 === 'number' && typeof v3 === 'number') {\n        sketch.background(v1, v2, v3);\n    } else {\n        sketch.background(v1);\n    }\n}\n\n/**\n * Clears the canvas.\n */\nexport function clear(): void {\n    sketch.clear();\n}\n"],"sourceRoot":""}