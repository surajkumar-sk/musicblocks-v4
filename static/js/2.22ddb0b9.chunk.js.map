{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","components/painter/view/components/index.tsx","components/painter/view/components/utils/background.ts","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","components/painter/view/index.ts","components/painter/view/sprite.ts","components/painter/view/resources/mouse.svg","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","components/painter/core/sketchP5.ts","components/painter/core/utils.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/painter/painter.ts"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_artboard","_artboardBackground","_interactor","_mountedCallback","Painter","backgroundRef","useRef","artboardRef","artboardBackgroundRef","interactorRef","useEffect","current","setupCartesian","id","ref","className","setup","container","Promise","resolve","ReactDOM","render","requestAnimationFrame","artboard","artboardBackground","interactor","getBoundingClientRect","width","height","p5","createCanvas","noLoop","delta","piecesVer","Math","floor","piecesHor","stroke","strokeWeight","line","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","_inherits","subClass","superClass","create","constructor","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","call","e","_artboardSketch","mount","createItem","location","setupComponent","then","setupSprite","mountSketch","sketch","sketchCanvas","children","style","position","left","transform","updateBackgroundColor","type","color","backgroundColor","r","g","b","_sprite","_spriteSVG","_spriteSrc","mouseSVG","spriteWrapper","document","createElement","classList","add","bottom","appendChild","fetch","res","text","svg","innerHTML","spriteElem","updatePosition","x","y","updateHeading","heading","updateAccent","fill","querySelectorAll","item","setAttribute","remove","_typeof","Symbol","iterator","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","NewTarget","this","translate","angleMode","DEGREES","scale","drawLine","x1","y1","x2","y2","drawPoint","point","drawArc","w","h","start","stop","noFill","arc","OPEN","drawBezier","x3","y3","x4","y4","bezier","setFillOn","v1","v2","v3","setFillOff","setColor","setThickness","setBackground","background","clear","radToDeg","radians","PI","degToRad","degrees","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","from","unsupportedIterableToArray","_defaultStateValues","drawing","_stateObj","_state","set","_","_colorMap","sketchP5","_move","distance","cos","sin","_turn","angle","reset","run","ElementMoveForward","steps","params","ElementStatement","ElementMoveBackward","ElementTurnRight","ElementTurnLeft","ElementSetXY","ElementSetHeading","ElementDrawArc","radius","direction","sign","theta","xCentre","yCentre","startAngle","stopAngle","ElementSetColor","ElementSetThickness","ElementPenUp","ElementPenDown","ElementSetBackground","ElementClear"],"mappings":"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","file":"static/js/2.22ddb0b9.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { setupCartesian } from './utils/background';\n\n// -- stylesheet -----------------------------------------------------------------------------------\n\nimport './index.scss';\n\n// -- private variables ----------------------------------------------------------------------------\n\nlet _artboard: HTMLDivElement;\nlet _artboardBackground: HTMLDivElement;\nlet _interactor: HTMLDivElement;\n\nlet _mountedCallback: CallableFunction;\n\n// -- component definition -------------------------------------------------------------------------\n\n/**\n * Painter component.\n * @returns root JSX element of the Painter component\n */\nfunction Painter(): JSX.Element {\n  const backgroundRef = useRef(null);\n  const artboardRef = useRef(null);\n  const artboardBackgroundRef = useRef(null);\n  const interactorRef = useRef(null);\n\n  useEffect(() => {\n    _artboard = artboardRef.current!;\n    _artboardBackground = artboardBackgroundRef.current!;\n    _interactor = interactorRef.current!;\n\n    _mountedCallback();\n\n    setupCartesian(backgroundRef.current!);\n  }, []);\n\n  return (\n    <>\n      <section id=\"artboard-wrapper\">\n        <div id=\"artboard-background\" ref={backgroundRef}></div>\n        <div id=\"artboard-container\">\n          <div className=\"artboard\" ref={artboardRef}></div>\n          <div className=\"artboard-background\" ref={artboardBackgroundRef}></div>\n        </div>\n        <div id=\"artboard-interactor\" ref={interactorRef}></div>\n      </section>\n    </>\n  );\n}\n\n/**\n * Mounts the React component inside the DOM container.\n * @param container DOM container\n * @returns a `Promise` of an object containing the DOM artboard and interactor elements\n */\nexport function setup(container: HTMLElement): Promise<{\n  artboard: HTMLDivElement;\n  artboardBackground: HTMLDivElement;\n  interactor: HTMLDivElement;\n}> {\n  return new Promise((resolve) => {\n    ReactDOM.render(<Painter />, container);\n\n    _mountedCallback = () =>\n      requestAnimationFrame(() => {\n        resolve({\n          artboard: _artboard,\n          artboardBackground: _artboardBackground,\n          interactor: _interactor,\n        });\n      });\n  });\n}\n","import p5 from 'p5';\n\n/**\n * Sets up a canvas with a cartesian grid.\n * @param container DOM container of the grid\n */\nexport function setupCartesian(container: HTMLElement): void {\n    const { width, height } = container.getBoundingClientRect();\n\n    new p5((p: p5) => {\n        p.setup = () => {\n            p.createCanvas(width, height);\n            p.noLoop();\n\n            let delta = 10;\n            let piecesVer = Math.floor((p.width >> 1) / delta);\n            let piecesHor = Math.floor((p.height >> 1) / delta);\n\n            p.stroke(252, 252, 252);\n            p.strokeWeight(1);\n            for (let i = 1; i <= piecesVer; i++) {\n                p.line((p.width >> 1) + i * delta, 0, (p.width >> 1) + i * delta, p.height);\n                p.line((p.width >> 1) - i * delta, 0, (p.width >> 1) - i * delta, p.height);\n            }\n            for (let i = 1; i <= piecesHor; i++) {\n                p.line(0, (p.height >> 1) + i * delta, p.width, (p.height >> 1) + i * delta);\n                p.line(0, (p.height >> 1) - i * delta, p.width, (p.height >> 1) - i * delta);\n            }\n\n            delta = 100;\n            piecesVer = Math.floor((p.width >> 1) / delta);\n            piecesHor = Math.floor((p.height >> 1) / delta);\n\n            p.stroke(244, 244, 244);\n            p.strokeWeight(1);\n            for (let i = 1; i <= piecesVer; i++) {\n                p.line((p.width >> 1) + i * delta, 0, (p.width >> 1) + i * delta, p.height);\n                p.line((p.width >> 1) - i * delta, 0, (p.width >> 1) - i * delta, p.height);\n            }\n            for (let i = 1; i <= piecesHor; i++) {\n                p.line(0, (p.height >> 1) + i * delta, p.width, (p.height >> 1) + i * delta);\n                p.line(0, (p.height >> 1) - i * delta, p.width, (p.height >> 1) - i * delta);\n            }\n\n            p.stroke(240, 240, 240);\n            p.strokeWeight(2);\n            p.line(p.width >> 1, 0, p.width >> 1, p.height);\n            p.line(0, p.height >> 1, p.width, p.height >> 1);\n        };\n    }, container);\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import { ISketch } from '../@types';\n\nimport { createItem } from '@/view';\nimport { setup as setupComponent } from './components';\nimport { setup as setupSprite } from './sprite';\n\n// -- private variables ----------------------------------------------------------------------------\n\nlet _artboardSketch: HTMLElement;\nlet _artboardBackground: HTMLElement;\n\n// -- public functions -----------------------------------------------------------------------------\n\n/**\n * Initializes the Painter DOM.\n */\nexport function mount(): Promise<void> {\n    return new Promise((resolve) => {\n        const container = createItem({ location: 'workspace' });\n        container.id = 'painter';\n\n        setupComponent(container).then(({ artboard, artboardBackground, interactor }) => {\n            _artboardSketch = artboard;\n            _artboardBackground = artboardBackground;\n            setupSprite(interactor);\n\n            resolve();\n        });\n    });\n}\n\n/**\n * Mounts the sketch canvas inside the artboard.\n * @param sketch sketch instance\n */\nexport function mountSketch(sketch: ISketch): Promise<void> {\n    return new Promise((resolve) => {\n        sketch.setup(_artboardSketch!);\n\n        requestAnimationFrame(() => {\n            const sketchCanvas = _artboardSketch.children[0] as HTMLCanvasElement;\n            sketchCanvas.style.position = 'absolute';\n            sketchCanvas.style.left = '50%';\n            sketchCanvas.style.transform = 'translateX(-50%)';\n\n            resolve();\n        });\n    });\n}\n\n/**\n * Removes the artboard container's background color.\n */\nexport function updateBackgroundColor(type: 'unset'): void;\n/**\n * Sets the artboard container's background color.\n * @param color background color\n */\nexport function updateBackgroundColor(type: 'set', color: [number, number, number]): void;\n/**\n * Updates the artboard container's background color.\n * @param type `set` to set background color, `unset` to remove background color\n * @param color background color\n */\nexport function updateBackgroundColor(\n    type: 'set' | 'unset',\n    color?: [number, number, number],\n): void {\n    if (type === 'unset') {\n        _artboardBackground.style.backgroundColor = 'unset';\n    } else {\n        const [r, g, b] = color!;\n        _artboardBackground.style.backgroundColor = `rgb(${r}, ${g}, ${b})`;\n    }\n}\n","import mouseSVG from './resources/mouse.svg';\n\n// -- private variables ----------------------------------------------------------------------------\n\n/** Source URL of the sprite's SVG. */\nconst _spriteSrc = mouseSVG;\n\n/** DOM element representing the sprite wrapper. */\nlet _sprite: HTMLElement;\n/** SVG element of the sprite. */\nlet _spriteSVG: SVGElement;\n\n// -- public functions -----------------------------------------------------------------------------\n\n/**\n * Initializes the sprite.\n * @param interactor - DOM container for the interactor (wrapper for the sprite)\n */\nexport function setup(interactor: HTMLElement): void {\n    const spriteWrapper = document.createElement('div');\n    spriteWrapper.classList.add('artboard-sprite-wrapper');\n    spriteWrapper.style.left = '50%';\n    spriteWrapper.style.bottom = '50%';\n    spriteWrapper.style.transform = 'translate(-50%, 50%)';\n    interactor.appendChild(spriteWrapper);\n\n    _sprite = spriteWrapper;\n\n    // fetches the SVG source string from the .svg source file's URL\n    fetch(_spriteSrc)\n        .then((res) => res.text())\n        .then((svg) => {\n            spriteWrapper.innerHTML = svg;\n\n            const spriteElem = spriteWrapper.children[0] as SVGElement;\n            spriteElem.classList.add('artboard-sprite');\n\n            _spriteSVG = spriteElem;\n        });\n}\n\n/**\n * Updates the position of the sprite.\n * @param x - x co-ordinate\n * @param y - y co-ordinate\n */\nexport function updatePosition(x: number, y: number): void {\n    _sprite.style.left = `calc(50% + ${x}px)`;\n    _sprite.style.bottom = `calc(50% + ${y}px)`;\n}\n\n/**\n * Updates the heading of the sprite.\n * @param heading - heading anglestate\n */\nexport function updateHeading(heading: number): void {\n    _sprite.style.transform = `translate(-50%, 50%) rotate(${-heading}deg)`;\n}\n\n/**\n * Defaults the color accent of the sprite.\n */\nexport function updateAccent(type: 'unset'): void;\n/**\n * Sets the color accent of the sprite.\n * @param fill fill color\n * @param stroke stroke color\n */\nexport function updateAccent(type: 'set', fill: string, stroke: string): void;\nexport function updateAccent(type: 'set' | 'unset', fill?: string, stroke?: string): void {\n    if (type === 'unset') {\n        _spriteSVG.querySelectorAll('.path-fill').forEach((item) => {\n            item.classList.add('path-fill-default');\n            item.setAttribute('fill', '');\n        });\n        _spriteSVG.querySelectorAll('.path-stroke').forEach((item) => {\n            item.classList.add('path-stroke-default');\n            item.setAttribute('stroke', '');\n        });\n        _spriteSVG.querySelectorAll('.path-fill-stroke').forEach((item) => {\n            item.classList.add('path-fill-stroke-default');\n            item.setAttribute('fill', '');\n            item.setAttribute('stroke', '');\n        });\n        return;\n    }\n\n    _spriteSVG.querySelectorAll('.path-fill').forEach((item) => {\n        item.classList.remove('path-fill-default');\n        item.setAttribute('fill', fill!);\n    });\n    _spriteSVG.querySelectorAll('.path-stroke').forEach((item) => {\n        item.classList.remove('path-stroke-default');\n        item.setAttribute('stroke', stroke!);\n    });\n    _spriteSVG.querySelectorAll('.path-fill-stroke').forEach((item) => {\n        item.classList.remove('path-fill-stroke-default');\n        item.setAttribute('fill', stroke!);\n        item.setAttribute('stroke', stroke!);\n    });\n}\n","export default __webpack_public_path__ + \"static/media/mouse.19733222.svg\";","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import p5 from 'p5';\n\n// -------------------------------------------------------------------------------------------------\n\n/** p5 sketch instance. */\nlet sketch: p5;\n\n/**\n * Initializes a p5 instance and sets it up inside provided DOM element.\n * @param container - DOM element which will contain the p5 canvas.\n */\nexport function setup(container: HTMLElement): void {\n    const { width, height } = container.getBoundingClientRect();\n\n    new p5((p: p5) => {\n        sketch = p;\n\n        p.setup = () => {\n            p.createCanvas(width, height);\n            p.noLoop();\n            p.translate(p.width / 2, p.height / 2);\n            p.angleMode(p.DEGREES);\n            p.scale(1, -1);\n        };\n    }, container);\n}\n\n/**\n * Draws a straight line.\n * @param x1 - x co-ordinate of point 1\n * @param y1 - y co-ordinate of point 1\n * @param x2 - x co-ordinate of point 2\n * @param y2 - y co-ordinate of point 2\n */\nexport function drawLine(x1: number, y1: number, x2: number, y2: number): void {\n    sketch.line(x1, y1, x2, y2);\n}\n\n/**\n * Draws a point.\n * @param x - x co-ordinate of the point\n * @param y - y co-ordinate of the point\n */\nexport function drawPoint(x: number, y: number): void {\n    sketch.point(x, y);\n}\n\n/**\n * Draws an arc.\n * @param x - x co-ordinate of arc's ellipse\n * @param y - y co-ordinate of arc's ellipse\n * @param w - width of arc's ellipse\n * @param h - height of arc's ellipse\n * @param start - angle to start the arc - in Radians\n * @param stop - angle to stop the arc - in Radians\n */\nexport function drawArc(\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    start: number,\n    stop: number,\n): void {\n    sketch.noFill();\n    sketch.arc(x, y, w, h, start, stop, sketch.OPEN);\n}\n\n/**\n * Draws a bezier curve.\n * @param x1 - x co-ordinate of anchor point 1\n * @param y1 - y co-ordinate of anchor point 1\n * @param x2 - x co-ordinate of control point 1\n * @param y2 - y co-ordinate of control point 1\n * @param x3 - x co-ordinate of control point 2\n * @param y3 - y co-ordinate of control point 2\n * @param x4 - x co-ordinate of anchor point 2\n * @param y4 - y co-ordinate of anchor point 2\n */\nexport function drawBezier(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    x3: number,\n    y3: number,\n    x4: number,\n    y4: number,\n): void {\n    sketch.bezier(x1, y1, x2, y2, x3, y3, x4, y4);\n}\n\n/**\n * Sets fill color.\n * @param value - greyscale value\n */\nexport function setFillOn(value: number): void;\n/**\n * Sets fill color.\n * @param v1 - red channel value\n * @param v2 - green channel value\n * @param v3 - blue channel value\n */\nexport function setFillOn(v1: number, v2?: number, v3?: number): void;\nexport function setFillOn(v1: number, v2?: number, v3?: number): void {\n    if (typeof v2 === 'number' && typeof v3 === 'number') {\n        sketch.fill(v1, v2, v3);\n    } else {\n        sketch.fill(v1);\n    }\n}\n\n/**\n * Clears the fill color.\n */\nexport function setFillOff(): void {\n    sketch.noFill();\n}\n\n/**\n * Sets drawing color.\n * @param value - greyscale value\n */\nexport function setColor(value: number): void;\n/**\n * Sets drawing color.\n * @param v1 - red channel value\n * @param v2 - green channel value\n * @param v3 - blue channel value\n */\nexport function setColor(v1: number, v2?: number, v3?: number): void;\nexport function setColor(v1: number, v2?: number, v3?: number): void {\n    if (typeof v2 === 'number' && typeof v3 === 'number') {\n        sketch.stroke(v1, v2, v3);\n    } else {\n        sketch.stroke(v1);\n    }\n}\n\n/**\n * Sets drawing thickness.\n * @param value - thickness\n */\nexport function setThickness(value: number): void {\n    sketch.strokeWeight(value);\n}\n\n/**\n * Sets background color.\n * @param value - greyscale value\n */\nexport function setBackground(value: number): void;\n/**\n * Sets background color.\n * @param v1 - red channel value\n * @param v2 - green channel value\n * @param v3 - blue channel value\n */\nexport function setBackground(v1: number, v2?: number, v3?: number): void;\nexport function setBackground(v1: number, v2?: number, v3?: number): void {\n    if (typeof v2 === 'number' && typeof v3 === 'number') {\n        sketch.background(v1, v2, v3);\n    } else {\n        sketch.background(v1);\n    }\n}\n\n/**\n * Clears the canvas.\n */\nexport function clear(): void {\n    sketch.clear();\n}\n","/**\n * Converts value in radians to degrees.\n * @param radians - value in radians\n * @returns value in degrees\n */\nexport function radToDeg(radians: number): number {\n    return (radians / Math.PI) * 180;\n}\n\n/**\n * Converts value in degrees to radians.\n * @param degrees - value in degrees\n * @returns value in radians\n */\nexport function degToRad(degrees: number): number {\n    return (degrees / 180) * Math.PI;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { ISketch } from './@types';\n\nimport * as sketchP5 from './core/sketchP5';\nimport { updatePosition, updateHeading } from './view/sprite';\nimport { updateBackgroundColor } from './view';\n\nimport { degToRad } from './core/utils';\n\n// -- private variables ----------------------------------------------------------------------------\n\n/** Default state parameter values of the sprite. */\nconst _defaultStateValues = {\n    position: {\n        x: 0,\n        y: 0,\n    },\n    heading: 90,\n    drawing: true,\n};\n\n/** Sprite state parameters. */\nconst _stateObj = { ..._defaultStateValues };\n\n/** Proxy to the sprite state parameters. */\nconst _state = new Proxy(_stateObj, {\n    set: (_, key, value) => {\n        if (key === 'position') {\n            _stateObj.position = value;\n            updatePosition(value.x, value.y);\n        } else if (key === 'heading') {\n            _stateObj.heading = (value + 360) % 360;\n            updateHeading((value + 360 - 90) % 360);\n        } else if (key === 'drawing') {\n            _stateObj.drawing = value;\n        }\n        return true;\n    },\n});\n\nconst _colorMap: [number, number, number][] = [\n    [255, 241, 0],\n    [255, 140, 0],\n    [232, 17, 35],\n    [236, 0, 140],\n    [104, 33, 122],\n    [0, 24, 143],\n    [0, 188, 242],\n    [0, 178, 148],\n    [0, 158, 73],\n    [186, 216, 10],\n];\n\n// -- public variables -----------------------------------------------------------------------------\n\n/** Artboard canvas object. */\nexport const sketch: ISketch = sketchP5;\n\n// -- private functions ----------------------------------------------------------------------------\n\n/**\n * Helper function that moves the sprite forward (+ve distance) or backward (-ve distance).\n * @param distance - distance to move\n */\nfunction _move(distance: number): void {\n    const [x1, y1, x2, y2] = [\n        _state.position.x,\n        _state.position.y,\n        _state.position.x + distance * Math.cos(degToRad(_state.heading)),\n        _state.position.y + distance * Math.sin(degToRad(_state.heading)),\n    ];\n\n    _state.position = { x: x2, y: y2 };\n\n    if (_state.drawing) {\n        sketch.drawLine(x1, y1, x2, y2);\n    }\n}\n\n/**\n * Helper function that turns the head of the sprite left (+ve angle) or right (-ve angle).\n * @param angle - delta angle\n */\nfunction _turn(angle: number): void {\n    _state.heading += angle;\n}\n\n// -- public functions -----------------------------------------------------------------------------\n\n/**\n * Sets up the sketch inside the DOM container.\n * @param container DOM container\n */\nexport function setup(container: HTMLElement): void {\n    sketch.setup(container);\n}\n\n/**\n * Resets the Painter.\n * @description dummy implementation for now.\n */\nexport function reset(): void {\n    _state.position = { ..._defaultStateValues.position };\n    _state.heading = _defaultStateValues.heading;\n    _state.drawing = _defaultStateValues.drawing;\n\n    sketch.clear();\n    updateBackgroundColor('unset');\n}\n\n/**\n * Triggers the execution of the project.\n * @description dummy implementation for now.\n */\nexport function run(): void {\n    // _sketch.setBackground(127);\n    // _sketch.setBackground(255, 255, 0);\n    // _sketch.setThickness(4);\n    // _sketch.setColor(255, 0, 0);\n    // setTimeout(() => moveForward(200), 0);\n    // setTimeout(() => turnRight(90), 500);\n    // setTimeout(() => moveBackward(400), 1000);\n    // setTimeout(() => turnleft(270), 1500);\n    // setTimeout(() => moveForward(200), 2000);\n}\n\n// -- public classes -------------------------------------------------------------------------------\n\nimport { ElementStatement, TData } from '@sugarlabs/musicblocks-v4-lib';\n\n/**\n * @class\n * Defines a `graphics` statement element that moves the sprite forward.\n */\nexport class ElementMoveForward extends ElementStatement {\n    constructor() {\n        super('move-forward', 'forward', { steps: ['number'] });\n    }\n\n    /**\n     * Moves the sprite `steps` forward.\n     */\n    onVisit(params: { [key: string]: TData }): void {\n        _move(params['steps'] as number);\n    }\n}\n\n/**\n * @class\n * Defines a `graphics` statement element that moves the sprite backward.\n */\nexport class ElementMoveBackward extends ElementStatement {\n    constructor() {\n        super('move-backward', 'backward', { steps: ['number'] });\n    }\n\n    /**\n     * Moves the sprite `steps` backward.\n     */\n    onVisit(params: { [key: string]: TData }): void {\n        _move(-params['steps'] as number);\n    }\n}\n\n/**\n * @class\n * Defines a `graphics` statement element that rotates the sprite to the right.\n */\nexport class ElementTurnRight extends ElementStatement {\n    constructor() {\n        super('turn-right', 'right', { angle: ['number'] });\n    }\n\n    /**\n     * Rotates the sprite right by `angle`.\n     */\n    onVisit(params: { [key: string]: TData }): void {\n        _turn(-params['angle'] as number);\n    }\n}\n\n/**\n * @class\n * Defines a `graphics` statement element that rotates the sprite to the left.\n */\nexport class ElementTurnLeft extends ElementStatement {\n    constructor() {\n        super('turn-left', 'left', { angle: ['number'] });\n    }\n\n    /**\n     * Rotates the sprite left by `angle`.\n     */\n    onVisit(params: { [key: string]: TData }): void {\n        _turn(params['angle'] as number);\n    }\n}\n\n/**\n * @class\n * Defines a `graphics` statement element that updates the sprite position to (x, y).\n */\nexport class ElementSetXY extends ElementStatement {\n    constructor() {\n        super('set-xy', 'set-xy', { x: ['number'], y: ['number'] });\n    }\n\n    /**\n     * Updates the sprite position to (`x`, `y`).\n     */\n    onVisit(params: { [key: string]: TData }): void {\n        const [x1, y1, x2, y2] = [\n            _state.position.x,\n            _state.position.y,\n            -params['x'] as number,\n            params['y'] as number,\n        ];\n\n        _state.position = { x: x2, y: y2 };\n\n        if (_state.drawing) {\n            sketch.drawLine(x1, y1, x2, y2);\n        }\n    }\n}\n\n/**\n * @class\n * Defines a `graphics` statement element that updates the sprite heading.\n */\nexport class ElementSetHeading extends ElementStatement {\n    constructor() {\n        super('set-heading', 'set-heading', { angle: ['number'] });\n    }\n\n    /**\n     * Sets the sprite heading to the `angle`.\n     */\n    onVisit(params: { [key: string]: TData }): void {\n        _state.heading = (params['angle'] as number) + 90;\n    }\n}\n\n/**\n * @class\n * Defines a `graphics` statement element that moves the sprite along an arc.\n */\nexport class ElementDrawArc extends ElementStatement {\n    constructor() {\n        super('draw-arc', 'draw-arc', { radius: ['number'], angle: ['number'] });\n    }\n\n    /**\n     * Moves the sprite along arc with `radius` and `angle`.\n     */\n    onVisit(params: { [key: string]: TData }): void {\n        const radius = params['radius'] as number;\n        const angle = params['angle'] as number;\n\n        const direction = Math.sign(angle);\n        const theta = direction === 1 ? _state.heading + angle - 90 : _state.heading + angle + 90;\n\n        const [xCentre, yCentre] = [\n            _state.position.x + radius * Math.cos(degToRad(_state.heading + direction * 90)),\n            _state.position.y + radius * Math.sin(degToRad(_state.heading + direction * 90)),\n        ];\n\n        if (_state.drawing) {\n            const [startAngle, stopAngle] =\n                direction === 1 ? [theta - angle, theta] : [theta, theta - angle];\n            sketch.drawArc(xCentre, yCentre, radius * 2, radius * 2, startAngle, stopAngle);\n        }\n\n        _state.heading += angle;\n        _state.position = {\n            x: xCentre + radius * Math.cos(degToRad(theta)),\n            y: yCentre + radius * Math.sin(degToRad(theta)),\n        };\n    }\n}\n\n/**\n * @class\n * Defines a `pen` statement element that sets the pen color.\n */\nexport class ElementSetColor extends ElementStatement {\n    constructor() {\n        super('set-color', 'set color', { value: ['number'] });\n    }\n\n    /**\n     * Sets the pen color to the `value`.\n     */\n    onVisit(params: { [key: string]: TData }): void {\n        const value = ((params['value'] as number) - 1) % 10;\n        sketch.setColor(..._colorMap[value]);\n    }\n}\n\n/**\n * @class\n * Defines a `pen` statement element that sets the pen thickness.\n */\nexport class ElementSetThickness extends ElementStatement {\n    constructor() {\n        super('set-thickness', 'set-thickness', { value: ['number'] });\n    }\n\n    /**\n     * Sets the pen thickness to the `value`.\n     */\n    onVisit(params: { [key: string]: TData }): void {\n        sketch.setThickness(params['value'] as number);\n    }\n}\n\n/**\n * @class\n * Defines a `pen` statement element that sets the pen thickness.\n */\nexport class ElementPenUp extends ElementStatement {\n    constructor() {\n        super('pen-up', 'pen-up', {});\n    }\n\n    /**\n     * Disables drawing while moving.\n     */\n    onVisit(): void {\n        _state.drawing = false;\n    }\n}\n\n/**\n * @class\n * Defines a `pen` statement element that sets the pen thickness.\n */\nexport class ElementPenDown extends ElementStatement {\n    constructor() {\n        super('pen-down', 'pen-down', {});\n    }\n\n    /**\n     * Enables drawing while moving.\n     */\n    onVisit(): void {\n        _state.drawing = true;\n    }\n}\n\n/**\n * @class\n * Defines a `pen` statement element that sets the background color.\n */\nexport class ElementSetBackground extends ElementStatement {\n    constructor() {\n        super('set-background', 'set-background', { value: ['number'] });\n    }\n\n    /**\n     * Sets the background color to the `value`.\n     */\n    onVisit(params: { [key: string]: TData }): void {\n        const value = ((params['value'] as number) - 1) % 10;\n        updateBackgroundColor('set', _colorMap[value]);\n    }\n}\n\n/**\n * @class\n * Defines a `pen` statement element that clears the canvas and the background.\n */\nexport class ElementClear extends ElementStatement {\n    constructor() {\n        super('clear', 'clear', {});\n    }\n\n    /**\n     * Clears the canvas and the background.\n     */\n    onVisit(): void {\n        sketch.clear();\n        updateBackgroundColor('unset');\n    }\n}\n"],"sourceRoot":""}