{"version":3,"sources":["components/painter/view/components/utils/background.ts"],"names":["setupCartesian","container","getBoundingClientRect","width","height","p5","p","setup","createCanvas","noLoop","delta","piecesVer","Math","floor","piecesHor","stroke","strokeWeight","i","line"],"mappings":"4GAAA,2EAMO,SAASA,EAAeC,GAC3B,MAA0BA,EAAUC,wBAA5BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAEf,IAAIC,KAAG,SAACC,GACJA,EAAEC,MAAQ,WACND,EAAEE,aAAaL,EAAOC,GACtBE,EAAEG,SAEF,IAAIC,EAAQ,GACRC,EAAYC,KAAKC,OAAOP,EAAEH,OAAS,GAAKO,GACxCI,EAAYF,KAAKC,OAAOP,EAAEF,QAAU,GAAKM,GAE7CJ,EAAES,OAAO,IAAK,IAAK,KACnBT,EAAEU,aAAa,GACf,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAWM,IAC5BX,EAAEY,MAAMZ,EAAEH,OAAS,GAAKc,EAAIP,EAAO,GAAIJ,EAAEH,OAAS,GAAKc,EAAIP,EAAOJ,EAAEF,QACpEE,EAAEY,MAAMZ,EAAEH,OAAS,GAAKc,EAAIP,EAAO,GAAIJ,EAAEH,OAAS,GAAKc,EAAIP,EAAOJ,EAAEF,QAExE,IAAK,IAAIa,EAAI,EAAGA,GAAKH,EAAWG,IAC5BX,EAAEY,KAAK,GAAIZ,EAAEF,QAAU,GAAKa,EAAIP,EAAOJ,EAAEH,OAAQG,EAAEF,QAAU,GAAKa,EAAIP,GACtEJ,EAAEY,KAAK,GAAIZ,EAAEF,QAAU,GAAKa,EAAIP,EAAOJ,EAAEH,OAAQG,EAAEF,QAAU,GAAKa,EAAIP,GAG1EA,EAAQ,IACRC,EAAYC,KAAKC,OAAOP,EAAEH,OAAS,GAAKO,GACxCI,EAAYF,KAAKC,OAAOP,EAAEF,QAAU,GAAKM,GAEzCJ,EAAES,OAAO,IAAK,IAAK,KACnBT,EAAEU,aAAa,GACf,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAWM,IAC5BX,EAAEY,MAAMZ,EAAEH,OAAS,GAAKc,EAAIP,EAAO,GAAIJ,EAAEH,OAAS,GAAKc,EAAIP,EAAOJ,EAAEF,QACpEE,EAAEY,MAAMZ,EAAEH,OAAS,GAAKc,EAAIP,EAAO,GAAIJ,EAAEH,OAAS,GAAKc,EAAIP,EAAOJ,EAAEF,QAExE,IAAK,IAAIa,EAAI,EAAGA,GAAKH,EAAWG,IAC5BX,EAAEY,KAAK,GAAIZ,EAAEF,QAAU,GAAKa,EAAIP,EAAOJ,EAAEH,OAAQG,EAAEF,QAAU,GAAKa,EAAIP,GACtEJ,EAAEY,KAAK,GAAIZ,EAAEF,QAAU,GAAKa,EAAIP,EAAOJ,EAAEH,OAAQG,EAAEF,QAAU,GAAKa,EAAIP,GAG1EJ,EAAES,OAAO,IAAK,IAAK,KACnBT,EAAEU,aAAa,GACfV,EAAEY,KAAKZ,EAAEH,OAAS,EAAG,EAAGG,EAAEH,OAAS,EAAGG,EAAEF,QACxCE,EAAEY,KAAK,EAAGZ,EAAEF,QAAU,EAAGE,EAAEH,MAAOG,EAAEF,QAAU,MAEnDH","file":"static/js/20.49b7d977.chunk.js","sourcesContent":["import p5 from 'p5';\n\n/**\n * Sets up a canvas with a cartesian grid.\n * @param container DOM container of the grid\n */\nexport function setupCartesian(container: HTMLElement): void {\n    const { width, height } = container.getBoundingClientRect();\n\n    new p5((p: p5) => {\n        p.setup = () => {\n            p.createCanvas(width, height);\n            p.noLoop();\n\n            let delta = 10;\n            let piecesVer = Math.floor((p.width >> 1) / delta);\n            let piecesHor = Math.floor((p.height >> 1) / delta);\n\n            p.stroke(252, 252, 252);\n            p.strokeWeight(1);\n            for (let i = 1; i <= piecesVer; i++) {\n                p.line((p.width >> 1) + i * delta, 0, (p.width >> 1) + i * delta, p.height);\n                p.line((p.width >> 1) - i * delta, 0, (p.width >> 1) - i * delta, p.height);\n            }\n            for (let i = 1; i <= piecesHor; i++) {\n                p.line(0, (p.height >> 1) + i * delta, p.width, (p.height >> 1) + i * delta);\n                p.line(0, (p.height >> 1) - i * delta, p.width, (p.height >> 1) - i * delta);\n            }\n\n            delta = 100;\n            piecesVer = Math.floor((p.width >> 1) / delta);\n            piecesHor = Math.floor((p.height >> 1) / delta);\n\n            p.stroke(244, 244, 244);\n            p.strokeWeight(1);\n            for (let i = 1; i <= piecesVer; i++) {\n                p.line((p.width >> 1) + i * delta, 0, (p.width >> 1) + i * delta, p.height);\n                p.line((p.width >> 1) - i * delta, 0, (p.width >> 1) - i * delta, p.height);\n            }\n            for (let i = 1; i <= piecesHor; i++) {\n                p.line(0, (p.height >> 1) + i * delta, p.width, (p.height >> 1) + i * delta);\n                p.line(0, (p.height >> 1) - i * delta, p.width, (p.height >> 1) - i * delta);\n            }\n\n            p.stroke(240, 240, 240);\n            p.strokeWeight(2);\n            p.line(p.width >> 1, 0, p.width >> 1, p.height);\n            p.line(0, p.height >> 1, p.width, p.height >> 1);\n        };\n    }, container);\n}\n"],"sourceRoot":""}