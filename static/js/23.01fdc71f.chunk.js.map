{"version":3,"sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/regenerator/index.js","../../../../src/syntax/elements/elementInstruction.ts","../../../../src/syntax/warehouse/warehouse.ts","../../src/index.ts","../../../../src/syntax/elements/elementArgument.ts","../../../src/execution/interpreter.ts","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../../src/syntax/specification/specification.ts","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../../../../src/syntax/elements/elementSyntax.ts","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../../../../src/syntax/tree/syntaxTree.ts","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../../../../src/syntax/tree/node.ts","../node_modules/@babel/runtime/helpers/get.js","../../../../src/library/elements/elementValue.ts","../../../../src/library/elements/elementBox.ts","../../../../src/library/elements/elementBoxIdentifier.ts","../../../../src/library/elements/elementOperatorMath.ts","../../../../src/library/elements/elementLoop.ts","../../../../src/library/elements/elementConditional.ts","../../../../src/library/elements/elementProgram.ts","../../../../src/library/elements/elementPrint.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/version.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../../../src/execution/symbolTable.ts","../../../src/execution/parser.ts","../../../src/library/specification.ts"],"names":["module","exports","instance","Constructor","TypeError","__esModule","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","setPrototypeOf","subClass","superClass","create","constructor","value","getPrototypeOf","isNativeReflectConstruct","possibleConstructorReturn","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","Reflect","construct","arguments","apply","_slicedToArray","arr","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","args","undefined","specification_1","name","label","_getPrototypeOf","o","__proto__","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_unsupportedIterableToArray","minLen","n","toString","slice","from","test","arrayLikeToArray","_arrayLikeToArray","len","arr2","ReferenceError","arrayWithoutHoles","iterableToArray","nonIterableSpread","nodeConnecting","nodeConnector","specificationConnector","allowArrayLike","it","F","s","e","f","normalCompletion","didErr","step","_e2","_elementName","superPropBase","_get","get","property","receiver","base","desc","getOwnPropertyDescriptor","times","condition","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","byteToHex","substr","stringify","_nodeId","_clockseq","offset","toLowerCase","_lastMSecs","_lastNSecs","v1","options","buf","b","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","parse","v","parseInt","version","hashfunc","generateUUID","namespace","str","unescape","encodeURIComponent","bytes","charCodeAt","stringToBytes","set","DNS","URL","getOutputLength","inputLength8","safeAdd","x","y","lsw","md5cmn","q","a","t","num","cnt","md5ff","c","d","md5gg","md5hh","md5ii","md5","v3","v35","msg","input","output","length32","hexTab","hex","charAt","md5ToHexEncodedArray","olda","oldb","oldc","oldd","wordsToMd5","length8","Uint32Array","bytesToWords","v4","rnds","z","ROTL","sha1","v5","K","H","l","N","Math","ceil","M","j","pow","floor","_i2","W","_t","_t2","T","_createForOfIteratorHelper","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","_setPrototypeOf","p","sham","Proxy","Boolean","valueOf","_typeof","assertThisInitialized","table","frame","category"],"mappings":"yGAMAA,EAAOC,QANP,SAAyBC,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,sCAIUJ,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,cCNvG,SAASK,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAalDX,EAAOC,QATP,SAAsBE,EAAae,EAAYC,GAM7C,OALID,GAAYZ,EAAkBH,EAAYiB,UAAWF,GACrDC,GAAab,EAAkBH,EAAagB,GAChDJ,OAAOC,eAAeb,EAAa,YAAa,CAC9CW,UAAU,IAELX,GAGsBH,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,gBCnBpG,IAAIoB,EAAiB,EAAQ,KAoB7BrB,EAAOC,QAlBP,SAAmBqB,EAAUC,GAC3B,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAInB,UAAU,sDAGtBkB,EAASF,UAAYL,OAAOS,OAAOD,GAAcA,EAAWH,UAAW,CACrEK,YAAa,CACXC,MAAOJ,EACPR,UAAU,EACVD,cAAc,KAGlBE,OAAOC,eAAeM,EAAU,YAAa,CAC3CR,UAAU,IAERS,GAAYF,EAAeC,EAAUC,IAGfvB,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,gBCpBjG,IAAI0B,EAAiB,EAAQ,IAEzBC,EAA2B,EAAQ,KAEnCC,EAA4B,EAAQ,KAmBxC7B,EAAOC,QAjBP,SAAsB6B,GACpB,IAAIC,EAA4BH,IAChC,OAAO,WACL,IACII,EADAC,EAAQN,EAAeG,GAG3B,GAAIC,EAA2B,CAC7B,IAAIG,EAAYP,EAAeQ,MAAMV,YACrCO,EAASI,QAAQC,UAAUJ,EAAOK,UAAWJ,QAE7CF,EAASC,EAAMM,MAAMJ,KAAMG,WAG7B,OAAOT,EAA0BM,KAAMH,KAIZhC,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,2ECnBrF,SAASuC,EAAeC,EAAKhC,GAC1C,OCLa,SAAyBgC,GACtC,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKhC,GACjD,IAAImC,EAAY,MAAPH,EAAc,KAAyB,qBAAXI,QAA0BJ,EAAII,OAAOC,WAAaL,EAAI,cAE3F,GAAU,MAANG,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKX,KAAQS,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGrB,QAETjB,GAAKwC,EAAKvC,SAAWD,GAH4ByC,GAAK,IAK5D,MAAOM,GACPL,GAAK,EACLH,EAAKQ,EACL,QACA,IACON,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBR,EAAKhC,IAAM,OAAAgD,EAAA,GAA2BhB,EAAKhC,IGLjF,WACb,MAAM,IAAIL,UAAU,6IHIgF,K,kCILtG,SAASsD,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ9C,EAAK+C,GACpE,IACE,IAAIC,EAAON,EAAI1C,GAAK+C,GAChBtC,EAAQuC,EAAKvC,MACjB,MAAOwC,GAEP,YADAL,EAAOK,GAILD,EAAKX,KACPM,EAAQlC,GAERyC,QAAQP,QAAQlC,GAAO0C,KAAKN,EAAOC,GAIxB,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOpC,KACPqC,EAAOlC,UACX,OAAO,IAAI6B,SAAQ,SAAUP,EAASC,GACpC,IAAIF,EAAMW,EAAG/B,MAAMgC,EAAMC,GAEzB,SAASV,EAAMpC,GACbgC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQrC,GAGlE,SAASqC,EAAOP,GACdE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASP,GAGnEM,OAAMW,OA/BZ,mC,gBCAAzE,EAAOC,QAAU,EAAQ,M,oNCGzB,IAasB,E,8BAQlB,WACI,EACA,EACA,EACA,GAAsC,6BAEhC,EAAM,EAAO,cAAe,EAAM,G,aA3BhD,MAaiD,eAAjD,uB,IA4BsB,E,8BAOlB,WAAY,EAAc,EAAe,GAAsC,6BACrE,EAAM,EAAO,YAAa,G,aARO,GAA/C,qB,IAsBsB,E,8BAOlB,WAAY,EAAc,EAAe,GAAsC,6BACrE,EAAM,EAAO,QAAS,G,aARO,GAA3C,kB,mWClEA,aAGA,QAQA,QAWI,GALqC,cAEM,oBAGe,IAE1D,EAA0D,GAE1D,EAA0D,GAE1D,EAA8D,GAG9D,EA8BA,GAsQJ,SAAgB,IACZ,EAAc,GAjMZ,EAAqB,IACrB,EAAF,qBAAkB,SAAQ,SAAC,GAAD,OAAkB,EAAqB,GAAe,KAOhF,EAAuB,CACnB,SAAU,EACV,YAAa,GAQjB,EAAuB,CACnB,KAAM,EACN,WAAY,EACZ,UAAW,EACX,MAAO,GAQT,EAAyB,IAC3B,4BAAuB,SAAQ,SAAC,GAAD,OAAe,EAAyB,GAAY,KAUvF,uBAA4B,GACxB,IAAM,GAAuB,+BAA0B,GAEvD,GAA6B,OAAzB,EACA,MAAM,MAAK,iDAA2C,EAA3C,qBAGf,IAEI,EA6BA,EA/BI,EAAqC,EAArC,MAAO,EAA8B,EAA9B,KAAM,EAAwB,EAAxB,SAAU,EAAc,EAAd,UAyBvB,EAAY,EACR,EACA,GAKZ,GACI,GAAa,gBACR,KAAc,GAIvB,OAhJJ,SACI,EACA,EACA,EACA,EACA,GAEA,IAAM,EAAgB,SAAT,GAA4B,eAAT,EAAwB,WAAa,cAErE,OAAQ,GACJ,IAAK,OASL,IAAK,aACD,EAAY,GAAc,CACtB,SAAU,EACV,KAAM,EACN,KAAM,EACN,KAAM,WACN,SAAU,GAEd,MACJ,IAAK,YASL,IAAK,QACD,EAAY,GAAc,CACtB,SAAU,EACV,KAAM,EACN,KAAM,EACN,KAAM,cACN,SAAU,GAKtB,EAAqB,KACrB,EAAqB,KACrB,EAAqB,KACrB,EAAyB,KA2FzB,CAAa,EAAa,EAAY,EAAU,EAAM,GAE/C,GAQX,uBAA4B,GAOxB,OAAO,KAAc,EAAa,iBAAM,EAAY,IAAgB,MAOxE,0BAA+B,GAC3B,GAAM,KAAc,EAApB,CAIA,MAAuC,EAAY,GAA3C,EAAR,EAAQ,KAAM,EAAd,EAAc,KAAM,EAApB,EAAoB,KAAM,EAA1B,EAA0B,SAC1B,EAAqB,KACrB,EAAqB,KACrB,EAAqB,KACrB,EAAyB,YAClB,EAAY,KAQvB,wBAA6B,GACzB,OAAO,EAAqB,IAOhC,6BACI,wBAAY,IAQhB,wBAA6B,GACzB,OAAO,EAAqB,IAOhC,6BACI,wBAAY,IAQhB,wBAA6B,GACzB,OAAO,EAAqB,IAOhC,6BACI,wBAAY,IAQhB,4BAAiC,GAC7B,OAAO,EAAyB,IAOpC,iCACI,wBAAY,IAMhB,mBAQA,K,25CCrUA,YAAS,4FAAa,wGACtB,YAAS,sGAAkB,8FAM3B,YACI,iGAAAyE,EAAA,qCACA,4IACA,oIACA,wIACA,wHACA,oGACA,8GACA,kIACA,sHACA,8GAOJ,YACI,oGACA,oGACA,wFACA,oFACA,sGACA,8GACA,oGACA,oGAKJ,YACI,4FACA,8FACA,oGACA,8FACA,oGACA,8FACA,oGACA,sGACA,4GAOJ,YACI,oGACA,gGACA,kHACA,gHACA,4EAOJ,aAAS,oGAIT,YACI,4GACA,0GACA,0GAGJ,YACI,wGACA,wGACA,sGACA,sGAGJ,YACI,4HACA,4HACA,0HACA,0HAGJ,YACI,oHACA,sHACA,sHACA,wHACA,0HAGJ,YAAS,wFAET,YAAS,gGAET,YAAS,8FAET,YAAS,kGAAgB,mG,6MC1GzB,IAcsB,E,8BAelB,WACI,EACA,EACA,EACA,EACA,EACA,GAAe,wBAEf,cAAM,EAAM,EAAO,WAAY,EAAM,IAEhC,YAAc,EACnB,EAAK,OAAS,EALC,E,kCAQnB,WACI,OAAO,KAAK,c,iBAGhB,WACI,OAAO,KAAK,W,GAhDpB,MAciD,eAAjD,oB,IA8CsB,E,8BASlB,WACI,EACA,EACA,EACA,EACA,GAAe,6BAETC,EAAMC,EAAO,OAAQ,EAAQ,EAAY,G,aAhBV,GAA7C,gB,IA+BsB,E,8BAYlB,WACI,EACA,EACA,EACA,EACA,GAAe,6BAET,EAAM,EAAO,aAAc,EAAQ,EAAY,G,aAlBjD,GADZ,uB,uPC3FA,aACA,SAEA,QAKA,QAeA,2BAAgC,EAAkB,EAAqB,IACnE,uBAAkB,EAAU,EAAU,IAQ1C,yBAA8B,GAC1B,OAAO,uBAAkB,IAO7B,kCAAuC,IACnC,mBAAc,IAMlB,oCACM,EAAF,sBAOJ,eAAoB,GAAc,IACf,EADe,iGACU,eAIM,qBAI5C,EAAF,oBAAiB,GAEf,IAAI,EAAiC,IAErC,SAAO,IACD,IAAE,GAAU,sBAEZ,GAAY,OAAZ,GAIJ,IAAQ,EAA2B,EAA3B,SAAU,EAAiB,EAAjB,KAAM,EAAW,EAAX,OACxB,GAAa,aAAT,EAAqB,CACjB,aAAoB,EACpB,EAAS,WAER,EAAoC,SAAS,GAGlD,IAAM,EAAS,EAA+C,MAE/C,OAAX,IACA,EAAK,GAAU,QAGf,aAAoB,oBAGL,iBAAX,EAFJ,EAAS,QAAQ,GAKZ,EAA0B,SAKvC,KAGJ,K,iBC1GJ,SAASC,EAAgBC,GAIvB,OAHA9E,EAAOC,QAAU4E,EAAkB9D,OAAOM,eAAiBN,OAAOY,eAAiB,SAAyBmD,GAC1G,OAAOA,EAAEC,WAAahE,OAAOY,eAAemD,IAC3C9E,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,QACjE4E,EAAgBC,GAGzB9E,EAAOC,QAAU4E,EAAiB7E,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,gBCPvG,IAAI+E,EAAiB,EAAQ,KAEzBC,EAAuB,EAAQ,KAE/BxB,EAA6B,EAAQ,IAErCyB,EAAkB,EAAQ,KAM9BlF,EAAOC,QAJP,SAAwBwC,EAAKhC,GAC3B,OAAOuE,EAAevC,IAAQwC,EAAqBxC,EAAKhC,IAAMgD,EAA2BhB,EAAKhC,IAAMyE,KAGrElF,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,qCCZtG,8CACe,SAASkF,EAA4BL,EAAGM,GACrD,GAAKN,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,YAAiBA,EAAGM,GACtD,IAAIC,EAAItE,OAAOK,UAAUkE,SAASlC,KAAK0B,GAAGS,MAAM,GAAI,GAEpD,MADU,WAANF,GAAkBP,EAAErD,cAAa4D,EAAIP,EAAErD,YAAYkD,MAC7C,QAANU,GAAqB,QAANA,EAAoB3C,MAAM8C,KAAKV,GACxC,cAANO,GAAqB,2CAA2CI,KAAKJ,GAAW,YAAiBP,EAAGM,QAAxG,K,iaCMF,IAAI,EAMA,GAMA,EAEA,GAUJ,SAAgB,EACZ,EACA,GAEE,GAAE,KAAQ,EAAuB,OAAO,EAE1C,IAAQ,EAAqC,EAArC,MAAO,EAA8B,EAA9B,KAAM,EAAwB,EAAxB,SAAU,EAAc,EAAd,UAEzB,EAAiD,CACnD,QACA,OACA,WAEA,UAAW,SAAC,EAAc,GAAf,OAAiC,IAAI,EAAU,EAAM,KAG9D,EAAiE,CACnE,QACA,OACA,WACA,cAAe,EAAU,MAoB7B,OAjBA,OAAO,QAAQ,GAAe,SAAQ,YAAiB,aAAf,EAAe,KAAV,EAAU,KAC9C,CAAC,QAAS,OAAQ,WAAY,aAAa,SAAS,KAErD,EAAwB,GAAO,EAE/B,EAAgC,GAAO,MAI7C,EAAoB,GAAQ,EAM9B,EAA8B,GAAQ,EAE/B,KAAQ,EAwBnB,SAAgB,EAAgC,GAC5C,OAAI,KAAQ,WACD,EAAsB,UACtB,EAA8B,IAC9B,GAoDf,SAAgB,IACZ,EAAwB,GACxB,EAAgC,GA1HpC,sCAiDA,+CAAoD,GAGhD,IAAM,EAA4B,GAIlC,OAHA,OAAO,QAAQ,GAAe,SAAQ,yBAAE,EAAF,KAAc,EAAd,YAClC,EAAe,KAAK,EAAkC,EAAY,OAE/D,GAQX,oCAeA,6CAAkD,GAC9C,IAAM,EAA0B,GAEhC,OADA,EAAM,SAAQ,SAAC,GAAD,OAAU,EAAa,KAAK,EAAgC,OACnE,GAQX,qCACI,GAOA,OAAO,KAAQ,EAAuB,iBAAM,EAAsB,IAAU,MAOhF,6BACM,OAAK,OAAO,KAAK,IAOvB,kCACM,OAAF,EAAW,IAAI,IAAI,OAAO,QAAQ,GAAuB,KAAI,0CAAO,eAMxE,mCAUA,sCAGI,OAAO,GASX,gCAAqC,EAAc,GAC/C,GAAI,WAAY,EAAsB,GAAO,CACzC,IAKQ,EALF,EAAU,EAAsB,GAAoC,OAE1E,OAAI,aAAkB,MACX,EAAO,SAAS,IAInB,EADA,CAAC,OAAQ,SAAS,SAAS,GACX,UACR,MAAM,OAAO,IAGL,SAFA,SAMhB,EAAO,MAAM,SAAS,IAA+B,EAAO,MAAM,SAAS,WAIvF,OAAO,GAGX,K,gBC3MA,IAAIM,EAAmB,EAAQ,IAW/B1F,EAAOC,QATP,SAAqC6E,EAAGM,GACtC,GAAKN,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAOY,EAAiBZ,EAAGM,GACtD,IAAIC,EAAItE,OAAOK,UAAUkE,SAASlC,KAAK0B,GAAGS,MAAM,GAAI,GAEpD,MADU,WAANF,GAAkBP,EAAErD,cAAa4D,EAAIP,EAAErD,YAAYkD,MAC7C,QAANU,GAAqB,QAANA,EAAoB3C,MAAM8C,KAAKV,GACxC,cAANO,GAAqB,2CAA2CI,KAAKJ,GAAWK,EAAiBZ,EAAGM,QAAxG,IAG4CpF,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,iCCXpG,SAAS0F,EAAkBlD,EAAKmD,IAClC,MAAPA,GAAeA,EAAMnD,EAAI/B,UAAQkF,EAAMnD,EAAI/B,QAE/C,IAAK,IAAID,EAAI,EAAGoF,EAAO,IAAInD,MAAMkD,GAAMnF,EAAImF,EAAKnF,IAC9CoF,EAAKpF,GAAKgC,EAAIhC,GAGhB,OAAOoF,EAPT,mC,cCQA7F,EAAOC,QARP,SAAgCsE,GAC9B,QAAa,IAATA,EACF,MAAM,IAAIuB,eAAe,6DAG3B,OAAOvB,GAGgCvE,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,6ICMxF,E,WAyBhB,SAAF,EACI,EACA,EACA,EACA,EACA,GAAsC,UAEtC,KAAK,MAAQ,EACb,KAAK,OAAS,EACd,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,QAAU,EACf,KAAK,WAAa,OAAO,KAAK,KAAK,SACnC,KAAK,UAAY,KAAK,UAAU,O,4BAGpC,WACI,OAAO,KAAK,Q,iBAGhB,WACI,OAAO,KAAK,S,gBAGhB,WACI,OAAO,KAAK,Q,gBAGhB,WACI,OAAO,KAAK,Q,oBAGhB,WACI,OAAO,KAAK,Y,qBAGhB,WACI,OAAO,KAAK,a,wBAGT,SAAW,GACd,OAAO,KAAK,QAAQ,K,yBAGjB,SAAY,GACf,KAAK,OAAS,M,KAtEtB,mB,gBCdA,IAAI8F,EAAoB,EAAQ,KAE5BC,EAAkB,EAAQ,KAE1BvC,EAA6B,EAAQ,IAErCwC,EAAoB,EAAQ,KAMhCjG,EAAOC,QAJP,SAA4BwC,GAC1B,OAAOsD,EAAkBtD,IAAQuD,EAAgBvD,IAAQgB,EAA2BhB,IAAQwD,KAGzDjG,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,cCF1GD,EAAOC,QAVP,SAA2BwC,EAAKmD,IACnB,MAAPA,GAAeA,EAAMnD,EAAI/B,UAAQkF,EAAMnD,EAAI/B,QAE/C,IAAK,IAAID,EAAI,EAAGoF,EAAO,IAAInD,MAAMkD,GAAMnF,EAAImF,EAAKnF,IAC9CoF,EAAKpF,GAAKgC,EAAIhC,GAGhB,OAAOoF,GAG2B7F,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,mfCVzG,aAIA,QAOA,QACA,QAkBM,EAA2C,GAG7C,EAOA,CACA,QAAS,GACT,QAAS,GACT,OAAQ,IASZ,SAAS,EAAa,GAClB,GAAM,KAAU,EAAhB,CAIA,IAAM,EAAO,EAAS,IACtB,oBAAe,EAAK,mBACb,EAAS,IASpB,SAAS,EAAwB,EAAyB,GACtD,KAAM,KAAmB,MAAe,KAAoB,GACxD,OAAO,EAGX,IAAM,EAAgB,EAAS,GACzB,EAAiB,EAAS,GAE1B,GAAyB,+BAA0B,EAAc,aACjE,GAA0B,+BAA0B,EAAe,aAEzE,MACoC,SAAhC,EAAuB,MACS,eAAhC,EAAuB,MACU,SAAjC,EAAwB,MACS,eAAjC,EAAwB,KAoChC,SAAgB,EAAQ,GACpB,IACI,EAKA,EANE,GAAa,iBAAY,GAE/B,GACI,GAAS,gBACJ,KAAU,GAKnB,QADsB,+BAA0B,GAC1B,MAClB,IAAK,OACD,EAAO,IAAI,eAAa,EAAM,EAAQ,GACtC,MACJ,IAAK,aACD,EAAO,IAAI,qBAAmB,EAAM,EAAQ,GAC5C,MACJ,IAAK,YACD,EAAO,IAAI,oBAAkB,EAAM,EAAQ,GAC3C,MAEJ,QACI,EAAO,IAAI,gBAAc,EAAM,EAAQ,GAY7C,OATF,EAAS,GAAU,EACN,YAAT,EACA,EAAW,QAAY,KAAK,GACZ,YAAT,EACP,EAAW,QAAY,KAAK,GAE5B,EAAW,OAAW,KAAK,GAGxB,EAQX,SAAgB,EAAQ,GACpB,OAAO,KAAU,EAAW,EAAS,GAAU,KAgCnD,SAAgB,IACZ,OAAO,QAAQ,GAAU,SAAQ,YAC7B,EAD0C,cAI9C,EAAc,CACV,QAAS,GACT,QAAS,GACT,OAAQ,IA0DhB,SAAgB,EACZ,EACA,EACA,GAEE,IAAI,EAAgB,EAAS,GAIzB,EAAiB,EAAS,GAEhC,EAAc,UAAU,EAAS,GACjC,EAAe,YAAc,EAEzB,EAAY,OAAO,SAAS,IAC5B,EAAY,OAAO,OAAO,EAAY,OAAO,QAAQ,GAAiB,GA6F9E,SAAgB,EAAuB,EAAyB,GAC5D,IAAM,EAAgB,EAAS,GACzB,EAAiB,EAAS,GAEhC,EAAc,gBAAkBiG,EAEhC,EAAe,iBAAmB,EAClC,EAAe,UAAY,EAAc,UACzC,EAAe,YAAc,EAAc,YAEvC,EAAY,OAAO,SAAS,IAC5B,EAAY,OAAO,OAAO,EAAY,OAAO,QAAQ,GAAiB,GAyG9E,SAAgB,EAAwB,EAAyB,GAC3D,IAAI,EAAgB,EAAS,GACzB,EAAiB,EAAS,GAEhC,EAAc,gBAAkB,EAC9B,EAAY,aAEZ,EAAa,YAAc,EAC7B,EAAe,UAAY,EAAc,UAAY,EAEjD,EAAY,OAAO,SAAS,IAC5B,EAAY,OAAO,OAAO,EAAY,OAAO,QAAQ,GAAiB,GA/Y9E,6BACM,OAAK,EAAW,SAMtB,6BACI,OAAO,EAAW,SAMtB,uBACI,OAAO,EAAW,QAQtB,YA0CA,YAQA,sBAA2B,GACvB,GAAM,KAAU,EAAhB,CAIE,IAEE,EAFE,EAAO,EAAS,IAKlB,EADqB,YAArB,EAAK,YACE,EAAW,QACU,YAArB,EAAK,YACL,EAAW,QAEX,EAAW,QAGjB,OAAO,EAAK,QAAQ,GAAO,GAE9B,EAAW,KAMjB,oBAkBA,+BACI,EACA,EACA,GAEA,KAAM,KAAmB,MAAe,KAAoB,GACxD,OAAO,EAGX,IAAM,EAAgB,EAAS,GACzB,EAAiB,EAAS,GAE1B,GAAyB,+BAA0B,EAAc,aACjE,GAA0B,+BAA0B,EAAe,aAEzE,GACoC,SAAhC,EAAuB,MACU,cAAjC,EAAwB,MACS,UAAjC,EAAwB,KAExB,OAAO,EAGX,IAAM,GAAoB,iBAAY,EAAc,YAC9C,GAAqB,iBAAY,EAAe,YAEtD,IAAK,EAAkB,SAAS,UAAU,SAAS,GAC/C,OAAO,EAGT,IA3Ba,EA2BT,EAAgB,EAAkB,SAAS,WAAW,GACtD,EAAkB,EAAmB,SAAoC,WA5BhE,IA8BI,GA9BJ,IA8BX,IAAJ,uBAAmC,KAAxB,EAAwB,QAC/B,IAAK,EAAc,SAAS,GACxB,OAAO,GAhCA,8BAoCb,OAAK,GASX,mBAyBA,0BACI,EACA,EACA,GAEA,IAAM,EAAgB,EAAS,GAIzB,EAAiB,EAAS,GAEhCC,EAAc,UAAU,GACxBD,EAAe,YAAc,KAE7B,EAAY,OAAO,KAAK,IAU5B,uCACI,EACA,GAEA,IAAK,EAAwB,EAAiB,GAC1C,OAAO,EAGX,IAAM,EAAgB,EAAS,GACzB,EAAiB,EAAS,GAE1B,GAAyB,+BAC3B,EAAc,aAEZ,GAA0B,+BAC5B,EAAe,aAGnB,GACK,EAAuB,aACpBE,EAAuB,YAAY,SAAS,EAAe,cAC9D,EAAwB,aACrB,EAAwB,YAAY,SAAS,EAAc,aAE/D,OAAO,EAGT,QAAwC,IAAtC,EAAuB,WACnB,KAAuB,sBAAsB,OAC7C,IAAK,EAAuB,WAAW,SAAS,EAAe,aAC3D,OAAO,OAGX,IAAuD,IAAlD,EAAuB,WACxB,OAAO,EAKjB,QAAyC,IAAvC,EAAwB,WACpB,KAAwB,sBAAsB,OAC9C,IAAK,EAAwB,WAAW,SAAS,EAAc,aAC3D,OAAO,OAGX,IAAuD,IAAlD,EAAuB,WACxB,OAAO,EAKnB,OAAO,GAQX,2BAoBA,kCAAuC,EAAyB,GAC5D,IAAM,EAAgB,EAAS,GACzB,EAAiB,EAAS,GAEhC,EAAc,gBAAkB,KAEhC,EAAe,iBAAmB,KAClC,EAAe,UAAY,EAC3B,EAAe,YAAc,KAE3B,EAAU,OAAO,KAAK,IAS5B,wCACI,EACA,GAEE,IAAG,EAAwB,EAAiB,GACtC,OAAG,EAGX,IAAM,EAAgB,EAAS,GACzB,EAAiB,EAAS,GAE1B,GAAyB,+BAA0B,EAAc,aACjE,GAA0B,+BAA0B,EAAe,aAEzE,GAEwC,UAAhC,EAAuB,MACW,cAAjC,EAAwB,MACY,UAAjC,EAAwB,KAG5B,OAAG,EAGT,GACG,EAAuB,kBACpB,EAAuB,iBAAiB,SAAS,EAAe,cACnE,EAAwB,qBACrB,EAAwB,oBAAoB,SAAS,EAAc,aAEnE,OAAG,EAGT,QAA6C,IAA3C,EAAuB,gBACnB,KAAuB,2BAA2B,OAC5C,IAAD,EAAuB,gBAAgB,SAAS,EAAe,aAChE,OAAO,OAGX,IAA4D,IAAvD,EAAuB,gBACxB,OAAO,EAKjB,QAAgD,IAA9C,EAAwB,kBACxB,GAAI,EAAwB,6BAA6B,OACrD,IAAK,EAAwB,kBAAkB,SAAS,EAAc,aAClE,OAAO,OAGX,IAA8D,IAAzD,EAAuB,kBACxB,OAAO,EAKjB,SAEM,EAAwB,kBACxB,EAAwB,4BAA4B,OACpD,EAAwB,iBAAiB,SACpC,EAAoD,UAAY,KAejF,4BAoBA,mCAAwC,EAAyB,GAC3D,IAAI,EAAgB,EAAS,GACzB,EAAiB,EAAS,GAE9B,EAAY,gBAAkB,KAC9B,EAAY,aAEd,EAAe,YAAc,KAC7B,EAAe,UAAY,EAEzB,EAAU,OAAO,KAAK,IAO5B,8BACI,IAAM,EAA0B,CAC5B,QAAS,EAAY,QAAQ,KAAI,SAAC,GAAD,OAAU,EAAK,YAChD,QAAS,EAAY,QAAQ,KAAI,SAAC,GAAD,OAAU,EAAK,YAChD,OAAQ,IAmBZ,OAhBE,EAAU,OAAO,SAAQ,SAAC,GACxB,GAAI,aAAgB,gBAAgB,aAAgB,qBAChD,EAAS,OAAO,KAAK,CAAC,EAAK,eACxB,CAKH,IAJA,IAAM,EAAgE,GAClE,EAAqD,EAGrC,OAAb,GACH,EAAa,KAAK,EAAS,UAC3B,EAAW,EAAS,gBAExB,EAAS,OAAO,KAAK,OAItB,GAQX,gCAAqC,GAGjC,SAAS,EACL,GAOA,GAA4B,IAAxB,EAAa,OACb,OAAO,KAGX,IAAM,EAAgB,EAAa,KAAI,SAAC,GACpC,IACI,EACJ,QAFsB,+BAA0B,EAAS,aAElC,MACnB,IAAK,OACD,EAAS,EAA2B,GACpC,MACJ,IAAK,aACD,EAAS,EACL,GAEJ,MACJ,IAAK,YACD,EAsEhB,SAAyC,GACrC,IAAM,EAAS,EAAQ,EAAS,aAEhC,OADA,EAA0B,EAAQ,EAAS,QACpC,EAzEc,CACL,GAEJ,MAEJ,QACI,EAAS,EAA4B,GAE7C,OAAO,KAGX,GAAI,EAAc,OAAS,EACvB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAc,OAAS,EAAG,IAC1C,EAAuB,EAAc,GAAI,EAAc,EAAI,IAInE,OAAO,EAAc,GAGzB,SAAS,EACL,EACA,GAIiB,OAAb,GAIJ,OAAO,QAAQ,GAAU,SAAQ,YAAwB,IAKjD,EALiD,SAAtB,EAAsB,KAAb,EAAa,KACpC,OAAb,IAOA,EADuB,UADL,+BAA0B,EAAS,aACvC,KACF,EAA2B,GAE3B,EACR,GAIR,EAAe,EAAQ,EAAW,OAI1C,SAAS,EAA2B,GAChC,IAAM,EAAS,EAAQ,EAAS,aAChC,GAAI,EAAS,MAAO,CAChB,IAAM,GAAW,iBAAY,EAAQ,GAAS,YAAa,SAC3D,KAAI,0BAAqB,EAAS,KAAM,EAAS,OAG7C,MAAM,MAAK,mCACqB,EAAS,MAD9B,iDAC4E,EAAS,KADrF,MAFX,EAAS,YAAY,EAAS,OAOtC,OAAO,EAGX,SAAS,EAAiC,GACtC,IAAM,EAAS,EAAQ,EAAS,aAEhC,OADA,EAA0B,EAAQ,EAAS,QACpC,EASX,SAAS,EAA4B,GACjC,IAAM,EAAS,EAAQ,EAAS,aAChC,EAA0B,EAAQ,EAAS,QAC3C,IAAM,EAAc,EAAuB,EAAS,OAIpD,OAHoB,OAAhB,GACA,EAAwB,EAAQ,GAE7B,EA9GX,IAiHA,IACI,EAAS,QAAQ,SAAQ,SAAC,GAAD,OAAc,EAA4B,MACnE,EAAS,QAAQ,SAAQ,SAAC,GAAD,OAAc,EAA4B,MACnE,EAAS,OAAO,SAAQ,SAAC,GAAD,OAAkB,EAAuB,MACnE,MAAO,GAEL,MADA,IACM,IAUd,2BAAgC,EAAgB,GAC5C,IACI,IAAM,GAAW,iBAAY,EAAQ,GAAS,YAAa,SAC3D,GAAsB,SAAlB,EAAS,QAAmB,0BAAqB,EAAS,KAAM,GAGhE,MAAM,QAFN,EAAS,YAAY,GAI3B,MAAO,GACL,OAAO,EAGX,OAAO,I,gBCtrBX,IAAI3C,EAA6B,EAAQ,IA2DzCzD,EAAOC,QAzDP,SAAoC6E,EAAGuB,GACrC,IAAIC,EAAuB,qBAAXzD,QAA0BiC,EAAEjC,OAAOC,WAAagC,EAAE,cAElE,IAAKwB,EAAI,CACP,GAAI5D,MAAMC,QAAQmC,KAAOwB,EAAK7C,EAA2BqB,KAAOuB,GAAkBvB,GAAyB,kBAAbA,EAAEpE,OAAqB,CAC/G4F,IAAIxB,EAAIwB,GACZ,IAAI7F,EAAI,EAEJ8F,EAAI,aAER,MAAO,CACLC,EAAGD,EACHlB,EAAG,WACD,OAAI5E,GAAKqE,EAAEpE,OAAe,CACxB4C,MAAM,GAED,CACLA,MAAM,EACN5B,MAAOoD,EAAErE,OAGbgG,EAAG,SAAWzD,GACZ,MAAMA,GAER0D,EAAGH,GAIP,MAAM,IAAInG,UAAU,yIAGtB,IAEIoD,EAFAmD,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLJ,EAAG,WACDF,EAAKA,EAAGlD,KAAK0B,IAEfO,EAAG,WACD,IAAIwB,EAAOP,EAAGjD,OAEd,OADAsD,EAAmBE,EAAKvD,KACjBuD,GAETJ,EAAG,SAAWK,GACZF,GAAS,EACTpD,EAAMsD,GAERJ,EAAG,WACD,IACOC,GAAoC,MAAhBL,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIM,EAAQ,MAAMpD,MAMmBxD,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,4RC7ClH,YASsB,E,WAWlB,WAEI,EAEA,EAEA,GAAkB,qBARZ,qBAA+E,GAUrF,KAAK,aAAe,EACpB,KAAK,QAAU,EACf,KAAK,YAAc,GAEF,iBAAY,KAAK,aACzB,SAAS,UAAU,SAAQ,SAAC,GAAD,OAAY,EAAK,gBAAgB,GAAS,Q,8BAKlF,WACI,OAAO,KAAK,U,sBAGhB,WACI,OAAO,KAAK,c,wBAQN,SAAW,EAAiB,GAClC,KAAK,gBAAgB,GAAW,I,wBAO1B,SAAW,GACjB,KAAK,gBAAgB,GAAW,O,6BAM1B,WAAe,WAGf,GAAW,iBAAY,KAAK,aAElC,GAAmC,IAA/B,EAAS,SAAS,SAClB,OAAO,KAEX,KAAK,aAEL,IAAM,EAEF,GAUJ,OARA,EAAS,SAAS,UAAU,SACxB,SAAC,GAAD,OACK,EAAS,GAC0B,OAAhC,EAAK,gBAAgB,GACf,KACA,EAAK,gBAAgB,GAAQ,YAGxC,M,KA/Ef,a,IAwFe,E,8BAAb,SAAF,IAAI,IAAJ,EAAI,SAAJ,S,2BACW,YAAsD,KADjE,E,aAAwC,GAQ3B,E,uHACT,WACI,OAAO,KAAK,e,oBAGhB,WACI,MAAO,CACH,YAAa,KAAK,aAClB,OAAQ,KAAK,a,GARS,GAAlC,iB,IAiBa,E,8BAAb,yC,2BAaW,eAAiB,EAAK,gBAEtB,sDACA,sDAhBX,E,mCACI,WACI,OAAOkC,KAAK4E,e,oBAGhB,WACI,MAAO,CACH,YAAa,KAAK,aAClB,OAAQ5E,KAAK,QACb,OAAQ,KAAK,uB,GATe,GAAxC,uB,IAwBe,E,8BAAb,SAAF,IAAI,IAAJ,MAAI,SAAJ,S,2BACW,eAAiB,EAAK,gBACtB,sDACA,sDAEA,mBAA6D,KAC7D,kBAA4D,KAC5D,YAAoB,EACpB,cAAoC,KAR/C,E,aAA2C,GAe9B,E,uHACT,WACI,OAAO,KAAK,e,oBAGhB,WACI,MAAO,CACH,YAAa,KAAK,aAClB,OAAQ,KAAK,QACb,OAAQ,KAAK,uB,GATc,GAAvC,sB,IAkBa,E,8BAAb,qC,2BAsBW,gBAA4D,KAC5D,aAAqB,EAvBhC,E,mCACI,WACI,OAAO,KAAK,e,oBAGhB,WAII,IAHA,IAAM,EAAyD,GAE3D,EAAqD,KAAK,gBAC1C,OAAb,GACH,EAAM,KAAK,EAAS,UACpB,EAAW,EAAS,gBAGxB,MAAO,CACH,YAAa,KAAK,aAClB,OAAQ,KAAK,QACb,OAAQ,KAAK,kBACb,a,GAlBuB,GAAnC,mB,gBCjMA,IAAI6E,EAAgB,EAAQ,KAE5B,SAASC,IAiBP,MAhBuB,qBAAZ7E,SAA2BA,QAAQ8E,KAC5ClH,EAAOC,QAAUgH,EAAO7E,QAAQ8E,IAAKlH,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,UAE1GD,EAAOC,QAAUgH,EAAO,SAAc1G,EAAQ4G,EAAUC,GACtD,IAAIC,EAAOL,EAAczG,EAAQ4G,GACjC,GAAKE,EAAL,CACA,IAAIC,EAAOvG,OAAOwG,yBAAyBF,EAAMF,GAEjD,OAAIG,EAAKJ,IACAI,EAAKJ,IAAI9D,KAAKd,UAAU5B,OAAS,EAAIH,EAAS6G,GAGhDE,EAAK5F,QACX1B,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,SAGnEgH,EAAK1E,MAAMJ,KAAMG,WAG1BtC,EAAOC,QAAUgH,EAAMjH,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,yNCpB5F,IAYe,E,8BAIX,WAAY,EAAc,EAAe,EAAyB,GAAe,wBAC7E,cAAM,EAAM,GAAI,GAAI,EAAY,IAC3B,YAAY,GAF4D,E,kCAM1E,WACG,OAAE,KAAK,WAAW,IACZ,IAAH,UACD,GAAmB,SAAf,KAAK,OAAmC,UAAf,KAAK,MAG9B,MAAM,MAAK,6BAAuB,KAAK,MAA5B,8BAFX,KAAK,OAAyB,SAAf,KAAK,MAIxB,MACJ,IAAK,SACD,GAAK,MAAM,OAAO,KAAK,QAGnB,MAAM,MAAK,6BAAuB,KAAK,MAA5B,6BAFX,KAAK,OAAS,OAAO,KAAK,OAI9B,MAEJ,QACI,KAAK,OAAS,KAAK,W,GAxCnC,MAYuC,aAsC1B,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAC,YAAY,G,aAFC,GAAzC,wB,IAWa,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAC,UAAW,G,aAFC,GAAxC,uB,IAWa,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAC,UAAW,I,aAFC,GAAxC,wB,uQCxEA,YACA,QAYe,E,8BACT,SAAF,EAAY,EAAc,EAAe,GAAkB,6BACjD,EAAM,EAAO,CACf,KAAM,CAAC,UACP,MAAO,I,iCAKR,SAAQ,GACL,cAAS,EAAO,OAClB,IAAK,WACD,qBAAgB,EAAO,KAAM,UAAW,EAAO,OAC/C,MACJ,IAAK,UACD,qBAAgB,EAAO,KAAM,SAAU,EAAO,OAC9C,MACJ,IAAK,UACD,qBAAgB,EAAO,KAAM,SAAU,EAAO,OAC9C,MACJ,QACI,MAAM,MAAM,yD,GArBM,oBA8BrB,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAC,UAAW,SAAU,W,iCAI7C,SAAQ,GACJ,2CAAc,O,GAPiB,GAAvC,sB,IAea,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAC,Y,iCAIxB,SAAQ,GACJ,2CAAc,O,GAPiB,GAAvC,sB,IAea,E,8BACP,SAAF,EAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAC,W,iCAIxB,SAAQ,GACJ,2CAAc,O,GAPgB,GAAtC,qB,IAea,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAC,W,iCAIxB,SAAQ,GACJ,2CAAc,O,GAPgB,GAAtC,sB,+QCxFA,YACA,QAYe,E,8BAUT,SAAF,EAAY,EAAc,EAAe,EAAyB,GAAe,6BACvE,EAAM,EAAO,GAAI,EAAY,G,kCAIhC,WACH,IAAM,SAAsB,KAAK,OAEjC,IACI,OAA4B,mBAAc,KAAK,OAAvC,EAAR,EAAQ,SAAU,EAAlB,EAAkB,MAClB,GAAI,KAAK,WAAW,OAAS,EACzB,KAAK,OAAS,MACX,IAAI,IAAa,EAGpB,MAAM,MAAM,IAFZ,KAAK,OAAS,GAIpB,MAAO,GACL,MAAI,KAAK,WAAW,OAAS,EACnB,MAAK,kCAA4B,KAAK,MAAjC,qBAEL,MAAK,kCACoB,KAAK,MADzB,sBAC4C,EAD5C,0B,GA/BoB,eA4ClC,E,8BACT,WAAY0E,EAAc,GAAa,6BAC7BA,EAAMC,EAAO,CAAC,UAAW,SAAU,UAAW,I,aAFX,GAAjD,gC,IAWa,E,8BACT,WAAYD,EAAc,GAAa,6BAC7BA,EAAMC,EAAO,CAAC,YAAY,G,aAFS,GAAjD,gC,IAWa,E,8BACT,WAAYD,EAAc,GAAa,6BAC7BA,EAAMC,EAAO,CAAC,UAAW,G,aAFS,GAAhD,+B,IAWa,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAC,UAAW,I,aAFS,GAAhD,gC,kSC3FA,IAgBe,E,8BAGT,SAAF,EACI,EACA,EACA,EACA,EACA,GAAe,wBAEX,EAAJ,YAAM,EAAM,GAAI,CAAE,SAAU,EAAY,SAAU,GAAc,EAAY,IACvE,UAAY,EACb,EAAC,YAAY,EAAK,WAJP,E,kCASZ,SAAS,GACN,IAAE,EAAuB,EAAvB,SAAU,EAAa,EAAb,SAEZ,OAAEzC,KAAK,WACT,IAAK,IACD,KAAK,OAA8B,kBAAb,GAA6C,kBAAb,EAAvC,UACN,GADM,OACK,GACb,EAAuB,EAC9B,MACJ,IAAK,IACD,KAAK,OAAW,EAAuB,EACvC,MACJ,IAAK,IACD,KAAK,OAAW,EAAuB,EACvC,MACJ,IAAK,IACD,KAAK,OAAW,EAAuB,EACvC,MACJ,IAAK,IACD,KAAK,OAAW,EAAuB,O,GApDvD,MAgB8C,mBAiDjC,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAC,SAAU,UAAW,IAAK,G,aAFT,GAA7C,4B,IAaa,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAC,UAAW,IAAK,G,aAFE,GAA9C,6B,IAaa,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAC,UAAW,IAAK,G,aAFE,GAA9C,6B,IAaa,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAC,UAAW,IAAK,G,aAFG,GAA/C,8B,IAaa,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAC,UAAW,IAAK,G,aAFI,GAAhD,gC,yKCtHA,YAEA,QAUa,E,8BACT,WAAYwC,EAAc,GAAa,wBACnC,cAAMA,EAAMC,EAAO,CAAE4C,MAAO,CAAC,aAGzB,SAAW,EAJoB,E,iCAMvC,SAAQ,GACJ,KAAK,SAAW,EAAO,Q,0BAG3B,c,yBAIA,c,oBAIA,WACI,KAAK,WACiB,IAAlB,KAAK,WACL,4BAAuB,wB,GAtBA,gBAAnC,mB,qKCZA,YAEA,QAUa,E,8BACT,WAAY7C,EAAc,GAAa,6BAC7BA,EAAMC,EAAO,CAAE6C,UAAW,CAAC,a,iCAGrC,SAAQ,GACC,EAAO,YACR,4BAAuB,mB,0BAI/B,c,yBAIA,c,oBAIA,gB,GAnB2B,gBAA/B,e,2LCZA,YAEa,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,I,iCAGvB,c,0BAIA,c,yBAIA,c,oBAIA,gB,GAjBgC,gBAApCxH,EAAQ,eAAR,E,IAsBa,E,8BACT,WAAY,EAAc,GAAa,6BAC7B,EAAM,EAAO,CAAE,KAAM,CAAC,Y,iCAGhC,c,0BAIA,c,yBAIA,c,oBAIA,gB,GAjBgC,gBAApC,oB,wKCvBA,IAIa,E,8BACT,WAAY0E,EAAc,GAAa,6BAC7BA,EAAMC,EAAO,CAAElD,MAAO,CAAC,UAAW,SAAU,Y,iCAGtD,SAAQ,GAEJ,QAAQ,IAAI,EAAO,W,GAX3B,MAIkC,kBAAlC,kB,gCCFA,IAAIgG,E,wVACJ,IAAIC,EAAQ,IAAIC,WAAW,IACZ,SAASC,IAEtB,IAAKH,KAGHA,EAAoC,qBAAXI,QAA0BA,OAAOJ,iBAAmBI,OAAOJ,gBAAgBK,KAAKD,SAA+B,qBAAbE,UAAgE,oBAA7BA,SAASN,iBAAkCM,SAASN,gBAAgBK,KAAKC,WAGrO,MAAM,IAAIC,MAAM,4GAIpB,OAAOP,EAAgBC,GCjBV,4HCQf,ICFeO,MAJf,SAAkBC,GAChB,MAAuB,kBAATA,GAAqBC,EAAM3C,KAAK0C,IDG5CE,EAAY,GAEP5H,EAAI,EAAGA,EAAI,MAAOA,EACzB4H,EAAU9E,MAAM9C,EAAI,KAAO6E,SAAS,IAAIgD,OAAO,IAoBlCC,IEvBXC,EAEAC,EFqBWF,EAjBf,SAAmB9F,GACjB,IAAIiG,EAASpG,UAAU5B,OAAS,QAAsB+D,IAAjBnC,UAAU,GAAmBA,UAAU,GAAK,EAG7E6F,GAAQE,EAAU5F,EAAIiG,EAAS,IAAML,EAAU5F,EAAIiG,EAAS,IAAML,EAAU5F,EAAIiG,EAAS,IAAML,EAAU5F,EAAIiG,EAAS,IAAM,IAAML,EAAU5F,EAAIiG,EAAS,IAAML,EAAU5F,EAAIiG,EAAS,IAAM,IAAML,EAAU5F,EAAIiG,EAAS,IAAML,EAAU5F,EAAIiG,EAAS,IAAM,IAAML,EAAU5F,EAAIiG,EAAS,IAAML,EAAU5F,EAAIiG,EAAS,IAAM,IAAML,EAAU5F,EAAIiG,EAAS,KAAOL,EAAU5F,EAAIiG,EAAS,KAAOL,EAAU5F,EAAIiG,EAAS,KAAOL,EAAU5F,EAAIiG,EAAS,KAAOL,EAAU5F,EAAIiG,EAAS,KAAOL,EAAU5F,EAAIiG,EAAS,MAAMC,cAMzf,IAAKT,EAASC,GACZ,MAAM/H,UAAU,+BAGlB,OAAO+H,GEfLS,EAAa,EACbC,EAAa,EAkFFC,MAhFf,SAAYC,EAASC,EAAKN,GACxB,IAAIjI,EAAIuI,GAAON,GAAU,EACrBO,EAAID,GAAO,IAAItG,MAAM,IAErBwG,GADJH,EAAUA,GAAW,IACFG,MAAQV,EACvBW,OAAgC1E,IAArBsE,EAAQI,SAAyBJ,EAAQI,SAAWV,EAInE,GAAY,MAARS,GAA4B,MAAZC,EAAkB,CACpC,IAAIC,EAAYL,EAAQM,SAAWN,EAAQlB,KAAOA,KAEtC,MAARqB,IAEFA,EAAOV,EAAU,CAAgB,EAAfY,EAAU,GAAWA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,KAG3F,MAAZD,IAEFA,EAAWV,EAAiD,OAApCW,EAAU,IAAM,EAAIA,EAAU,KAQ1D,IAAIE,OAA0B7E,IAAlBsE,EAAQO,MAAsBP,EAAQO,MAAQC,KAAKC,MAG3DC,OAA0BhF,IAAlBsE,EAAQU,MAAsBV,EAAQU,MAAQZ,EAAa,EAEnEa,EAAKJ,EAAQV,GAAca,EAAQZ,GAAc,IAarD,GAXIa,EAAK,QAA0BjF,IAArBsE,EAAQI,WACpBA,EAAWA,EAAW,EAAI,QAKvBO,EAAK,GAAKJ,EAAQV,SAAiCnE,IAAlBsE,EAAQU,QAC5CA,EAAQ,GAINA,GAAS,IACX,MAAM,IAAIxB,MAAM,mDAGlBW,EAAaU,EACbT,EAAaY,EACbhB,EAAYU,EAIZ,IAAIQ,GAA4B,KAAb,WAFnBL,GAAS,cAE+BG,GAAS,WACjDR,EAAExI,KAAOkJ,IAAO,GAAK,IACrBV,EAAExI,KAAOkJ,IAAO,GAAK,IACrBV,EAAExI,KAAOkJ,IAAO,EAAI,IACpBV,EAAExI,KAAY,IAALkJ,EAET,IAAIC,EAAMN,EAAQ,WAAc,IAAQ,UACxCL,EAAExI,KAAOmJ,IAAQ,EAAI,IACrBX,EAAExI,KAAa,IAANmJ,EAETX,EAAExI,KAAOmJ,IAAQ,GAAK,GAAM,GAE5BX,EAAExI,KAAOmJ,IAAQ,GAAK,IAEtBX,EAAExI,KAAO0I,IAAa,EAAI,IAE1BF,EAAExI,KAAkB,IAAX0I,EAET,IAAK,IAAI9D,EAAI,EAAGA,EAAI,IAAKA,EACvB4D,EAAExI,EAAI4E,GAAK6D,EAAK7D,GAGlB,OAAO2D,GAAOT,EAAUU,ICzDXY,MAhCf,SAAe1B,GACb,IAAKD,EAASC,GACZ,MAAM/H,UAAU,gBAGlB,IAAI0J,EACArH,EAAM,IAAImF,WAAW,IAuBzB,OArBAnF,EAAI,IAAMqH,EAAIC,SAAS5B,EAAK5C,MAAM,EAAG,GAAI,OAAS,GAClD9C,EAAI,GAAKqH,IAAM,GAAK,IACpBrH,EAAI,GAAKqH,IAAM,EAAI,IACnBrH,EAAI,GAAS,IAAJqH,EAETrH,EAAI,IAAMqH,EAAIC,SAAS5B,EAAK5C,MAAM,EAAG,IAAK,OAAS,EACnD9C,EAAI,GAAS,IAAJqH,EAETrH,EAAI,IAAMqH,EAAIC,SAAS5B,EAAK5C,MAAM,GAAI,IAAK,OAAS,EACpD9C,EAAI,GAAS,IAAJqH,EAETrH,EAAI,IAAMqH,EAAIC,SAAS5B,EAAK5C,MAAM,GAAI,IAAK,OAAS,EACpD9C,EAAI,GAAS,IAAJqH,EAGTrH,EAAI,KAAOqH,EAAIC,SAAS5B,EAAK5C,MAAM,GAAI,IAAK,KAAO,cAAgB,IACnE9C,EAAI,IAAMqH,EAAI,WAAc,IAC5BrH,EAAI,IAAMqH,IAAM,GAAK,IACrBrH,EAAI,IAAMqH,IAAM,GAAK,IACrBrH,EAAI,IAAMqH,IAAM,EAAI,IACpBrH,EAAI,IAAU,IAAJqH,EACHrH,GChBF,IAEQ,WAAUkC,EAAMqF,EAASC,GACtC,SAASC,EAAaxI,EAAOyI,EAAWnB,EAAKN,GAS3C,GARqB,kBAAVhH,IACTA,EAjBN,SAAuB0I,GACrBA,EAAMC,SAASC,mBAAmBF,IAIlC,IAFA,IAAIG,EAAQ,GAEH9J,EAAI,EAAGA,EAAI2J,EAAI1J,SAAUD,EAChC8J,EAAMhH,KAAK6G,EAAII,WAAW/J,IAG5B,OAAO8J,EAQKE,CAAc/I,IAGC,kBAAdyI,IACTA,EAAYN,EAAMM,IAGK,KAArBA,EAAUzJ,OACZ,MAAMN,UAAU,oEAMlB,IAAImK,EAAQ,IAAI3C,WAAW,GAAKlG,EAAMhB,QAOtC,GANA6J,EAAMG,IAAIP,GACVI,EAAMG,IAAIhJ,EAAOyI,EAAUzJ,SAC3B6J,EAAQN,EAASM,IACX,GAAgB,GAAXA,EAAM,GAAYP,EAC7BO,EAAM,GAAgB,GAAXA,EAAM,GAAY,IAEzBvB,EAAK,CACPN,EAASA,GAAU,EAEnB,IAAK,IAAIjI,EAAI,EAAGA,EAAI,KAAMA,EACxBuI,EAAIN,EAASjI,GAAK8J,EAAM9J,GAG1B,OAAOuI,EAGT,OAAOT,EAAUgC,GAInB,IACEL,EAAavF,KAAOA,EACpB,MAAOnB,IAKT,OAFA0G,EAAaS,IA7CE,uCA8CfT,EAAaU,IA7CE,uCA8CRV,GCNT,SAASW,EAAgBC,GACvB,OAAwC,IAAhCA,EAAe,KAAO,GAAK,GAAU,EAuH/C,SAASC,EAAQC,EAAGC,GAClB,IAAIC,GAAW,MAAJF,IAAmB,MAAJC,GAE1B,OADWD,GAAK,KAAOC,GAAK,KAAOC,GAAO,KAC5B,GAAW,MAANA,EAerB,SAASC,EAAOC,EAAGC,EAAGpC,EAAG+B,EAAGxE,EAAG8E,GAC7B,OAAOP,GATcQ,EASQR,EAAQA,EAAQM,EAAGD,GAAIL,EAAQC,EAAGM,OATrCE,EAS0ChF,GARhD+E,IAAQ,GAAKC,EAQuCvC,GAT1E,IAAuBsC,EAAKC,EAY5B,SAASC,EAAMJ,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAGxE,EAAG8E,GAC/B,OAAOH,EAAOlC,EAAIyC,GAAKzC,EAAI0C,EAAGN,EAAGpC,EAAG+B,EAAGxE,EAAG8E,GAG5C,SAASM,EAAMP,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAGxE,EAAG8E,GAC/B,OAAOH,EAAOlC,EAAI0C,EAAID,GAAKC,EAAGN,EAAGpC,EAAG+B,EAAGxE,EAAG8E,GAG5C,SAASO,EAAMR,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAGxE,EAAG8E,GAC/B,OAAOH,EAAOlC,EAAIyC,EAAIC,EAAGN,EAAGpC,EAAG+B,EAAGxE,EAAG8E,GAGvC,SAASQ,EAAMT,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAGxE,EAAG8E,GAC/B,OAAOH,EAAOO,GAAKzC,GAAK0C,GAAIN,EAAGpC,EAAG+B,EAAGxE,EAAG8E,GAG3BS,ICnNAC,EADNC,EAAI,KAAM,IDkBnB,SAAa1B,GACX,GAAqB,kBAAVA,EAAoB,CAC7B,IAAI2B,EAAM7B,SAASC,mBAAmBC,IAEtCA,EAAQ,IAAI3C,WAAWsE,EAAIxL,QAE3B,IAAK,IAAID,EAAI,EAAGA,EAAIyL,EAAIxL,SAAUD,EAChC8J,EAAM9J,GAAKyL,EAAI1B,WAAW/J,GAI9B,OAOF,SAA8B0L,GAK5B,IAJA,IAAIC,EAAS,GACTC,EAA0B,GAAfF,EAAMzL,OACjB4L,EAAS,mBAEJ7L,EAAI,EAAGA,EAAI4L,EAAU5L,GAAK,EAAG,CACpC,IAAIuK,EAAImB,EAAM1L,GAAK,KAAOA,EAAI,GAAK,IAC/B8L,EAAMxC,SAASuC,EAAOE,OAAOxB,IAAM,EAAI,IAAQsB,EAAOE,OAAW,GAAJxB,GAAW,IAC5EoB,EAAO7I,KAAKgJ,GAGd,OAAOH,EAlBAK,CAiCT,SAAoBzB,EAAGpF,GAErBoF,EAAEpF,GAAO,IAAM,KAAQA,EAAM,GAC7BoF,EAAEH,EAAgBjF,GAAO,GAAKA,EAM9B,IALA,IAAIyF,EAAI,WACJpC,GAAK,UACLyC,GAAK,WACLC,EAAI,UAEClL,EAAI,EAAGA,EAAIuK,EAAEtK,OAAQD,GAAK,GAAI,CACrC,IAAIiM,EAAOrB,EACPsB,EAAO1D,EACP2D,EAAOlB,EACPmB,EAAOlB,EACXN,EAAII,EAAMJ,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAEvK,GAAI,GAAI,WAChCkL,EAAIF,EAAME,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,GAAI,IAAK,WACrCiL,EAAID,EAAMC,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,GAAI,GAAI,WACpCwI,EAAIwC,EAAMxC,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,GAAI,IAAK,YACrC4K,EAAII,EAAMJ,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAEvK,EAAI,GAAI,GAAI,WACpCkL,EAAIF,EAAME,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,GAAI,GAAI,YACpCiL,EAAID,EAAMC,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,GAAI,IAAK,YACrCwI,EAAIwC,EAAMxC,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,GAAI,IAAK,UACrC4K,EAAII,EAAMJ,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAEvK,EAAI,GAAI,EAAG,YACnCkL,EAAIF,EAAME,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,GAAI,IAAK,YACrCiL,EAAID,EAAMC,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,IAAK,IAAK,OACtCwI,EAAIwC,EAAMxC,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,IAAK,IAAK,YACtC4K,EAAII,EAAMJ,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAEvK,EAAI,IAAK,EAAG,YACpCkL,EAAIF,EAAME,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,IAAK,IAAK,UACtCiL,EAAID,EAAMC,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,IAAK,IAAK,YAEtC4K,EAAIO,EAAMP,EADVpC,EAAIwC,EAAMxC,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,IAAK,GAAI,YACrBiL,EAAGC,EAAGX,EAAEvK,EAAI,GAAI,GAAI,WACpCkL,EAAIC,EAAMD,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,GAAI,GAAI,YACpCiL,EAAIE,EAAMF,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,IAAK,GAAI,WACrCwI,EAAI2C,EAAM3C,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,GAAI,IAAK,WACjC4K,EAAIO,EAAMP,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAEvK,EAAI,GAAI,GAAI,WACpCkL,EAAIC,EAAMD,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,IAAK,EAAG,UACpCiL,EAAIE,EAAMF,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,IAAK,IAAK,WACtCwI,EAAI2C,EAAM3C,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,GAAI,IAAK,WACrC4K,EAAIO,EAAMP,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAEvK,EAAI,GAAI,EAAG,WACnCkL,EAAIC,EAAMD,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,IAAK,GAAI,YACrCiL,EAAIE,EAAMF,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,GAAI,IAAK,WACrCwI,EAAI2C,EAAM3C,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,GAAI,GAAI,YACpC4K,EAAIO,EAAMP,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAEvK,EAAI,IAAK,GAAI,YACrCkL,EAAIC,EAAMD,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,GAAI,GAAI,UACpCiL,EAAIE,EAAMF,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,GAAI,GAAI,YAEpC4K,EAAIQ,EAAMR,EADVpC,EAAI2C,EAAM3C,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,IAAK,IAAK,YACtBiL,EAAGC,EAAGX,EAAEvK,EAAI,GAAI,GAAI,QACpCkL,EAAIE,EAAMF,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,GAAI,IAAK,YACrCiL,EAAIG,EAAMH,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,IAAK,GAAI,YACrCwI,EAAI4C,EAAM5C,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,IAAK,IAAK,UACtC4K,EAAIQ,EAAMR,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAEvK,EAAI,GAAI,GAAI,YACpCkL,EAAIE,EAAMF,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,GAAI,GAAI,YACpCiL,EAAIG,EAAMH,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,GAAI,IAAK,WACrCwI,EAAI4C,EAAM5C,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,IAAK,IAAK,YACtC4K,EAAIQ,EAAMR,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAEvK,EAAI,IAAK,EAAG,WACpCkL,EAAIE,EAAMF,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,GAAI,IAAK,WACjCiL,EAAIG,EAAMH,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,GAAI,IAAK,WACrCwI,EAAI4C,EAAM5C,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,GAAI,GAAI,UACpC4K,EAAIQ,EAAMR,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAEvK,EAAI,GAAI,GAAI,WACpCkL,EAAIE,EAAMF,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,IAAK,IAAK,WACtCiL,EAAIG,EAAMH,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,IAAK,GAAI,WAErC4K,EAAIS,EAAMT,EADVpC,EAAI4C,EAAM5C,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,GAAI,IAAK,WACrBiL,EAAGC,EAAGX,EAAEvK,GAAI,GAAI,WAChCkL,EAAIG,EAAMH,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,GAAI,GAAI,YACpCiL,EAAII,EAAMJ,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,IAAK,IAAK,YACtCwI,EAAI6C,EAAM7C,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,GAAI,IAAK,UACrC4K,EAAIS,EAAMT,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAEvK,EAAI,IAAK,EAAG,YACpCkL,EAAIG,EAAMH,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,GAAI,IAAK,YACrCiL,EAAII,EAAMJ,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,IAAK,IAAK,SACtCwI,EAAI6C,EAAM7C,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,GAAI,IAAK,YACrC4K,EAAIS,EAAMT,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAEvK,EAAI,GAAI,EAAG,YACnCkL,EAAIG,EAAMH,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,IAAK,IAAK,UACtCiL,EAAII,EAAMJ,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,GAAI,IAAK,YACrCwI,EAAI6C,EAAM7C,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,IAAK,GAAI,YACrC4K,EAAIS,EAAMT,EAAGpC,EAAGyC,EAAGC,EAAGX,EAAEvK,EAAI,GAAI,GAAI,WACpCkL,EAAIG,EAAMH,EAAGN,EAAGpC,EAAGyC,EAAGV,EAAEvK,EAAI,IAAK,IAAK,YACtCiL,EAAII,EAAMJ,EAAGC,EAAGN,EAAGpC,EAAG+B,EAAEvK,EAAI,GAAI,GAAI,WACpCwI,EAAI6C,EAAM7C,EAAGyC,EAAGC,EAAGN,EAAGL,EAAEvK,EAAI,GAAI,IAAK,WACrC4K,EAAIN,EAAQM,EAAGqB,GACfzD,EAAI8B,EAAQ9B,EAAG0D,GACfjB,EAAIX,EAAQW,EAAGkB,GACfjB,EAAIZ,EAAQY,EAAGkB,GAGjB,MAAO,CAACxB,EAAGpC,EAAGyC,EAAGC,GArHWmB,CA6H9B,SAAsBX,GACpB,GAAqB,IAAjBA,EAAMzL,OACR,MAAO,GAMT,IAHA,IAAIqM,EAAyB,EAAfZ,EAAMzL,OAChB0L,EAAS,IAAIY,YAAYnC,EAAgBkC,IAEpCtM,EAAI,EAAGA,EAAIsM,EAAStM,GAAK,EAChC2L,EAAO3L,GAAK,KAAsB,IAAf0L,EAAM1L,EAAI,KAAcA,EAAI,GAGjD,OAAO2L,EAzIgCa,CAAa1C,GAAuB,EAAfA,EAAM7J,YERrDwM,MApBf,SAAYnE,EAASC,EAAKN,GAExB,IAAIyE,GADJpE,EAAUA,GAAW,IACFM,SAAWN,EAAQlB,KAAOA,KAK7C,GAHAsF,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBnE,EAAK,CACPN,EAASA,GAAU,EAEnB,IAAK,IAAIjI,EAAI,EAAGA,EAAI,KAAMA,EACxBuI,EAAIN,EAASjI,GAAK0M,EAAK1M,GAGzB,OAAOuI,EAGT,OAAOT,EAAU4E,IClBnB,SAASzG,EAAEF,EAAGwE,EAAGC,EAAGmC,GAClB,OAAQ5G,GACN,KAAK,EACH,OAAOwE,EAAIC,GAAKD,EAAIoC,EAEtB,KAAK,EAML,KAAK,EACH,OAAOpC,EAAIC,EAAImC,EAJjB,KAAK,EACH,OAAOpC,EAAIC,EAAID,EAAIoC,EAAInC,EAAImC,GAOjC,SAASC,EAAKrC,EAAG3F,GACf,OAAO2F,GAAK3F,EAAI2F,IAAM,GAAK3F,EA4EdiI,IC5FAC,EADNtB,EAAI,KAAM,IDoBnB,SAAc1B,GACZ,IAAIiD,EAAI,CAAC,WAAY,WAAY,WAAY,YACzCC,EAAI,CAAC,WAAY,WAAY,WAAY,UAAY,YAEzD,GAAqB,kBAAVlD,EAAoB,CAC7B,IAAI2B,EAAM7B,SAASC,mBAAmBC,IAEtCA,EAAQ,GAER,IAAK,IAAI9J,EAAI,EAAGA,EAAIyL,EAAIxL,SAAUD,EAChC8J,EAAMhH,KAAK2I,EAAI1B,WAAW/J,SAElBiC,MAAMC,QAAQ4H,KAExBA,EAAQ7H,MAAMtB,UAAUmE,MAAMnC,KAAKmH,IAGrCA,EAAMhH,KAAK,KAKX,IAJA,IAAImK,EAAInD,EAAM7J,OAAS,EAAI,EACvBiN,EAAIC,KAAKC,KAAKH,EAAI,IAClBI,EAAI,IAAIpL,MAAMiL,GAET/K,EAAK,EAAGA,EAAK+K,IAAK/K,EAAI,CAG7B,IAFA,IAAIH,EAAM,IAAIuK,YAAY,IAEjBe,EAAI,EAAGA,EAAI,KAAMA,EACxBtL,EAAIsL,GAAKxD,EAAW,GAAL3H,EAAc,EAAJmL,IAAU,GAAKxD,EAAW,GAAL3H,EAAc,EAAJmL,EAAQ,IAAM,GAAKxD,EAAW,GAAL3H,EAAc,EAAJmL,EAAQ,IAAM,EAAIxD,EAAW,GAAL3H,EAAc,EAAJmL,EAAQ,GAGvID,EAAElL,GAAMH,EAGVqL,EAAEH,EAAI,GAAG,IAA2B,GAApBpD,EAAM7J,OAAS,GAASkN,KAAKI,IAAI,EAAG,IACpDF,EAAEH,EAAI,GAAG,IAAMC,KAAKK,MAAMH,EAAEH,EAAI,GAAG,KACnCG,EAAEH,EAAI,GAAG,IAA2B,GAApBpD,EAAM7J,OAAS,GAAS,WAExC,IAAK,IAAIwN,EAAM,EAAGA,EAAMP,IAAKO,EAAK,CAGhC,IAFA,IAAIC,EAAI,IAAInB,YAAY,IAEf1B,EAAI,EAAGA,EAAI,KAAMA,EACxB6C,EAAE7C,GAAKwC,EAAEI,GAAK5C,GAGhB,IAAK,IAAI8C,EAAK,GAAIA,EAAK,KAAMA,EAC3BD,EAAEC,GAAMf,EAAKc,EAAEC,EAAK,GAAKD,EAAEC,EAAK,GAAKD,EAAEC,EAAK,IAAMD,EAAEC,EAAK,IAAK,GAShE,IANA,IAAI/C,EAAIoC,EAAE,GACNxE,EAAIwE,EAAE,GACN/B,EAAI+B,EAAE,GACN9B,EAAI8B,EAAE,GACNhH,EAAIgH,EAAE,GAEDY,EAAM,EAAGA,EAAM,KAAMA,EAAK,CACjC,IAAI7H,EAAIoH,KAAKK,MAAMI,EAAM,IACrBC,EAAIjB,EAAKhC,EAAG,GAAK3E,EAAEF,EAAGyC,EAAGyC,EAAGC,GAAKlF,EAAI+G,EAAEhH,GAAK2H,EAAEE,KAAS,EAC3D5H,EAAIkF,EACJA,EAAID,EACJA,EAAI2B,EAAKpE,EAAG,MAAQ,EACpBA,EAAIoC,EACJA,EAAIiD,EAGNb,EAAE,GAAKA,EAAE,GAAKpC,IAAM,EACpBoC,EAAE,GAAKA,EAAE,GAAKxE,IAAM,EACpBwE,EAAE,GAAKA,EAAE,GAAK/B,IAAM,EACpB+B,EAAE,GAAKA,EAAE,GAAK9B,IAAM,EACpB8B,EAAE,GAAKA,EAAE,GAAKhH,IAAM,EAGtB,MAAO,CAACgH,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,GAAWA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,GAAWA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,GAAWA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,GAAWA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,OE5FzU,yCCUAzD,MARf,SAAiB7B,GACf,IAAKD,EAASC,GACZ,MAAM/H,UAAU,gBAGlB,OAAO2J,SAAS5B,EAAKG,OAAO,GAAI,GAAI,M,6BCPtC,8CACe,SAASiG,EAA2BzJ,EAAGuB,GACpD,IAAIC,EAAuB,qBAAXzD,QAA0BiC,EAAEjC,OAAOC,WAAagC,EAAE,cAElE,IAAKwB,EAAI,CACP,GAAI5D,MAAMC,QAAQmC,KAAOwB,EAAK,YAA2BxB,KAAOuB,GAAkBvB,GAAyB,kBAAbA,EAAEpE,OAAqB,CAC/G4F,IAAIxB,EAAIwB,GACZ,IAAI7F,EAAI,EAEJ8F,EAAI,aAER,MAAO,CACLC,EAAGD,EACHlB,EAAG,WACD,OAAI5E,GAAKqE,EAAEpE,OAAe,CACxB4C,MAAM,GAED,CACLA,MAAM,EACN5B,MAAOoD,EAAErE,OAGbgG,EAAG,SAAWzD,GACZ,MAAMA,GAER0D,EAAGH,GAIP,MAAM,IAAInG,UAAU,yIAGtB,IAEIoD,EAFAmD,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLJ,EAAG,WACDF,EAAKA,EAAGlD,KAAK0B,IAEfO,EAAG,WACD,IAAIwB,EAAOP,EAAGjD,OAEd,OADAsD,EAAmBE,EAAKvD,KACjBuD,GAETJ,EAAG,SAAWK,GACZF,GAAS,EACTpD,EAAMsD,GAERJ,EAAG,WACD,IACOC,GAAoC,MAAhBL,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIM,EAAQ,MAAMpD,O,gBC7C1B,IAAIgL,EAAW,SAAUvO,GACvB,aAEA,IAEIwE,EAFAgK,EAAK1N,OAAOK,UACZsN,EAASD,EAAGE,eAEZC,EAA4B,oBAAX/L,OAAwBA,OAAS,GAClDgM,EAAiBD,EAAQ9L,UAAY,aACrCgM,EAAsBF,EAAQG,eAAiB,kBAC/CC,EAAoBJ,EAAQK,aAAe,gBAE/C,SAASC,EAAOC,EAAKlO,EAAKS,GAOxB,OANAX,OAAOC,eAAemO,EAAKlO,EAAK,CAC9BS,MAAOA,EACPd,YAAY,EACZC,cAAc,EACdC,UAAU,IAELqO,EAAIlO,GAEb,IAEEiO,EAAO,GAAI,IACX,MAAO1L,GACP0L,EAAS,SAASC,EAAKlO,EAAKS,GAC1B,OAAOyN,EAAIlO,GAAOS,GAItB,SAAS0N,EAAKC,EAASC,EAAS/K,EAAMgL,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQlO,qBAAqBqO,EAAYH,EAAUG,EAC/EC,EAAY3O,OAAOS,OAAOgO,EAAepO,WACzCuO,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAG,EAAUG,QAuMZ,SAA0BR,EAAS9K,EAAMoL,GACvC,IAAIG,EAAQC,EAEZ,OAAO,SAAgBC,EAAQhM,GAC7B,GAAI8L,IAAUG,EACZ,MAAM,IAAIhI,MAAM,gCAGlB,GAAI6H,IAAUI,EAAmB,CAC/B,GAAe,UAAXF,EACF,MAAMhM,EAKR,OAAOmM,IAMT,IAHAR,EAAQK,OAASA,EACjBL,EAAQ3L,IAAMA,IAED,CACX,IAAIoM,EAAWT,EAAQS,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUT,GACnD,GAAIU,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBV,EAAQK,OAGVL,EAAQa,KAAOb,EAAQc,MAAQd,EAAQ3L,SAElC,GAAuB,UAAnB2L,EAAQK,OAAoB,CACrC,GAAIF,IAAUC,EAEZ,MADAD,EAAQI,EACFP,EAAQ3L,IAGhB2L,EAAQe,kBAAkBf,EAAQ3L,SAEN,WAAnB2L,EAAQK,QACjBL,EAAQgB,OAAO,SAAUhB,EAAQ3L,KAGnC8L,EAAQG,EAER,IAAIW,EAASC,EAASxB,EAAS9K,EAAMoL,GACrC,GAAoB,WAAhBiB,EAAOE,KAAmB,CAO5B,GAJAhB,EAAQH,EAAQrM,KACZ4M,EACAa,EAEAH,EAAO5M,MAAQuM,EACjB,SAGF,MAAO,CACL7O,MAAOkP,EAAO5M,IACdV,KAAMqM,EAAQrM,MAGS,UAAhBsN,EAAOE,OAChBhB,EAAQI,EAGRP,EAAQK,OAAS,QACjBL,EAAQ3L,IAAM4M,EAAO5M,OA/QPgN,CAAiB3B,EAAS9K,EAAMoL,GAE7CD,EAcT,SAASmB,EAASvM,EAAI6K,EAAKnL,GACzB,IACE,MAAO,CAAE8M,KAAM,SAAU9M,IAAKM,EAAGlB,KAAK+L,EAAKnL,IAC3C,MAAOR,GACP,MAAO,CAAEsN,KAAM,QAAS9M,IAAKR,IAhBjCvD,EAAQmP,KAAOA,EAoBf,IAAIW,EAAyB,iBACzBgB,EAAyB,iBACzBd,EAAoB,YACpBC,EAAoB,YAIpBK,EAAmB,GAMvB,SAASd,KACT,SAASwB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBjC,EAAOiC,EAAmBtC,GAAgB,WACxC,OAAO1M,QAGT,IAAIiP,EAAWrQ,OAAOY,eAClB0P,EAA0BD,GAAYA,EAASA,EAASE,EAAO,MAC/DD,GACAA,IAA4B5C,GAC5BC,EAAOtL,KAAKiO,EAAyBxC,KAGvCsC,EAAoBE,GAGtB,IAAIE,EAAKL,EAA2B9P,UAClCqO,EAAUrO,UAAYL,OAAOS,OAAO2P,GAYtC,SAASK,EAAsBpQ,GAC7B,CAAC,OAAQ,QAAS,UAAUqQ,SAAQ,SAASzB,GAC3Cd,EAAO9N,EAAW4O,GAAQ,SAAShM,GACjC,OAAO7B,KAAK0N,QAAQG,EAAQhM,SAkClC,SAAS0N,EAAchC,EAAWiC,GAChC,SAASC,EAAO5B,EAAQhM,EAAKJ,EAASC,GACpC,IAAI+M,EAASC,EAASnB,EAAUM,GAASN,EAAW1L,GACpD,GAAoB,UAAhB4M,EAAOE,KAEJ,CACL,IAAI9O,EAAS4O,EAAO5M,IAChBtC,EAAQM,EAAON,MACnB,OAAIA,GACiB,kBAAVA,GACPgN,EAAOtL,KAAK1B,EAAO,WACdiQ,EAAY/N,QAAQlC,EAAMmQ,SAASzN,MAAK,SAAS1C,GACtDkQ,EAAO,OAAQlQ,EAAOkC,EAASC,MAC9B,SAASL,GACVoO,EAAO,QAASpO,EAAKI,EAASC,MAI3B8N,EAAY/N,QAAQlC,GAAO0C,MAAK,SAAS0N,GAI9C9P,EAAON,MAAQoQ,EACflO,EAAQ5B,MACP,SAASkC,GAGV,OAAO0N,EAAO,QAAS1N,EAAON,EAASC,MAvBzCA,EAAO+M,EAAO5M,KA4BlB,IAAI+N,EAgCJ5P,KAAK0N,QA9BL,SAAiBG,EAAQhM,GACvB,SAASgO,IACP,OAAO,IAAIL,GAAY,SAAS/N,EAASC,GACvC+N,EAAO5B,EAAQhM,EAAKJ,EAASC,MAIjC,OAAOkO,EAaLA,EAAkBA,EAAgB3N,KAChC4N,EAGAA,GACEA,KAkHV,SAAS1B,EAAoBF,EAAUT,GACrC,IAAIK,EAASI,EAAStN,SAAS6M,EAAQK,QACvC,GAAIA,IAAWvL,EAAW,CAKxB,GAFAkL,EAAQS,SAAW,KAEI,UAAnBT,EAAQK,OAAoB,CAE9B,GAAII,EAAStN,SAAT,SAGF6M,EAAQK,OAAS,SACjBL,EAAQ3L,IAAMS,EACd6L,EAAoBF,EAAUT,GAEP,UAAnBA,EAAQK,QAGV,OAAOO,EAIXZ,EAAQK,OAAS,QACjBL,EAAQ3L,IAAM,IAAI5D,UAChB,kDAGJ,OAAOmQ,EAGT,IAAIK,EAASC,EAASb,EAAQI,EAAStN,SAAU6M,EAAQ3L,KAEzD,GAAoB,UAAhB4M,EAAOE,KAIT,OAHAnB,EAAQK,OAAS,QACjBL,EAAQ3L,IAAM4M,EAAO5M,IACrB2L,EAAQS,SAAW,KACZG,EAGT,IAAItM,EAAO2M,EAAO5M,IAElB,OAAMC,EAOFA,EAAKX,MAGPqM,EAAQS,EAAS6B,YAAchO,EAAKvC,MAGpCiO,EAAQtM,KAAO+M,EAAS8B,QAQD,WAAnBvC,EAAQK,SACVL,EAAQK,OAAS,OACjBL,EAAQ3L,IAAMS,GAUlBkL,EAAQS,SAAW,KACZG,GANEtM,GA3BP0L,EAAQK,OAAS,QACjBL,EAAQ3L,IAAM,IAAI5D,UAAU,oCAC5BuP,EAAQS,SAAW,KACZG,GAoDX,SAAS4B,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBjQ,KAAKuQ,WAAWnP,KAAK8O,GAGvB,SAASM,EAAcN,GACrB,IAAIzB,EAASyB,EAAMO,YAAc,GACjChC,EAAOE,KAAO,gBACPF,EAAO5M,IACdqO,EAAMO,WAAahC,EAGrB,SAAShB,EAAQL,GAIfpN,KAAKuQ,WAAa,CAAC,CAAEJ,OAAQ,SAC7B/C,EAAYkC,QAAQU,EAAchQ,MAClCA,KAAK0Q,OAAM,GA8Bb,SAASvB,EAAOwB,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASjE,GAC9B,GAAIkE,EACF,OAAOA,EAAe3P,KAAK0P,GAG7B,GAA6B,oBAAlBA,EAASzP,KAClB,OAAOyP,EAGT,IAAKE,MAAMF,EAASpS,QAAS,CAC3B,IAAID,GAAK,EAAG4C,EAAO,SAASA,IAC1B,OAAS5C,EAAIqS,EAASpS,QACpB,GAAIgO,EAAOtL,KAAK0P,EAAUrS,GAGxB,OAFA4C,EAAK3B,MAAQoR,EAASrS,GACtB4C,EAAKC,MAAO,EACLD,EAOX,OAHAA,EAAK3B,MAAQ+C,EACbpB,EAAKC,MAAO,EAELD,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAM8M,GAIjB,SAASA,IACP,MAAO,CAAEzO,MAAO+C,EAAWnB,MAAM,GA+MnC,OA7mBA2N,EAAkB7P,UAAY8P,EAC9BhC,EAAOqC,EAAI,cAAeL,GAC1BhC,EAAOgC,EAA4B,cAAeD,GAClDA,EAAkBgC,YAAc/D,EAC9BgC,EACAlC,EACA,qBAaF/O,EAAQiT,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,oBAAXD,GAAyBA,EAAO1R,YAClD,QAAO2R,IACHA,IAASnC,GAG2B,uBAAnCmC,EAAKH,aAAeG,EAAKzO,QAIhC1E,EAAQoT,KAAO,SAASF,GAQtB,OAPIpS,OAAOM,eACTN,OAAOM,eAAe8R,EAAQjC,IAE9BiC,EAAOpO,UAAYmM,EACnBhC,EAAOiE,EAAQnE,EAAmB,sBAEpCmE,EAAO/R,UAAYL,OAAOS,OAAO+P,GAC1B4B,GAOTlT,EAAQqT,MAAQ,SAAStP,GACvB,MAAO,CAAE6N,QAAS7N,IAsEpBwN,EAAsBE,EAActQ,WACpC8N,EAAOwC,EAActQ,UAAW0N,GAAqB,WACnD,OAAO3M,QAETlC,EAAQyR,cAAgBA,EAKxBzR,EAAQsT,MAAQ,SAASlE,EAASC,EAAS/K,EAAMgL,EAAaoC,QACxC,IAAhBA,IAAwBA,EAAcxN,SAE1C,IAAIqP,EAAO,IAAI9B,EACbtC,EAAKC,EAASC,EAAS/K,EAAMgL,GAC7BoC,GAGF,OAAO1R,EAAQiT,oBAAoB5D,GAC/BkE,EACAA,EAAKnQ,OAAOe,MAAK,SAASpC,GACxB,OAAOA,EAAOsB,KAAOtB,EAAON,MAAQ8R,EAAKnQ,WAuKjDmO,EAAsBD,GAEtBrC,EAAOqC,EAAIvC,EAAmB,aAO9BE,EAAOqC,EAAI1C,GAAgB,WACzB,OAAO1M,QAGT+M,EAAOqC,EAAI,YAAY,WACrB,MAAO,wBAkCTtR,EAAQwT,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIxS,KAAOyS,EACdD,EAAKlQ,KAAKtC,GAMZ,OAJAwS,EAAKE,UAIE,SAAStQ,IACd,KAAOoQ,EAAK/S,QAAQ,CAClB,IAAIO,EAAMwS,EAAKG,MACf,GAAI3S,KAAOyS,EAGT,OAFArQ,EAAK3B,MAAQT,EACboC,EAAKC,MAAO,EACLD,EAQX,OADAA,EAAKC,MAAO,EACLD,IAsCXpD,EAAQqR,OAASA,EAMjB1B,EAAQxO,UAAY,CAClBK,YAAamO,EAEbiD,MAAO,SAASgB,GAcd,GAbA1R,KAAK2R,KAAO,EACZ3R,KAAKkB,KAAO,EAGZlB,KAAKqO,KAAOrO,KAAKsO,MAAQhM,EACzBtC,KAAKmB,MAAO,EACZnB,KAAKiO,SAAW,KAEhBjO,KAAK6N,OAAS,OACd7N,KAAK6B,IAAMS,EAEXtC,KAAKuQ,WAAWjB,QAAQkB,IAEnBkB,EACH,IAAK,IAAIlP,KAAQxC,KAEQ,MAAnBwC,EAAK6H,OAAO,IACZkC,EAAOtL,KAAKjB,KAAMwC,KACjBqO,OAAOrO,EAAKY,MAAM,MACrBpD,KAAKwC,GAAQF,IAMrBsP,KAAM,WACJ5R,KAAKmB,MAAO,EAEZ,IACI0Q,EADY7R,KAAKuQ,WAAW,GACLE,WAC3B,GAAwB,UAApBoB,EAAWlD,KACb,MAAMkD,EAAWhQ,IAGnB,OAAO7B,KAAK8R,MAGdvD,kBAAmB,SAASwD,GAC1B,GAAI/R,KAAKmB,KACP,MAAM4Q,EAGR,IAAIvE,EAAUxN,KACd,SAASgS,EAAOC,EAAKC,GAYnB,OAXAzD,EAAOE,KAAO,QACdF,EAAO5M,IAAMkQ,EACbvE,EAAQtM,KAAO+Q,EAEXC,IAGF1E,EAAQK,OAAS,OACjBL,EAAQ3L,IAAMS,KAGN4P,EAGZ,IAAK,IAAI5T,EAAI0B,KAAKuQ,WAAWhS,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAI4R,EAAQlQ,KAAKuQ,WAAWjS,GACxBmQ,EAASyB,EAAMO,WAEnB,GAAqB,SAAjBP,EAAMC,OAIR,OAAO6B,EAAO,OAGhB,GAAI9B,EAAMC,QAAUnQ,KAAK2R,KAAM,CAC7B,IAAIQ,EAAW5F,EAAOtL,KAAKiP,EAAO,YAC9BkC,EAAa7F,EAAOtL,KAAKiP,EAAO,cAEpC,GAAIiC,GAAYC,EAAY,CAC1B,GAAIpS,KAAK2R,KAAOzB,EAAME,SACpB,OAAO4B,EAAO9B,EAAME,UAAU,GACzB,GAAIpQ,KAAK2R,KAAOzB,EAAMG,WAC3B,OAAO2B,EAAO9B,EAAMG,iBAGjB,GAAI8B,GACT,GAAInS,KAAK2R,KAAOzB,EAAME,SACpB,OAAO4B,EAAO9B,EAAME,UAAU,OAG3B,KAAIgC,EAMT,MAAM,IAAItM,MAAM,0CALhB,GAAI9F,KAAK2R,KAAOzB,EAAMG,WACpB,OAAO2B,EAAO9B,EAAMG,gBAU9B7B,OAAQ,SAASG,EAAM9M,GACrB,IAAK,IAAIvD,EAAI0B,KAAKuQ,WAAWhS,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAI4R,EAAQlQ,KAAKuQ,WAAWjS,GAC5B,GAAI4R,EAAMC,QAAUnQ,KAAK2R,MACrBpF,EAAOtL,KAAKiP,EAAO,eACnBlQ,KAAK2R,KAAOzB,EAAMG,WAAY,CAChC,IAAIgC,EAAenC,EACnB,OAIAmC,IACU,UAAT1D,GACS,aAATA,IACD0D,EAAalC,QAAUtO,GACvBA,GAAOwQ,EAAahC,aAGtBgC,EAAe,MAGjB,IAAI5D,EAAS4D,EAAeA,EAAa5B,WAAa,GAItD,OAHAhC,EAAOE,KAAOA,EACdF,EAAO5M,IAAMA,EAETwQ,GACFrS,KAAK6N,OAAS,OACd7N,KAAKkB,KAAOmR,EAAahC,WAClBjC,GAGFpO,KAAKsS,SAAS7D,IAGvB6D,SAAU,SAAS7D,EAAQ6B,GACzB,GAAoB,UAAhB7B,EAAOE,KACT,MAAMF,EAAO5M,IAcf,MAXoB,UAAhB4M,EAAOE,MACS,aAAhBF,EAAOE,KACT3O,KAAKkB,KAAOuN,EAAO5M,IACM,WAAhB4M,EAAOE,MAChB3O,KAAK8R,KAAO9R,KAAK6B,IAAM4M,EAAO5M,IAC9B7B,KAAK6N,OAAS,SACd7N,KAAKkB,KAAO,OACa,WAAhBuN,EAAOE,MAAqB2B,IACrCtQ,KAAKkB,KAAOoP,GAGPlC,GAGTmE,OAAQ,SAASlC,GACf,IAAK,IAAI/R,EAAI0B,KAAKuQ,WAAWhS,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAI4R,EAAQlQ,KAAKuQ,WAAWjS,GAC5B,GAAI4R,EAAMG,aAAeA,EAGvB,OAFArQ,KAAKsS,SAASpC,EAAMO,WAAYP,EAAMI,UACtCE,EAAcN,GACP9B,IAKb,MAAS,SAAS+B,GAChB,IAAK,IAAI7R,EAAI0B,KAAKuQ,WAAWhS,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAI4R,EAAQlQ,KAAKuQ,WAAWjS,GAC5B,GAAI4R,EAAMC,SAAWA,EAAQ,CAC3B,IAAI1B,EAASyB,EAAMO,WACnB,GAAoB,UAAhBhC,EAAOE,KAAkB,CAC3B,IAAI6D,EAAS/D,EAAO5M,IACpB2O,EAAcN,GAEhB,OAAOsC,GAMX,MAAM,IAAI1M,MAAM,0BAGlB2M,cAAe,SAAS9B,EAAUb,EAAYC,GAa5C,OAZA/P,KAAKiO,SAAW,CACdtN,SAAUwO,EAAOwB,GACjBb,WAAYA,EACZC,QAASA,GAGS,SAAhB/P,KAAK6N,SAGP7N,KAAK6B,IAAMS,GAGN8L,IAQJtQ,EA9sBM,CAqtBgBD,EAAOC,SAGtC,IACE4U,mBAAqBrG,EACrB,MAAOsG,GAWmB,kBAAfC,WACTA,WAAWF,mBAAqBrG,EAEhCwG,SAAS,IAAK,yBAAdA,CAAwCxG,K,cC/uB5C,SAASyG,EAAgBnQ,EAAGoQ,GAK1B,OAJAlV,EAAOC,QAAUgV,EAAkBlU,OAAOM,gBAAkB,SAAyByD,EAAGoQ,GAEtF,OADApQ,EAAEC,UAAYmQ,EACPpQ,GACN9E,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,QACjEgV,EAAgBnQ,EAAGoQ,GAG5BlV,EAAOC,QAAUgV,EAAiBjV,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,cCKvGD,EAAOC,QAbP,WACE,GAAuB,qBAAZmC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAU8S,KAAM,OAAO,EACnC,GAAqB,oBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,QAAQjU,UAAUkU,QAAQlS,KAAKhB,QAAQC,UAAUgT,QAAS,IAAI,iBACvD,EACP,MAAO5O,GACP,OAAO,IAIiCzG,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,gBCbjH,IAAIsV,EAAU,EAAQ,KAAwB,QAE1CC,EAAwB,EAAQ,IAYpCxV,EAAOC,QAVP,SAAoCsE,EAAMnB,GACxC,GAAIA,IAA2B,WAAlBmS,EAAQnS,IAAsC,oBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAIhD,UAAU,4DAGtB,OAAOoV,EAAsBjR,IAGcvE,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,cCdlH,SAASsV,EAAQpG,GAGf,OAAQnP,EAAOC,QAAUsV,EAAU,mBAAqB1S,QAAU,iBAAmBA,OAAOC,SAAW,SAAUqM,GAC/G,cAAcA,GACZ,SAAUA,GACZ,OAAOA,GAAO,mBAAqBtM,QAAUsM,EAAI1N,cAAgBoB,QAAUsM,IAAQtM,OAAOzB,UAAY,gBAAkB+N,GACvHnP,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,QAAUsV,EAAQpG,GAG5FnP,EAAOC,QAAUsV,EAASvV,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,gBCV/F,IAAIyF,EAAmB,EAAQ,IAM/B1F,EAAOC,QAJP,SAA4BwC,GAC1B,GAAIC,MAAMC,QAAQF,GAAM,OAAOiD,EAAiBjD,IAGbzC,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,cCF1GD,EAAOC,QAJP,SAA0BuT,GACxB,GAAsB,qBAAX3Q,QAAmD,MAAzB2Q,EAAK3Q,OAAOC,WAA2C,MAAtB0Q,EAAK,cAAuB,OAAO9Q,MAAM8C,KAAKgO,IAGnFxT,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,cCAxGD,EAAOC,QAJP,WACE,MAAM,IAAIG,UAAU,yIAGeJ,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,cCA1GD,EAAOC,QAJP,SAAyBwC,GACvB,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,GAGCzC,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,cC0BvGD,EAAOC,QA9BP,SAA+BwC,EAAKhC,GAClC,IAAImC,EAAY,MAAPH,EAAc,KAAyB,qBAAXI,QAA0BJ,EAAII,OAAOC,WAAaL,EAAI,cAE3F,GAAU,MAANG,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKX,KAAQS,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGrB,QAETjB,GAAKwC,EAAKvC,SAAWD,GAH4ByC,GAAK,IAK5D,MAAOM,GACPL,GAAK,EACLH,EAAKQ,EACL,QACA,IACON,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,IAG+BjD,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,cC1B7GD,EAAOC,QAJP,WACE,MAAM,IAAIG,UAAU,8IAGaJ,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,gBCJxG,IAAI0B,EAAiB,EAAQ,IAW7B3B,EAAOC,QATP,SAAwByT,EAAQvM,GAC9B,MAAQpG,OAAOK,UAAUuN,eAAevL,KAAKsQ,EAAQvM,IAEpC,QADfuM,EAAS/R,EAAe+R,MAI1B,OAAOA,GAGwB1T,EAAOC,QAAQI,YAAa,EAAML,EAAOC,QAAiB,QAAID,EAAOC,S,wvBCEtG,IAAI,EAA+B,GAE/B,EAAuD,GAEvD,EAAuD,GAY3D,SAAS,EACL,EACA,EACA,EACA,EACA,GAEA,IAAM,EAAsB,YAAd,EAA0B,EAAgB,EAClD,KAAY,IACd,EAAM,GAAY,IAEtB,EAAM,GAAU,GAAY,CAAE,WAAU,SAU5C,SAAS,EACL,EACA,EACA,GAEA,IAAM,EAAsB,YAAd,EAA0B,EAAgB,EACtD,OAAK,KAAY,GAAS,KAAY,EAAM,GAAY,EAAM,GAAU,GAAY,KAS1F,SAAS,EAAuB,EAAkB,GAC9C,IAAMwV,EAAsB,YAAd,EAA0B,EAAgB,EACxD,OAAO,KAAY,EAAQ,OAAO,KAAK,EAAM,IAAa,GAQ9D,SAAS,EACL,EACA,GAEA,IAAM,EAAsB,YAAd,EAA0B,EAAgB,EACxD,KAAM,KAAY,GACd,MAAO,GAGX,IAAM,EAAyC,GAI7C,OAHF,OAAO,QAAQ,EAAM,IAAW,SAAQ,YAA6B,aAA3B,EAA2B,KAAf,EAAe,KAAf,SAClD,EAAI,GAAY,KAEb,EASX,SAAS,EAA0B,GAG/B,IAAM,EAAsB,YAAd,EAA0B,EAAgB,EAClD,EAAmC,GAIzC,OAHA,OAAO,QAAQ,GAAO,SAAQ,YAAqB,aAAnB,EAAmB,KAAd,EAAc,KAC/C,EAAI,GAAO,OAAO,KAAK,MAEpB,EASX,SAAS,EAAmC,GAGxC,IAAM,EAAsB,YAAd,EAA0B,EAAgB,EAClD,EAA4D,GAOlE,OANA,OAAO,QAAQ,GAAO,SAAQ,YAAqB,aAAnB,EAAmB,KAAd,EAAc,KAC/C,EAAI,GAAO,GACX,OAAO,QAAQ,GAAW,SAAQ,YAA6B,aAA3B,EAA2B,KAAf,EAAe,KAAf,SAC5C,EAAI,GAAK,GAAY,QAGtB,EASX,SAAS,EACL,EACA,EACA,GAEA,IAAM,EAAsB,YAAd,EAA0B,EAAgB,EACpD,KAAY,GAAS,KAAY,EAAM,WAChC,EAAM,GAAU,GAS/B,SAAS,EAAqB,EAAkB,GAC5C,IAAMA,EAAsB,YAAd,EAA0B,EAAgB,EACpD,KAAY,UACL,EAAM,GAgNrB,SAAgB,IACZ,EAAe,GAcnB,SAAgB,IACZ,EAAgB,GAcpB,SAAgB,IACZ,EAAgB,GAnOpB,6BAAkC,EAAkB,EAAqB,GACrE,EAAa,GAAY,CAAE,WAAU,UAQzC,6BAAkC,GAC9B,OAAO,KAAY,EAAe,EAAa,GAAY,MAO/D,oCACI,OAAO,OAAO,KAAK,IAOvB,6CACI,IAAM,EAA2C,GAIjD,OAHA,OAAO,QAAQ,GAAc,SAAQ,YAA6B,aAA3B,EAA2B,KAAf,EAAe,KAAf,SAC/C,EAAM,GAAY,KAEf,GAOX,gCAAqC,GAC7B,KAAY,UACL,EAAa,IAW5BxV,EAAQ,mBAAR,SACI,EACA,EACA,EACA,GAEA,EAAkB,EAAU,EAAU,EAAO,EAAS,YAS1D,8BAAmC,EAAkB,GACjD,OAAO,EAAkB,EAAU,EAAS,YAQhD,mCAAwC,GACpC,OAAO,EAAuB,EAAS,YAQ3C,4CAAiD,GAG7C,OAAO,EAAgC,EAAS,YAQpD,wCACI,OAAO,EAA0B,YAQrC,iDAGI,OAAO,EAAmC,YAQ9C,iCAAsC,EAAkB,GACpD,EAAqB,EAAU,EAAS,YAU5CA,EAAQ,mBAAR,SACI,EACA,EACA,EACA,GAEA,EAAkB,EAAU,EAAU,EAAO,EAAS,YAS1D,8BAAmC,EAAkB,GACjD,OAAO,EAAkB,EAAU,EAAS,YAQhDA,EAAQ,wBAAR,SAAwC,GACpC,OAAO,EAAuB,EAAS,YAQ3C,4CAAiD,GAG7C,OAAO,EAAgC,EAAS,YAQpD,wCACI,OAAO,EAA0B,YAQrC,iDAGI,OAAO,EAAmC,YAQ9C,iCAAsC,EAAkB,GACpD,EAAqB,EAAU,EAAS,YAM5C,yBAQA,iCAAsC,GAClC,EAAqB,EAAS,YAMlC,6BAQA,iCAAsC,GAClC,EAAqB,EAAS,YAMlC,6BAOA,+BACI,IACA,IACA,M,qSC/YJ,YAQA,QAEA,QASI,EAAiC,GAEjC,EAAiC,GAEjC,EAA0B,GA8B1B,EAaA,CACE,QAAO,GACT,QAAS,GACT,OAAQ,IAIR,EAAsF,KAO1F,SAAS,IACH,GAAc,uBACd,GAAc,uBACd,GAAY,iBAEZ,EAAY,CACV,QAAS,GACT,QAAS,GACT,OAAQ,IARC,IAAF,MAWe,GAXb,IAWb,2BAAyC,KAA9B,EAA8B,QACrC,EAAW,QAAY,EAAY,QAAU,CACzC,OAAQ,GACR,GAAI,KACJ,UAAW,GACX,WAAY,OAhBT,SAAI,EAAJ,aAAI,EAAJ,IAAE,IAAF,MAoBe,GApBb,IAoBT,IAAJ,uBAAyC,KAA9B,EAA8B,QACrC,EAAW,QAAY,EAAY,QAAU,CACzC,OAAQ,GACR,GAAI,KACJ,UAAW,GACX,WAAY,OAzBT,SAAI,EAAJ,aAAI,EAAJ,IAAE,IAAF,MA6Ba,GA7BX,IA6BT,IAAJ,uBAAqC,KAA1B,EAA0B,QACjC,EAAW,OAAW,EAAU,QAAU,CACtC,OAAQ,GACR,GAAI,KACJ,UAAW,GACX,WAAY,OAlCT,SAAI,EAAJ,aAAI,EAAJ,IAsCX,EAAiB,KAWrB,oCACI,GAEE,OAAyD,IAAvD,OAAO,KAAK,EAAgB,gBAAgB,OACrC,KAGX,SAAS,EACL,GAKA,cAAiC,OAAO,QAAQ,EAAK,gBAArD,eAAsE,CAAjE,gBAAO,EAAP,KAAgB,EAAhB,KACD,GAAgB,OAAZ,EACA,MAAO,CACH,YAAa,EACb,WAGJ,GAAI,aAAmB,qBAAoB,CACvC,IAAM,EAAS,EAA2B,GAC1C,GAAe,OAAX,EACA,OAAO,GAKvB,OAAO,KAGJ,CAA2B,IAUtCA,EAAQ,yBAAR,SACI,GAEA,OAA2D,IAAvD,OAAO,KAAK,EAAgB,gBAAgB,OACrC,GAGX,SAAS,EACL,GAEA,IAAI,EAA8D,GAalE,OAXA,OAAO,QAAQ,EAAK,gBAAiB,SAAQ,YAAiB,aAAZ,GAAY,WACtD,aAAmB,uBACnB,EAAQ,YAAO,GAAP,EAAoB,EAA2B,MAE3D,EAAS,MACL,iBAAY,EAAS,YAAa,aAMnC,EAGJ,CAA2B,IAOtC,4BAAiC,GAC3B,IAEA,IAHyC,EAGvC,OAAmD,EAHZ,IAKjB,GALiB,IAKvC,IAAJ,uBAAyC,KAA9B,EAA8B,QACrC,GAAI,EAAY,SAAW,EAAQ,CAC/B,EAAiB,CAAE,KAAM,EAAa,OAAQ,WAC9C,EAAqB,EAAW,QAAY,GAC5C,QATmC,wCAajB,GAbiB,IAa3C,2BAAyC,KAA9B,EAA8B,QACrC,GAAI,EAAY,SAAW,EAAQ,CAC/B,EAAiB,CAAE,KAAM,EAAa,OAAQ,WAC9C,EAAqB,EAAW,QAAY,GAC5C,QAjBmC,wCAqBnB,GArBmB,IAqBvC,IAAJ,uBAAqC,KAA1B,EAA0B,QACjC,GAAI,EAAU,SAAW,EAAQ,CAC7B,EAAiB,CAAE,KAAM,EAAW,OAAQ,UAC5C,EAAqB,EAAW,OAAW,GAC3C,QAzBmC,mCA6BhB,IAAvB,IACI,EAAe,GAAK,EAAgB,KACpC,EAAe,OAAO,KAAK,CAC3B,KAAM,EAAgB,KACtB,MAAO,SASnB,8BACM,OAAK,EAAiB,EAAe,KAAK,OAAS,MAOzD,yBAA8B,GACH,OAAnB,IAIF,EAAU,EAAe,QAAQ,EAAe,KAAK,QAAQ,WAAa,IAMhF,6BAC2B,OAAnB,IAIF,EAAU,EAAe,QAAQ,EAAe,KAAK,QAAQ,WAAa,OAOhF,0BAAgB,IACV,GAAqB,OAAnB,EAII,OAAG,KAGT,IAAI,EAAqB,EAAY,EAAe,QAAQ,EAAe,KAAK,QAE7C,OAAjC,EAAmB,YACf,EAAe,UAAU,SAAQ,SAAC,GAAD,OAAa,OAC9C,EAAe,UAAY,IAGjC,IAAI,EAAc,EAAmB,GACjC,EAAS,EAAmB,OAEhC,GAAkB,OAAhB,EAAsB,CAClB,GAAkB,IAAlB,EAAO,OAMP,OADA,IACO,KAMP,IAAM,EAAQ,EAAO,EAAO,OAAS,GACrC,MAAM,MAAK,2BACa,EAAM,MAAO,EAAM,MAAO,OAAS,GAAG,OADnD,iBAEHyV,EAAM,KAAK,YAFR,wBAGS,EAAM,KAAK,OAHpB,OAQjB,IAAI,GAAW,iBAAY,EAAY,YAAa,SAEpD,SAAO,IACD,IAAE,EAAQ,EAAO,EAAO,OAAS,GAkBjC,GAhBgB,OAAhB,EAAM,QACN,EAAM,MAAQ,GAEd,OAAO,QACF,EACI,gBACP,SAAQ,yBAAE,EAAF,KAAW,EAAX,YACN,EAAM,MAAO,KAAK,CACd,KAAM,EACN,OAAQ,OAIV,QAAQ,EAAM,MAAM,WAGH,IAAvB,EAAM,MAAM,OAAc,CAC1B,GAA8B,iBAA1B,EAAM,MAAM,GAAG,OAOf,OANA,EAAmB,UAAU,MAAK,WACQ,qBAAlC,EAAmB,YACnB,EAAO,SAIR,CAAE,OAAQ,gBAGrB,IAAM,EAAe,EAAM,MAAM,EAAM,MAAM,OAAS,GAAG,KAWzD,OATA,EAAmB,UAAU,MAAK,WAC9B,EAAO,KAAK,CACR,KAAM,EACN,MAAO,OAGX,EAAmB,GAAK,KAGrB,CAAE,QAAS,KAElB,GAAI,aAAuB,gBAUvB,OATA,EAAM,MAAQ,CACV,CACI,KAAM,EACN,OAAQ,iBAIhB,GAAwB,GAEjB,CACH,QAAS,CACL,KAAM,cACN,SAAU,EACV,OAAQ,OAKpB,EAAO,MAEP,IAAI,EAAwB,KAE5B,GAAI,aAAuB,sBAAwC,IAAlB,EAAO,OAAc,CAClE,IAAM,EAAgB,EAAO,EAAO,OAAS,GAAG,MAChD,EAAS,EAAc,EAAc,OAAS,GAAG,OACjD,EAAO,EAAO,OAAS,GAAG,MAAO,MAGrC,MAAO,CAAE,UAIjB,SAAS,EAAwB,GAC7B,EAAmB,UAAU,MAAK,WAC9B,IAAI,EAAY,EAAkD,gBAElE,GAAI,aAAuB,gBAKvB,IAJI,GAA6C,qBAAlC,EAAmB,cAC9B,EAAW,EAAY,iBAGW,oBAAlC,EAAmB,WAEnB,IADA,EAAW,EAAY,gBACH,OAAb,GAAkD,OAA7B,EAAS,iBACjC,EAAW,EAAS,oBAEiB,kBAAlC,EAAmB,aAC1B,EAAO,EAAO,OAAS,GAAG,MAAQ,CAC9B,CACI,KAAM,EACN,OAAQ,iBAGhB,EAAW,MAImB,aAAlC,EAAmB,WACnB,EAAY,EAAkD,iBACrB,aAAlC,EAAmB,WAET,QADjB,EAAY,EAAkD,mBAE1D,EAAW,EAAS,iBAEiB,eAAlC,EAAmB,WAC1B,EAAW,EAEuB,iBAAlC,EAAmB,YACe,kBAAlC,EAAmB,aAEf,EAAO,OAAS,IAChB,EAAO,EAAO,OAAS,GAAG,MAAQ,CAC9B,CACI,KAAM,EACN,OAAQ,kBAIpB,EAAW,MAGuB,kBAAlC,EAAmB,aACnB,EAAmB,WAAa,MAGnB,OAAb,EACsB,IAAlB,EAAO,OACP,EAAmB,GAAK,EAAO,EAAO,OAAS,GAAG,KAElD,EAAmB,GAAK,GAG5B,EAAO,KAAK,CACR,KAAM,EACN,MAAO,OAEX,EAAmB,GAAK,MAKpC,GAAI,aAAuB,eAAc,CACrC,EAAO,MAEP,IAAI,EAAwB,KAE5B,GAAsB,IAAlB,EAAO,OAAc,CACrB,IAAM,EAAgB,EAAO,EAAO,OAAS,GAAG,MAChD,EAAS,EAAc,EAAc,OAAS,GAAG,OACjD,EAAO,EAAO,OAAS,GAAG,MAAO,MAGrC,IAAM,EAA0B,CAC5B,KAAM,WACN,SAAU,EACV,UAOJ,OAJA,EAAmB,UAAU,MAAK,WAC9B,EAAmB,GAAK,EAAY,eAGjC,EACJ,GAAI,aAAuB,qBAAoB,CAClD,IAAM,EAAS,IACf,GAAI,YAAa,EACb,OAAO,EAAO,QAGlB,IAAM,EAA0B,CAC5B,KAAM,WACN,SAAU,EACV,OAAQ,EAAO,QAOnB,OAJA,EAAmB,UAAU,MAAK,WAC9B,EAAmB,GAAK,EAAY,eAGjC,EAEP,IAAM,EAAS,IACf,MAAI,YAAa,EACN,EAAO,SAGlB,IAEO,CACH,KAAM,cACN,UAC2B,oBAChB,GAEX,OAAQ,EAAO,UAS3B,wBASI,GAAuB,OAAnB,EACA,OAAO,KAGX,IAAM,EAAqB,EAAY,EAAe,QAAQ,EAAe,KAAK,QAC5E,EAAc,EAAmB,GACvC,MAAO,YACA,EAAmB,OAAO,KAAI,gBAAG,EAAH,EAAG,KAAM,EAAT,EAAS,MAAT,MAAsB,CACnD,YAAa,EAAO,EAAK,YAAc,KACvC,OAAQ,EAAO,EAAK,OAAS,KAC7B,MAAO,EACD,EAAM,KAAI,gBAAG,EAAH,EAAG,KAAM,EAAT,EAAS,OAAT,MAAuB,CAC7B,YAAa,EAAO,EAAK,YAAc,KACvC,OAAQ,EAAO,EAAK,OAAS,KAC7B,aAEJ,UAVP,CAYH,CACI,YAAa,EAAc,EAAY,YAAc,KACrD,OAAQ,EAAc,EAAY,OAAS,KAC3C,MAAO,QAEb,WAGN,K,8EC3iBA,YAKA,QAMA,QAMA,QAOA,QACA,QACA,QACA,QAKM,EAMF,CAEE,gBAAe,CACb,MAAO,OACP,KAAM,OACN,SAAU,QACV,UAAW,sBACX,OAAQ,CACJ,MAAO,CAAC,aAGhB,eAAgB,CACZ,MAAO,IACP,KAAM,OACN,SAAU,QACV,UAAW,qBACX,OAAQ,CACJ,MAAO,CAAC,YAGd,eAAc,CACZ,MAAO,SACP,KAAM,OACN,SAAU,QACV,UAAW,sBAGb,cAAa,CACX,MAAO,MACP,KAAM,YACN,SAAU,MACV,UAAW,qBAEb,cAAa,CACX,MAAO,gBACP,KAAM,YACN,SAAU,MACV,UAAW,qBAEb,aAAY,CACV,MAAO,eACP,KAAM,YACN,SAAU,MACV,UAAW,oBAEb,aAAY,CACV,MAAO,eACP,KAAM,YACN,SAAU,MACV,UAAW,oBAGb,wBAAuB,CACrB,MAAO,QACP,KAAM,OACN,SAAU,gBACV,UAAW,+BAEb,wBAAuB,CACrB,MAAO,QACP,KAAM,OACN,SAAU,gBACV,UAAW,+BAEb,uBAAsB,CACpB,MAAO,QACP,KAAM,OACN,SAAU,gBACV,UAAW,8BAEb,uBAAsB,CACpB,MAAO,QACP,KAAM,OACN,SAAU,gBACV,UAAW,8BAGb,qBAAoB,CAClB,MAAO,IACP,KAAM,aACN,SAAU,gBACV,UAAW,2BAEb,sBAAqB,CACnB,MAAO,IACP,KAAM,aACN,SAAU,gBACV,UAAW,4BAEf,sBAAuB,CACnB9Q,MAAO,OACPkM,KAAM,aACN6E,SAAU,gBACVvU,UAAW,4BAEb,uBAAsB,CACpB,MAAO,OACP,KAAM,aACN,SAAU,gBACV,UAAW,6BAEb,wBAAuB,CACrB,MAAO,IACP,KAAM,aACN,SAAU,gBACV,UAAW,8BAGb,OAAQ,CACN,MAAO,SACP,KAAM,QACN,SAAU,OACV,UAAW,iBAGf,GAAM,CACF,MAAO,KACP,KAAM,QACN,SAAU,OACV,UAAW,aAGf,QAAW,CACP,MAAO,QACP,KAAM,QACN,SAAU,UACV,UAAW,iBACX,YAAY,EACZ,YAAY,GAEhB,QAAW,CACP,MAAO,SACP,KAAM,QACN,SAAU,UACV,UAAW,iBACX,YAAY,EACZ,YAAY,GAGhB,MAAS,CACL,MAAO,QACP,KAAM,YACN,SAAU,QACV,UAAW,iBAInB,UAAe","file":"static/js/23.01fdc71f.chunk.js","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}\n\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","module.exports = require(\"regenerator-runtime\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementBlock = exports.ElementStatement = exports.ElementInstruction = void 0;\nconst elementSyntax_1 = require(\"./elementSyntax\");\n// -------------------------------------------------------------------------------------------------\n/**\n * @virtual\n * @class\n * Defines a generic instruction element.\n *\n * @classdesc\n * Instruction elements execute logic and may operate on the parameters passed. Every statement\n * element and block element needs to extend this class.\n */\nclass ElementInstruction extends elementSyntax_1.ElementSyntax {\n    /**\n     * @param name name of the instruction element\n     * @param label display name of the instruction element\n     * @param type type (`Statement`, `Block`) of the instruction element\n     * @param argMap an object describing the type specification of each argument as a\n     *  `argName: type[]` pair\n     */\n    constructor(name, label, type, argMap) {\n        super(name, label, 'Instruction', type, argMap);\n    }\n}\nexports.ElementInstruction = ElementInstruction;\n/**\n * @virtual\n * @class\n * Defines a generic statement element.\n *\n * @classdesc\n * Statement elements execute one single logic.\n */\nclass ElementStatement extends ElementInstruction {\n    /**\n     * @param name name of the statement element\n     * @param label display name of the instruction element\n     * @param argMap an object describing the type specification of each argument as a\n     *  `argName: type[]` pair\n     */\n    constructor(name, label, argMap) {\n        super(name, label, 'Statement', argMap);\n    }\n}\nexports.ElementStatement = ElementStatement;\n/**\n * @virtual\n * @class\n * Defines a generic block element.\n *\n * @classdesc\n * Block elements encapsulate other instruction elements and set-up states prior to their execution.\n * After the contained instruction elements have completed execution, the initial state prior to\n * visiting the block element is restored.\n */\nclass ElementBlock extends ElementInstruction {\n    /**\n     * @param name name of the block element\n     * @param label display name of the instruction element\n     * @param argMap an object describing the type specification of each argument as a\n     *  `argName: type[]` pair\n     */\n    constructor(name, label, argMap) {\n        super(name, label, 'Block', argMap);\n    }\n}\nexports.ElementBlock = ElementBlock;\n//# sourceMappingURL=elementInstruction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resetWarehouse = exports.getCategoryCountAll = exports.getCategoryCount = exports.getTypeCountAll = exports.getTypeCount = exports.getKindCountAll = exports.getKindCount = exports.getNameCountAll = exports.getNameCount = exports.removeInstance = exports.getInstance = exports.addInstance = void 0;\nconst uuid_1 = require(\"uuid\");\nconst specification_1 = require(\"../specification/specification\");\nconst elementArgument_1 = require(\"../elements/elementArgument\");\n// -- private variables ----------------------------------------------------------------------------\n/** A non-generic wrapper for class `ElementData`. */\nclass _ElementDataCover extends elementArgument_1.ElementData {\n}\n/** A non-generic wrapper for class `ElementExpression`. */\nclass _ElementExpressionCover extends elementArgument_1.ElementExpression {\n}\n/** Stores the count of element name. */\nlet _elementNameCountMap = {};\n/** Stores the count of element kind. */\nlet _elementKindCountMap = {};\n/** Stores the count of element type. */\nlet _elementTypeCountMap = {};\n/** Stores the count of element category. */\nlet _elementCategoryCountMap = {};\n/** Stores an extensive table of element name, kind, type, category, instance, by instance ID. */\nlet _elementMap = {};\n// -- private functions ----------------------------------------------------------------------------\n/**\n * Helper function that creates a new instance, adds to element table, and updates count tables.\n * @param elementName - name of the element\n * @param instanceID - key for entry in element table\n * @param instance - element instance\n * @param type - type of the element\n * @param category - category of the element\n */\nfunction _addInstance(elementName, instanceID, instance, type, category) {\n    const kind = type === 'Data' || type === 'Expression' ? 'Argument' : 'Instruction';\n    switch (type) {\n        case 'Data':\n            _elementMap[instanceID] = {\n                instance: instance,\n                name: elementName,\n                type: type,\n                kind: 'Argument',\n                category: category,\n            };\n            break;\n        case 'Expression':\n            _elementMap[instanceID] = {\n                instance: instance,\n                name: elementName,\n                type: type,\n                kind: 'Argument',\n                category: category,\n            };\n            break;\n        case 'Statement':\n            _elementMap[instanceID] = {\n                instance: instance,\n                name: elementName,\n                type: type,\n                kind: 'Instruction',\n                category: category,\n            };\n            break;\n        case 'Block':\n            _elementMap[instanceID] = {\n                instance: instance,\n                name: elementName,\n                type: type,\n                kind: 'Instruction',\n                category: category,\n            };\n            break;\n    }\n    _elementNameCountMap[elementName]++;\n    _elementKindCountMap[kind]++;\n    _elementTypeCountMap[type]++;\n    _elementCategoryCountMap[category]++;\n}\n/**\n * Helper that resets the element name count table.\n */\nfunction _resetElementNameCountMap() {\n    _elementNameCountMap = {};\n    (0, specification_1.getElementNames)().forEach((elementName) => (_elementNameCountMap[elementName] = 0));\n}\n/**\n * Helper that resets the element kind count table.\n */\nfunction _resetElementKindCountMap() {\n    _elementKindCountMap = {\n        Argument: 0,\n        Instruction: 0,\n    };\n}\n/**\n * Helper that resets the element type count table.\n */\nfunction _resetElementTypeCountMap() {\n    _elementTypeCountMap = {\n        Data: 0,\n        Expression: 0,\n        Statement: 0,\n        Block: 0,\n    };\n}\n/**\n * Helper that resets the element category count table.\n */\nfunction _resetElementCategoryCountMap() {\n    _elementCategoryCountMap = {};\n    (0, specification_1.getElementCategories)().forEach((category) => (_elementCategoryCountMap[category] = 0));\n}\n// -- public functions -----------------------------------------------------------------------------\n/**\n * Creates a new instance, adds to element table, and updates count tables.\n * @param elementName - name of the element\n * @returns - unique instance ID for the element instance\n */\nfunction addInstance(elementName) {\n    const elementSpecification = (0, specification_1.queryElementSpecification)(elementName);\n    if (elementSpecification === null) {\n        throw Error(`InvalidAccessError: element with name \"${elementName}\" does not exist`);\n    }\n    const { label, type, category, prototype } = elementSpecification;\n    let instance;\n    switch (type) {\n        case 'Data':\n            instance = prototype(elementName, label);\n            break;\n        case 'Expression':\n            instance = prototype(elementName, label);\n            break;\n        case 'Statement':\n            instance = prototype(elementName, label);\n            break;\n        case 'Block':\n        default:\n            instance = prototype(elementName, label);\n    }\n    let instanceID;\n    do {\n        instanceID = (0, uuid_1.v4)();\n    } while (instanceID in _elementMap);\n    _addInstance(elementName, instanceID, instance, type, category);\n    return instanceID;\n}\nexports.addInstance = addInstance;\n/**\n * Fetches the element instance entry from element table.\n * @param instanceID - instance ID of the element in element table\n * @returns element instance with additional properties\n */\nfunction getInstance(instanceID) {\n    return instanceID in _elementMap ? Object.assign({}, _elementMap[instanceID]) : null;\n}\nexports.getInstance = getInstance;\n/**\n * Removes the element entry corresponding to the instance ID and updates count tables.\n * @param instanceID - instance ID of the element in element table\n */\nfunction removeInstance(instanceID) {\n    if (!(instanceID in _elementMap)) {\n        return;\n    }\n    const { name, kind, type, category } = _elementMap[instanceID];\n    _elementNameCountMap[name]--;\n    _elementKindCountMap[kind]--;\n    _elementTypeCountMap[type]--;\n    _elementCategoryCountMap[category]--;\n    delete _elementMap[instanceID];\n}\nexports.removeInstance = removeInstance;\n/**\n * Returns the number of element instances of an element name exists in element table.\n * @param name - name of the element\n * @returns count of the element instances for the element name\n */\nfunction getNameCount(name) {\n    return _elementNameCountMap[name];\n}\nexports.getNameCount = getNameCount;\n/**\n * Generates a table of element instance counts by element name.\n * @returns an object with key-value pairs of element name and instance count\n */\nfunction getNameCountAll() {\n    return Object.assign({}, _elementNameCountMap);\n}\nexports.getNameCountAll = getNameCountAll;\n/**\n * Returns the number of element instances of an element kind exists in element table.\n * @param kind - kind of the element\n * @returns count of the element instances for the element kind\n */\nfunction getKindCount(kind) {\n    return _elementKindCountMap[kind];\n}\nexports.getKindCount = getKindCount;\n/**\n * Generates a table of element instance counts by element kind.\n * @returns an object with key-value pairs of element kind and instance count\n */\nfunction getKindCountAll() {\n    return Object.assign({}, _elementKindCountMap);\n}\nexports.getKindCountAll = getKindCountAll;\n/**\n * Returns the number of element instances of an element type exists in element table.\n * @param type - type of the element\n * @returns count of the element instances for the element type\n */\nfunction getTypeCount(type) {\n    return _elementTypeCountMap[type];\n}\nexports.getTypeCount = getTypeCount;\n/**\n * Generates a table of element instance counts by element type.\n * @returns an object with key-value pairs of element type and instance count\n */\nfunction getTypeCountAll() {\n    return Object.assign({}, _elementTypeCountMap);\n}\nexports.getTypeCountAll = getTypeCountAll;\n/**\n * Returns the number of element instances of an element category exists in element table.\n * @param category - category of the element\n * @returns count of the element instances for the element category\n */\nfunction getCategoryCount(category) {\n    return _elementCategoryCountMap[category];\n}\nexports.getCategoryCount = getCategoryCount;\n/**\n * Generates a table of element instance counts by element category.\n * @returns an object with key-value pairs of element category and instance count\n */\nfunction getCategoryCountAll() {\n    return Object.assign({}, _elementCategoryCountMap);\n}\nexports.getCategoryCountAll = getCategoryCountAll;\n/**\n * Resets all the count tables and element map.\n */\nfunction resetWarehouse() {\n    _elementMap = {};\n    _resetElementNameCountMap();\n    _resetElementKindCountMap();\n    _resetElementTypeCountMap();\n    _resetElementCategoryCountMap();\n}\nexports.resetWarehouse = resetWarehouse;\nresetWarehouse();\n//# sourceMappingURL=warehouse.js.map","\"use strict\";\n// == SYNTAX =======================================================================================\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementOperatorMathMinus = exports.ElementOperatorMathPlus = exports.ElementBoxIdentifierString = exports.ElementBoxIdentifierNumber = exports.ElementBoxIdentifierBoolean = exports.ElementBoxIdentifierGeneric = exports.ElementBoxString = exports.ElementBoxNumber = exports.ElementBoxBoolean = exports.ElementBoxGeneric = exports.ElementValueString = exports.ElementValueNumber = exports.ElementValueBoolean = exports.librarySpecification = exports.run = exports.releaseProgramCounter = exports.overrideProgramCounter = exports.queryVariable = exports.declareVariable = exports.getCategoryCountAll = exports.getCategoryCount = exports.getKindCountAll = exports.getKindCount = exports.getTypeCountAll = exports.getTypeCount = exports.getNameCountAll = exports.getNameCount = exports.getInstance = exports.assignNodeValue = exports.resetSyntaxTree = exports.generateFromSnapshot = exports.generateSnapshot = exports.getNode = exports.getCrumbs = exports.getRoutineNodes = exports.getProcessNodes = exports.checkValueAssignment = exports.getSpecificationSnapshot = exports.resetElementSpecificationTable = exports.getElementCategories = exports.getElementNames = exports.queryElementSpecification = exports.removeElementSpecificationEntries = exports.removeElementSpecificationEntry = exports.registerElementSpecificationEntries = exports.registerElementSpecificationEntry = exports.ElementBlock = exports.ElementStatement = exports.ElementExpression = exports.ElementData = void 0;\nexports.ElementRoutine = exports.ElementProcess = exports.ElementPrint = exports.ElementRepeat = exports.ElementIf = exports.ElementOperatorMathModulus = exports.ElementOperatorMathDivide = exports.ElementOperatorMathTimes = void 0;\nvar elementArgument_1 = require(\"./syntax/elements/elementArgument\");\nObject.defineProperty(exports, \"ElementData\", { enumerable: true, get: function () { return elementArgument_1.ElementData; } });\nObject.defineProperty(exports, \"ElementExpression\", { enumerable: true, get: function () { return elementArgument_1.ElementExpression; } });\nvar elementInstruction_1 = require(\"./syntax/elements/elementInstruction\");\nObject.defineProperty(exports, \"ElementStatement\", { enumerable: true, get: function () { return elementInstruction_1.ElementStatement; } });\nObject.defineProperty(exports, \"ElementBlock\", { enumerable: true, get: function () { return elementInstruction_1.ElementBlock; } });\nvar specification_1 = require(\"./syntax/specification/specification\");\nObject.defineProperty(exports, \"registerElementSpecificationEntry\", { enumerable: true, get: function () { return specification_1.registerElementSpecificationEntry; } });\nObject.defineProperty(exports, \"registerElementSpecificationEntries\", { enumerable: true, get: function () { return specification_1.registerElementSpecificationEntries; } });\nObject.defineProperty(exports, \"removeElementSpecificationEntry\", { enumerable: true, get: function () { return specification_1.removeElementSpecificationEntry; } });\nObject.defineProperty(exports, \"removeElementSpecificationEntries\", { enumerable: true, get: function () { return specification_1.removeElementSpecificationEntries; } });\nObject.defineProperty(exports, \"queryElementSpecification\", { enumerable: true, get: function () { return specification_1.queryElementSpecification; } });\nObject.defineProperty(exports, \"getElementNames\", { enumerable: true, get: function () { return specification_1.getElementNames; } });\nObject.defineProperty(exports, \"getElementCategories\", { enumerable: true, get: function () { return specification_1.getElementCategories; } });\nObject.defineProperty(exports, \"resetElementSpecificationTable\", { enumerable: true, get: function () { return specification_1.resetElementSpecificationTable; } });\nObject.defineProperty(exports, \"getSpecificationSnapshot\", { enumerable: true, get: function () { return specification_1.getSpecificationSnapshot; } });\nObject.defineProperty(exports, \"checkValueAssignment\", { enumerable: true, get: function () { return specification_1.checkValueAssignment; } });\nvar syntaxTree_1 = require(\"./syntax/tree/syntaxTree\");\nObject.defineProperty(exports, \"getProcessNodes\", { enumerable: true, get: function () { return syntaxTree_1.getProcessNodes; } });\nObject.defineProperty(exports, \"getRoutineNodes\", { enumerable: true, get: function () { return syntaxTree_1.getRoutineNodes; } });\nObject.defineProperty(exports, \"getCrumbs\", { enumerable: true, get: function () { return syntaxTree_1.getCrumbs; } });\nObject.defineProperty(exports, \"getNode\", { enumerable: true, get: function () { return syntaxTree_1.getNode; } });\nObject.defineProperty(exports, \"generateSnapshot\", { enumerable: true, get: function () { return syntaxTree_1.generateSnapshot; } });\nObject.defineProperty(exports, \"generateFromSnapshot\", { enumerable: true, get: function () { return syntaxTree_1.generateFromSnapshot; } });\nObject.defineProperty(exports, \"resetSyntaxTree\", { enumerable: true, get: function () { return syntaxTree_1.resetSyntaxTree; } });\nObject.defineProperty(exports, \"assignNodeValue\", { enumerable: true, get: function () { return syntaxTree_1.assignNodeValue; } });\n// -- warehouse ------------------------------------------------------------------------------------\nvar warehouse_1 = require(\"./syntax/warehouse/warehouse\");\nObject.defineProperty(exports, \"getInstance\", { enumerable: true, get: function () { return warehouse_1.getInstance; } });\nObject.defineProperty(exports, \"getNameCount\", { enumerable: true, get: function () { return warehouse_1.getNameCount; } });\nObject.defineProperty(exports, \"getNameCountAll\", { enumerable: true, get: function () { return warehouse_1.getNameCountAll; } });\nObject.defineProperty(exports, \"getTypeCount\", { enumerable: true, get: function () { return warehouse_1.getTypeCount; } });\nObject.defineProperty(exports, \"getTypeCountAll\", { enumerable: true, get: function () { return warehouse_1.getTypeCountAll; } });\nObject.defineProperty(exports, \"getKindCount\", { enumerable: true, get: function () { return warehouse_1.getKindCount; } });\nObject.defineProperty(exports, \"getKindCountAll\", { enumerable: true, get: function () { return warehouse_1.getKindCountAll; } });\nObject.defineProperty(exports, \"getCategoryCount\", { enumerable: true, get: function () { return warehouse_1.getCategoryCount; } });\nObject.defineProperty(exports, \"getCategoryCountAll\", { enumerable: true, get: function () { return warehouse_1.getCategoryCountAll; } });\nvar interpreter_1 = require(\"./execution/interpreter\");\nObject.defineProperty(exports, \"declareVariable\", { enumerable: true, get: function () { return interpreter_1.declareVariable; } });\nObject.defineProperty(exports, \"queryVariable\", { enumerable: true, get: function () { return interpreter_1.queryVariable; } });\nObject.defineProperty(exports, \"overrideProgramCounter\", { enumerable: true, get: function () { return interpreter_1.overrideProgramCounter; } });\nObject.defineProperty(exports, \"releaseProgramCounter\", { enumerable: true, get: function () { return interpreter_1.releaseProgramCounter; } });\nObject.defineProperty(exports, \"run\", { enumerable: true, get: function () { return interpreter_1.run; } });\n// == LIBRARY ======================================================================================\n// -- specification --------------------------------------------------------------------------------\nvar specification_2 = require(\"./library/specification\");\nObject.defineProperty(exports, \"librarySpecification\", { enumerable: true, get: function () { return __importDefault(specification_2).default; } });\n// -- elements -------------------------------------------------------------------------------------\nvar elementValue_1 = require(\"./library/elements/elementValue\");\nObject.defineProperty(exports, \"ElementValueBoolean\", { enumerable: true, get: function () { return elementValue_1.ElementValueBoolean; } });\nObject.defineProperty(exports, \"ElementValueNumber\", { enumerable: true, get: function () { return elementValue_1.ElementValueNumber; } });\nObject.defineProperty(exports, \"ElementValueString\", { enumerable: true, get: function () { return elementValue_1.ElementValueString; } });\nvar elementBox_1 = require(\"./library/elements/elementBox\");\nObject.defineProperty(exports, \"ElementBoxGeneric\", { enumerable: true, get: function () { return elementBox_1.ElementBoxGeneric; } });\nObject.defineProperty(exports, \"ElementBoxBoolean\", { enumerable: true, get: function () { return elementBox_1.ElementBoxBoolean; } });\nObject.defineProperty(exports, \"ElementBoxNumber\", { enumerable: true, get: function () { return elementBox_1.ElementBoxNumber; } });\nObject.defineProperty(exports, \"ElementBoxString\", { enumerable: true, get: function () { return elementBox_1.ElementBoxString; } });\nvar elementBoxIdentifier_1 = require(\"./library/elements/elementBoxIdentifier\");\nObject.defineProperty(exports, \"ElementBoxIdentifierGeneric\", { enumerable: true, get: function () { return elementBoxIdentifier_1.ElementBoxIdentifierGeneric; } });\nObject.defineProperty(exports, \"ElementBoxIdentifierBoolean\", { enumerable: true, get: function () { return elementBoxIdentifier_1.ElementBoxIdentifierBoolean; } });\nObject.defineProperty(exports, \"ElementBoxIdentifierNumber\", { enumerable: true, get: function () { return elementBoxIdentifier_1.ElementBoxIdentifierNumber; } });\nObject.defineProperty(exports, \"ElementBoxIdentifierString\", { enumerable: true, get: function () { return elementBoxIdentifier_1.ElementBoxIdentifierString; } });\nvar elementOperatorMath_1 = require(\"./library/elements/elementOperatorMath\");\nObject.defineProperty(exports, \"ElementOperatorMathPlus\", { enumerable: true, get: function () { return elementOperatorMath_1.ElementOperatorMathPlus; } });\nObject.defineProperty(exports, \"ElementOperatorMathMinus\", { enumerable: true, get: function () { return elementOperatorMath_1.ElementOperatorMathMinus; } });\nObject.defineProperty(exports, \"ElementOperatorMathTimes\", { enumerable: true, get: function () { return elementOperatorMath_1.ElementOperatorMathTimes; } });\nObject.defineProperty(exports, \"ElementOperatorMathDivide\", { enumerable: true, get: function () { return elementOperatorMath_1.ElementOperatorMathDivide; } });\nObject.defineProperty(exports, \"ElementOperatorMathModulus\", { enumerable: true, get: function () { return elementOperatorMath_1.ElementOperatorMathModulus; } });\nvar elementConditional_1 = require(\"./library/elements/elementConditional\");\nObject.defineProperty(exports, \"ElementIf\", { enumerable: true, get: function () { return elementConditional_1.ElementIf; } });\nvar elementLoop_1 = require(\"./library/elements/elementLoop\");\nObject.defineProperty(exports, \"ElementRepeat\", { enumerable: true, get: function () { return elementLoop_1.ElementRepeat; } });\nvar elementPrint_1 = require(\"./library/elements/elementPrint\");\nObject.defineProperty(exports, \"ElementPrint\", { enumerable: true, get: function () { return elementPrint_1.ElementPrint; } });\nvar elementProgram_1 = require(\"./library/elements/elementProgram\");\nObject.defineProperty(exports, \"ElementProcess\", { enumerable: true, get: function () { return elementProgram_1.ElementProcess; } });\nObject.defineProperty(exports, \"ElementRoutine\", { enumerable: true, get: function () { return elementProgram_1.ElementRoutine; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementExpression = exports.ElementData = exports.ElementArgument = void 0;\nconst elementSyntax_1 = require(\"./elementSyntax\");\n// -------------------------------------------------------------------------------------------------\n/**\n * @virtual\n * @class\n * Generic class that defines a generic argument element.\n *\n * @classdesc\n * Argument elements return a value which is either stored (data element) or evaluated (expression\n * element) from the parameters passed. Every data element and expression element needs to extend\n * this class.\n */\nclass ElementArgument extends elementSyntax_1.ElementSyntax {\n    /**\n     * @param name name of the argument element\n     * @param label display name of the instruction element\n     * @param type type (`Data`, `Expression`) of the argument element\n     * @param argMap an object describing the type specification of each argument as a\n     *  `argName: type[]` pair\n     * @param returnType return types of the value returned by the argument element\n     * @param initialValue initial return value of the argument\n     */\n    constructor(name, label, type, argMap, returnType, initialValue) {\n        super(name, label, 'Argument', type, argMap);\n        this._returnType = returnType;\n        this._value = initialValue;\n    }\n    get returnType() {\n        return this._returnType;\n    }\n    get value() {\n        return this._value;\n    }\n}\nexports.ElementArgument = ElementArgument;\n/**\n * @virtual\n * @class\n * Generic class that defines a generic data element.\n *\n * @classdesc\n * Data elements return a stored value.\n */\nclass ElementData extends ElementArgument {\n    /**\n     * @param name - name of the data element\n     * @param label - display name of the instruction element\n     * @param argMap - an object describing the type specification of each argument as a\n     *  `argName: type[]` pair\n     * @param returnType - return types of the value returned by the argument element\n     * @param initialValue - initial return value of the argument\n     */\n    constructor(name, label, argMap, returnType, initialValue) {\n        super(name, label, 'Data', argMap, returnType, initialValue);\n    }\n}\nexports.ElementData = ElementData;\n/**\n * @virtual\n * @class\n * Generic class that defines a generic expression element.\n *\n * @classdesc\n * Expression elements evalutate a value based on the provided passed whose shape is in accordance\n * with the shape of arguments it registers.\n */\nclass ElementExpression extends ElementArgument {\n    /**\n     * @param name name of the expression element\n     * @param label display name of the instruction element\n     * @param argMap an object describing the type specification of each argument as a\n     *  `argName: type[]` pair\n     * @param returnType return types of the value returned by the argument element\n     * @param initialValue initial return value of the argument\n     */\n    constructor(name, label, argMap, returnType, initialValue) {\n        super(name, label, 'Expression', argMap, returnType, initialValue);\n    }\n}\nexports.ElementExpression = ElementExpression;\n//# sourceMappingURL=elementArgument.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.run = exports.releaseProgramCounter = exports.overrideProgramCounter = exports.queryVariable = exports.declareVariable = void 0;\nconst symbolTable_1 = require(\"./symbolTable\");\nconst parser_1 = require(\"./parser\");\nconst elementArgument_1 = require(\"../syntax/elements/elementArgument\");\nconst elementInstruction_1 = require(\"../syntax/elements/elementInstruction\");\nfunction declareVariable(variable, dataType, value) {\n    (0, symbolTable_1.addGlobalVariable)(variable, dataType, value);\n}\nexports.declareVariable = declareVariable;\n/**\n * Fetches a variable entry from the symbol table.\n * @param variable name of the variable\n * @returns the variable entry if present, else `null`\n */\nfunction queryVariable(variable) {\n    return (0, symbolTable_1.getGlobalVariable)(variable);\n}\nexports.queryVariable = queryVariable;\n/**\n * Sets a program counter override signal for the current execution item.\n * @param signal program counter override signal\n */\nfunction overrideProgramCounter(signal) {\n    (0, parser_1.setPCOverride)(signal);\n}\nexports.overrideProgramCounter = overrideProgramCounter;\n/**\n * Clears any program counter override signal for the current execution item.\n */\nfunction releaseProgramCounter() {\n    (0, parser_1.clearPCOverride)();\n}\nexports.releaseProgramCounter = releaseProgramCounter;\n/**\n * Runs a process, routine, or crumb stack from start to end.\n * @param nodeID syntax tree node ID of the starting node\n */\nfunction run(nodeID) {\n    class ElementDataCover extends elementArgument_1.ElementData {\n    }\n    class ElementExpressionCover extends elementArgument_1.ElementExpression {\n    }\n    (0, parser_1.setExecutionItem)(nodeID);\n    const memo = {};\n    function __execute() {\n        const element = (0, parser_1.getNextElement)();\n        if (element === null) {\n            return;\n        }\n        const { instance, type, marker } = element;\n        if (type === 'Argument') {\n            if (instance instanceof ElementDataCover) {\n                instance.evaluate();\n            } /* instance instanceof ElementExpressionCover */\n            else {\n                instance.evaluate(memo);\n            }\n            const value = instance.value;\n            if (marker !== null) {\n                memo[marker] = value;\n            }\n        }\n        else {\n            if (instance instanceof elementInstruction_1.ElementStatement) {\n                instance.onVisit(memo);\n            } /* instance instanceof ElementBlock */\n            else {\n                if (marker !== '__rollback__') {\n                    instance.onVisit(memo);\n                }\n                else {\n                    instance.onExit();\n                }\n            }\n        }\n        __execute();\n    }\n    __execute();\n}\nexports.run = run;\n//# sourceMappingURL=interpreter.js.map","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkValueAssignment = exports.getSpecificationSnapshot = exports.resetElementSpecificationTable = exports.getElementCategories = exports.getElementNames = exports.queryElementSpecification = exports.removeElementSpecificationEntries = exports.removeElementSpecificationEntry = exports.registerElementSpecificationEntries = exports.registerElementSpecificationEntry = void 0;\n// -- private variables ----------------------------------------------------------------------------\n/** Stores the specifications for each element as a key-value pair of name: specification. */\nlet _elementSpecification = {};\n/**\n * Stores the snapshot (similar to snapshot, except that prototype is replaced with prototype name —\n * class name of the syntax element or the prototype) of the specifications for each element as a\n * key-value pair of name: specification.\n */\nlet _elementSpecificationSnapshot = {};\n// -- public functions -----------------------------------------------------------------------------\n/**\n * Registers a syntax element specification from a given specification entry data.\n * @param name name of the syntax element\n * @param specification specification entry data\n * @returns `false` if element name already exists, else `true`\n */\nfunction registerElementSpecificationEntry(name, specification) {\n    if (name in _elementSpecification)\n        return false;\n    const { label, type, category, prototype } = specification;\n    const specificationTableEntry = {\n        label,\n        type,\n        category,\n        // @ts-ignore\n        prototype: (name, label) => new prototype(name, label),\n    };\n    const specificationSnapshotTableEntry = {\n        label,\n        type,\n        category,\n        prototypeName: prototype.name,\n    };\n    Object.entries(specification).forEach(([key, value]) => {\n        if (!['label', 'type', 'category', 'prototype'].includes(key)) {\n            // @ts-ignore\n            specificationTableEntry[key] = value;\n            // @ts-ignore\n            specificationSnapshotTableEntry[key] = value;\n        }\n    });\n    _elementSpecification[name] = specificationTableEntry;\n    _elementSpecificationSnapshot[name] = specificationSnapshotTableEntry;\n    return name in _elementSpecification;\n}\nexports.registerElementSpecificationEntry = registerElementSpecificationEntry;\n/**\n * Registers a syntax element specification from a given specification entry table.\n * @param specification specification entry table object with key-value pairs of element name and\n *  corresponding specification entry data\n * @returns a list of boolean , `false` if element name already exists else `true`\n */\nfunction registerElementSpecificationEntries(specification) {\n    const registerStatus = [];\n    Object.entries(specification).forEach(([identifier, specification]) => registerStatus.push(registerElementSpecificationEntry(identifier, specification)));\n    return registerStatus;\n}\nexports.registerElementSpecificationEntries = registerElementSpecificationEntries;\n/**\n * Removes specification for a syntax element.\n * @param name name of the syntax element\n * @returns `true` if element is successfully removed, else `false` if element doesn't exist already\n */\nfunction removeElementSpecificationEntry(name) {\n    if (name in _elementSpecification) {\n        delete _elementSpecification[name];\n        delete _elementSpecificationSnapshot[name];\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.removeElementSpecificationEntry = removeElementSpecificationEntry;\n/**\n * Removes specification for a list of syntax element.\n * @param names list of names of the syntax element\n * @returns list of boolean, `true` if element is successfully removed, else `false`\n */\nfunction removeElementSpecificationEntries(names) {\n    const removeStatus = [];\n    names.forEach((name) => removeStatus.push(removeElementSpecificationEntry(name)));\n    return removeStatus;\n}\nexports.removeElementSpecificationEntries = removeElementSpecificationEntries;\n/**\n * Returns the element specification for a syntax element.\n * @param name name of the syntax element\n * @returns element specification if exists, else `null`\n */\nfunction queryElementSpecification(name) {\n    return name in _elementSpecification ? Object.assign({}, _elementSpecification[name]) : null;\n}\nexports.queryElementSpecification = queryElementSpecification;\n/**\n * Returns the names of available syntax elements.\n * @returns a list of syntax element names.\n */\nfunction getElementNames() {\n    return Object.keys(_elementSpecification);\n}\nexports.getElementNames = getElementNames;\n/**\n * Returns the categories of available syntax elements.\n * @returns a list of syntax element categories\n */\nfunction getElementCategories() {\n    return [...new Set(Object.entries(_elementSpecification).map(([_, { category }]) => category))];\n}\nexports.getElementCategories = getElementCategories;\n/**\n * Resets the element specification to factory list.\n */\nfunction resetElementSpecificationTable() {\n    _elementSpecification = {};\n    _elementSpecificationSnapshot = {};\n}\nexports.resetElementSpecificationTable = resetElementSpecificationTable;\n/**\n * Returns the snapshot of the element specification table.\n * @returns snapshot entry table object with key-value pairs of element name and corresponding\n * element specification snapshot\n */\nfunction getSpecificationSnapshot() {\n    return _elementSpecificationSnapshot;\n}\nexports.getSpecificationSnapshot = getSpecificationSnapshot;\n/**\n * Check if `value` can be assigned to element `name`.\n * @param name name of the syntax element (expecting a data element)\n * @param value value to check\n * @returns whether value can be assigned\n */\nfunction checkValueAssignment(name, value) {\n    if ('values' in _elementSpecification[name]) {\n        const values = _elementSpecification[name].values;\n        if (values instanceof Array) {\n            return values.includes(value);\n        }\n        else {\n            let typeDeepInfer;\n            if (['true', 'false'].includes(value)) {\n                typeDeepInfer = 'boolean';\n            }\n            else if (!isNaN(Number(value))) {\n                typeDeepInfer = 'number';\n            }\n            else {\n                typeDeepInfer = 'string';\n            }\n            return (values.types.includes(typeDeepInfer) || values.types.includes('string'));\n        }\n    }\n    return true;\n}\nexports.checkValueAssignment = checkValueAssignment;\nresetElementSpecificationTable();\n//# sourceMappingURL=specification.js.map","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementSyntax = void 0;\n// -------------------------------------------------------------------------------------------------\n/**\n * @virtual\n * @class\n * Defines a generic syntax element and it's properties.\n *\n * @classdesc\n * Syntax elements define the building blocks of a Music Blocks program. Every building block\n * element need to inherit this class.\n */\nclass ElementSyntax {\n    /**\n     *\n     * @param name name of the syntax element\n     * @param label display of the syntax element\n     * @param kind kind (`Argument`, `Instruction`) of the syntax element\n     * @param type type (`Data`, `Expression`, `Statement`, `Block`) of the syntax element\n     * @param argMap an object describing the type specification of each argument as a\n     *  `argName: type[]` pair\n     */\n    constructor(name, label, kind, type, argMap) {\n        this._name = name;\n        this._label = label;\n        this._kind = kind;\n        this._type = type;\n        this._argMap = argMap;\n        this._argLabels = Object.keys(this._argMap);\n        this._argCount = this.argLabels.length;\n    }\n    get name() {\n        return this._name;\n    }\n    get label() {\n        return this._label;\n    }\n    get kind() {\n        return this._kind;\n    }\n    get type() {\n        return this._type;\n    }\n    get argCount() {\n        return this._argCount;\n    }\n    get argLabels() {\n        return this._argLabels;\n    }\n    getArgType(argName) {\n        return this._argMap[argName];\n    }\n    updateLabel(value) {\n        this._label = value;\n    }\n}\nexports.ElementSyntax = ElementSyntax;\n//# sourceMappingURL=elementSyntax.js.map","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignNodeValue = exports.generateFromSnapshot = exports.generateSnapshot = exports.detachInstructionInside = exports.attachInstructionInside = exports.attachInstructionInsideCheck = exports.detachInstructionBelow = exports.attachInstructionBelow = exports.attachInstructionBelowCheck = exports.detachArgument = exports.attachArgument = exports.attachArgumentCheck = exports.resetSyntaxTree = exports.removeNode = exports.getNode = exports.addNode = exports.getCrumbs = exports.getRoutineNodes = exports.getProcessNodes = void 0;\nconst uuid_1 = require(\"uuid\");\nconst node_1 = require(\"./node\");\nconst warehouse_1 = require(\"../warehouse/warehouse\");\nconst specification_1 = require(\"../specification/specification\");\n// -- private variables ----------------------------------------------------------------------------\n/** Stores a table with key-value pairs of node ID and corresponding node instance. */\nconst _nodeMap = {};\n/** Stores the syntax tree. */\nlet _syntaxTree = {\n    process: [],\n    routine: [],\n    crumbs: [],\n};\n// -- private functions ----------------------------------------------------------------------------\n/**\n * Helper that removes corresponding element instance and removes node table entry.\n * @param nodeID - node ID\n */\nfunction _destroyNode(nodeID) {\n    if (!(nodeID in _nodeMap)) {\n        return;\n    }\n    const node = _nodeMap[nodeID];\n    (0, warehouse_1.removeInstance)(node.instanceID);\n    delete _nodeMap[nodeID];\n}\n/**\n * Helper that checks whether two instruction element nodes can be connected.\n * @param connectorNodeID - node ID of the connector node\n * @param connectingNodeID - node ID of the connecting node\n * @returns `true` if node connections are valid, else `false`\n */\nfunction _attachInstructionCheck(connectorNodeID, connectingNodeID) {\n    if (!(connectorNodeID in _nodeMap) || !(connectingNodeID in _nodeMap)) {\n        return false;\n    }\n    const nodeConnector = _nodeMap[connectorNodeID];\n    const nodeConnecting = _nodeMap[connectingNodeID];\n    const specificationConnector = (0, specification_1.queryElementSpecification)(nodeConnector.elementName);\n    const specificationConnecting = (0, specification_1.queryElementSpecification)(nodeConnecting.elementName);\n    if (specificationConnector.type === 'Data' ||\n        specificationConnector.type === 'Expression' ||\n        specificationConnecting.type === 'Data' ||\n        specificationConnecting.type === 'Expression') {\n        return false;\n    }\n    return true;\n}\n// -- public functions -----------------------------------------------------------------------------\n/**\n * @returns the list of process element nodes.\n */\nfunction getProcessNodes() {\n    return _syntaxTree['process'];\n}\nexports.getProcessNodes = getProcessNodes;\n/**\n * @returns the list of routine element nodes.\n */\nfunction getRoutineNodes() {\n    return _syntaxTree['routine'];\n}\nexports.getRoutineNodes = getRoutineNodes;\n/**\n * @returns the list of top instruction element nodes of crumb stacks.\n */\nfunction getCrumbs() {\n    return _syntaxTree['crumbs'];\n}\nexports.getCrumbs = getCrumbs;\n/**\n * Adds a new element to the syntax tree.\n * @param name - name of the syntax element\n * @returns node ID of the syntax tree node\n */\nfunction addNode(name) {\n    const instanceID = (0, warehouse_1.addInstance)(name);\n    let nodeID;\n    do {\n        nodeID = (0, uuid_1.v4)();\n    } while (nodeID in _nodeMap);\n    let node;\n    const specification = (0, specification_1.queryElementSpecification)(name);\n    switch (specification.type) {\n        case 'Data':\n            node = new node_1.TreeNodeData(name, nodeID, instanceID);\n            break;\n        case 'Expression':\n            node = new node_1.TreeNodeExpression(name, nodeID, instanceID);\n            break;\n        case 'Statement':\n            node = new node_1.TreeNodeStatement(name, nodeID, instanceID);\n            break;\n        case 'Block':\n        default:\n            node = new node_1.TreeNodeBlock(name, nodeID, instanceID);\n    }\n    _nodeMap[nodeID] = node;\n    if (name === 'process') {\n        _syntaxTree['process'].push(node);\n    }\n    else if (name === 'routine') {\n        _syntaxTree['routine'].push(node);\n    }\n    else {\n        _syntaxTree['crumbs'].push(node);\n    }\n    return nodeID;\n}\nexports.addNode = addNode;\n/**\n * Returns a new entry from the syntax tree.\n * @param nodeID - node ID of the syntax tree node\n * @returns syntax tree node entry if present, else `null`\n */\nfunction getNode(nodeID) {\n    return nodeID in _nodeMap ? _nodeMap[nodeID] : null;\n}\nexports.getNode = getNode;\n/**\n * Removes an element node from the syntax tree.\n * @param nodeID - node ID of the syntax tree node\n */\nfunction removeNode(nodeID) {\n    if (!(nodeID in _nodeMap)) {\n        return;\n    }\n    const node = _nodeMap[nodeID];\n    let list;\n    if (node.elementName === 'process') {\n        list = _syntaxTree['process'];\n    }\n    else if (node.elementName === 'routine') {\n        list = _syntaxTree['routine'];\n    }\n    else {\n        list = _syntaxTree['crumbs'];\n    }\n    list.splice(list.indexOf(node), 1);\n    _destroyNode(nodeID);\n}\nexports.removeNode = removeNode;\n/**\n * Resets the syntax tree — removes all nodes and syntax element instances.\n */\nfunction resetSyntaxTree() {\n    Object.entries(_nodeMap).forEach(([nodeID]) => {\n        _destroyNode(nodeID);\n    });\n    _syntaxTree = {\n        process: [],\n        routine: [],\n        crumbs: [],\n    };\n}\nexports.resetSyntaxTree = resetSyntaxTree;\n/**\n * Checks whether an argument element node can be connected.\n * @param connectorNodeID - node ID of the connector node\n * @param connectingNodeID - node ID of the connecting argument element node\n * @returns - `true` if node connections are valid, else `false`\n */\nfunction attachArgumentCheck(connectorNodeID, connectingNodeID, argName) {\n    if (!(connectorNodeID in _nodeMap) || !(connectingNodeID in _nodeMap)) {\n        return false;\n    }\n    const nodeConnector = _nodeMap[connectorNodeID];\n    const nodeConnecting = _nodeMap[connectingNodeID];\n    const specificationConnector = (0, specification_1.queryElementSpecification)(nodeConnector.elementName);\n    const specificationConnecting = (0, specification_1.queryElementSpecification)(nodeConnecting.elementName);\n    if (specificationConnector.type === 'Data' ||\n        specificationConnecting.type === 'Statement' ||\n        specificationConnecting.type === 'Block') {\n        return false;\n    }\n    const instanceConnector = (0, warehouse_1.getInstance)(nodeConnector.instanceID);\n    const instanceConnecting = (0, warehouse_1.getInstance)(nodeConnecting.instanceID);\n    if (!instanceConnector.instance.argLabels.includes(argName)) {\n        return false;\n    }\n    const typeConnector = instanceConnector.instance.getArgType(argName);\n    const typeConnecting = instanceConnecting.instance.returnType;\n    for (const type of typeConnecting) {\n        if (!typeConnector.includes(type)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.attachArgumentCheck = attachArgumentCheck;\n/**\n * Attaches an argument element node.\n * @param connectorNodeID - node ID of the connector node\n * @param connectingNodeID - node ID of the connecting argument element node\n * @param argName - name of the argument\n */\nfunction attachArgument(connectorNodeID, connectingNodeID, argName) {\n    const nodeConnector = _nodeMap[connectorNodeID];\n    const nodeConnecting = _nodeMap[connectingNodeID];\n    nodeConnector.attachArg(argName, nodeConnecting);\n    nodeConnecting.connectedTo = nodeConnector;\n    if (_syntaxTree.crumbs.includes(nodeConnecting)) {\n        _syntaxTree.crumbs.splice(_syntaxTree.crumbs.indexOf(nodeConnecting), 1);\n    }\n}\nexports.attachArgument = attachArgument;\n/**\n * Detaches an argument element node.\n * @param connectorNodeID - node ID of the connector node\n * @param connectingNodeID - node ID of the connecting argument element node\n * @param argName - name of the argument\n */\nfunction detachArgument(connectorNodeID, connectingNodeID, argName) {\n    const nodeConnector = _nodeMap[connectorNodeID];\n    const nodeConnecting = _nodeMap[connectingNodeID];\n    nodeConnector.detachArg(argName);\n    nodeConnecting.connectedTo = null;\n    _syntaxTree.crumbs.push(nodeConnecting);\n}\nexports.detachArgument = detachArgument;\n/**\n * Checks whether an instruction element node can be connected in sequence after another instruction\n * element node.\n * @param connectorNodeID - node ID of the connector instruction element node\n * @param connectingNodeID - node ID of the connecting instruction element node\n * @returns - `true` if node connections are valid, else `false`\n */\nfunction attachInstructionBelowCheck(connectorNodeID, connectingNodeID) {\n    if (!_attachInstructionCheck(connectorNodeID, connectingNodeID)) {\n        return false;\n    }\n    const nodeConnector = _nodeMap[connectorNodeID];\n    const nodeConnecting = _nodeMap[connectingNodeID];\n    const specificationConnector = (0, specification_1.queryElementSpecification)(nodeConnector.elementName);\n    const specificationConnecting = (0, specification_1.queryElementSpecification)(nodeConnecting.elementName);\n    if ((specificationConnector.forbidBelow &&\n        specificationConnector.forbidBelow.includes(nodeConnecting.elementName)) ||\n        (specificationConnecting.forbidAbove &&\n            specificationConnecting.forbidAbove.includes(nodeConnector.elementName))) {\n        return false;\n    }\n    if (specificationConnector.allowBelow !== undefined) {\n        if (specificationConnector.allowBelow instanceof Array) {\n            if (!specificationConnector.allowBelow.includes(nodeConnecting.elementName)) {\n                return false;\n            }\n        }\n        else {\n            if (specificationConnector.allowBelow === false) {\n                return false;\n            }\n        }\n    }\n    if (specificationConnecting.allowAbove !== undefined) {\n        if (specificationConnecting.allowAbove instanceof Array) {\n            if (!specificationConnecting.allowAbove.includes(nodeConnector.elementName)) {\n                return false;\n            }\n        }\n        else {\n            if (specificationConnector.allowAbove === false) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexports.attachInstructionBelowCheck = attachInstructionBelowCheck;\n/**\n * Attaches an instruction element node in sequence after another instruction element node.\n * @param connectorNodeID - node ID of the connector instruction element node\n * @param connectingNodeID - node ID of the connecting instruction element node\n */\nfunction attachInstructionBelow(connectorNodeID, connectingNodeID) {\n    const nodeConnector = _nodeMap[connectorNodeID];\n    const nodeConnecting = _nodeMap[connectingNodeID];\n    nodeConnector.afterConnection = nodeConnecting;\n    nodeConnecting.beforeConnection = nodeConnector;\n    nodeConnecting.nestLevel = nodeConnector.nestLevel;\n    nodeConnecting.parentBlock = nodeConnector.parentBlock;\n    if (_syntaxTree.crumbs.includes(nodeConnecting)) {\n        _syntaxTree.crumbs.splice(_syntaxTree.crumbs.indexOf(nodeConnecting), 1);\n    }\n}\nexports.attachInstructionBelow = attachInstructionBelow;\n/**\n * Detaches an instruction element node from sequence after another instruction element node.\n * @param connectorNodeID - node ID of the connector instruction element node\n * @param connectingNodeID - node ID of the connecting instruction element node\n */\nfunction detachInstructionBelow(connectorNodeID, connectingNodeID) {\n    const nodeConnector = _nodeMap[connectorNodeID];\n    const nodeConnecting = _nodeMap[connectingNodeID];\n    nodeConnector.afterConnection = null;\n    nodeConnecting.beforeConnection = null;\n    nodeConnecting.nestLevel = 0;\n    nodeConnecting.parentBlock = null;\n    _syntaxTree.crumbs.push(nodeConnecting);\n}\nexports.detachInstructionBelow = detachInstructionBelow;\n/**\n * Checks whether an instruction element node can be nested inside a block element node.\n * @param connectorNodeID - node ID of the connector block element node\n * @param connectingNodeID - node ID of the connecting instruction element node\n * @returns - `true` if node connections are valid, else `false`\n */\nfunction attachInstructionInsideCheck(connectorNodeID, connectingNodeID) {\n    if (!_attachInstructionCheck(connectorNodeID, connectingNodeID)) {\n        return false;\n    }\n    const nodeConnector = _nodeMap[connectorNodeID];\n    const nodeConnecting = _nodeMap[connectingNodeID];\n    const specificationConnector = (0, specification_1.queryElementSpecification)(nodeConnector.elementName);\n    const specificationConnecting = (0, specification_1.queryElementSpecification)(nodeConnecting.elementName);\n    if (!(specificationConnector.type === 'Block' &&\n        (specificationConnecting.type === 'Statement' ||\n            specificationConnecting.type === 'Block'))) {\n        return false;\n    }\n    if ((specificationConnector.forbidNestInside &&\n        specificationConnector.forbidNestInside.includes(nodeConnecting.elementName)) ||\n        (specificationConnecting.forbiddenNestInside &&\n            specificationConnecting.forbiddenNestInside.includes(nodeConnector.elementName))) {\n        return false;\n    }\n    if (specificationConnector.allowNestInside !== undefined) {\n        if (specificationConnector.allowNestInside instanceof Array) {\n            if (!specificationConnector.allowNestInside.includes(nodeConnecting.elementName)) {\n                return false;\n            }\n        }\n        else {\n            if (specificationConnector.allowNestInside === false) {\n                return false;\n            }\n        }\n    }\n    if (specificationConnecting.allowedNestInside !== undefined) {\n        if (specificationConnecting.allowedNestInside instanceof Array) {\n            if (!specificationConnecting.allowedNestInside.includes(nodeConnector.elementName)) {\n                return false;\n            }\n        }\n        else {\n            if (specificationConnector.allowedNestInside === false) {\n                return false;\n            }\n        }\n    }\n    if (!(specificationConnecting.allowedNestLevel &&\n        specificationConnecting.allowedNestLevel instanceof Array &&\n        specificationConnecting.allowedNestLevel.includes(nodeConnector.nestLevel + 1))) {\n        return false;\n    }\n    return true;\n}\nexports.attachInstructionInsideCheck = attachInstructionInsideCheck;\n/**\n * Attaches an instruction element node inside a block element node.\n * @param connectorNodeID - node ID of the connector block element node\n * @param connectingNodeID - node ID of the connecting instruction element node\n */\nfunction attachInstructionInside(connectorNodeID, connectingNodeID) {\n    const nodeConnector = _nodeMap[connectorNodeID];\n    const nodeConnecting = _nodeMap[connectingNodeID];\n    nodeConnector.innerConnection = nodeConnecting;\n    nodeConnector.innerCount++;\n    nodeConnecting.parentBlock = nodeConnector;\n    nodeConnecting.nestLevel = nodeConnector.nestLevel + 1;\n    if (_syntaxTree.crumbs.includes(nodeConnecting)) {\n        _syntaxTree.crumbs.splice(_syntaxTree.crumbs.indexOf(nodeConnecting), 1);\n    }\n}\nexports.attachInstructionInside = attachInstructionInside;\n/**\n * Attaches an instruction element node from inside a block element node.\n * @param connectorNodeID - node ID of the connector block element node\n * @param connectingNodeID - node ID of the connecting instruction element node\n */\nfunction detachInstructionInside(connectorNodeID, connectingNodeID) {\n    const nodeConnector = _nodeMap[connectorNodeID];\n    const nodeConnecting = _nodeMap[connectingNodeID];\n    nodeConnector.innerConnection = null;\n    nodeConnector.innerCount--;\n    nodeConnecting.parentBlock = null;\n    nodeConnecting.nestLevel = 0;\n    _syntaxTree.crumbs.push(nodeConnecting);\n}\nexports.detachInstructionInside = detachInstructionInside;\n/**\n * Generates a snapshot of the syntax tree.\n * @returns syntax tree snapshot\n */\nfunction generateSnapshot() {\n    const snapshot = {\n        process: _syntaxTree.process.map((node) => node.snapshot),\n        routine: _syntaxTree.routine.map((node) => node.snapshot),\n        crumbs: [],\n    };\n    _syntaxTree.crumbs.forEach((node) => {\n        if (node instanceof node_1.TreeNodeData || node instanceof node_1.TreeNodeExpression) {\n            snapshot.crumbs.push([node.snapshot]);\n        }\n        else {\n            const snapshotList = [];\n            let nextNode = node;\n            while (nextNode !== null) {\n                snapshotList.push(nextNode.snapshot);\n                nextNode = nextNode.afterConnection;\n            }\n            snapshot.crumbs.push(snapshotList);\n        }\n    });\n    return snapshot;\n}\nexports.generateSnapshot = generateSnapshot;\n/**\n * Generates the syntax tree from a snapshot.\n * @param snapshot - syntax tree snapshot\n * @throws `InvalidDataError`\n */\nfunction generateFromSnapshot(snapshot) {\n    resetSyntaxTree();\n    function __generateSnapshotList(snapshotList) {\n        if (snapshotList.length === 0) {\n            return null;\n        }\n        const snapshotNodes = snapshotList.map((snapshot) => {\n            const specification = (0, specification_1.queryElementSpecification)(snapshot.elementName);\n            let nodeID;\n            switch (specification.type) {\n                case 'Data':\n                    nodeID = __generateFromSnapshotData(snapshot);\n                    break;\n                case 'Expression':\n                    nodeID = __generateFromSnapshotExpression(snapshot);\n                    break;\n                case 'Statement':\n                    nodeID = __generateFromSnapshotStatement(snapshot);\n                    break;\n                case 'Block':\n                default:\n                    nodeID = __generateFromSnapshotBlock(snapshot);\n            }\n            return nodeID;\n        });\n        if (snapshotNodes.length > 1) {\n            for (let i = 0; i < snapshotNodes.length - 1; i++) {\n                attachInstructionBelow(snapshotNodes[i], snapshotNodes[i + 1]);\n            }\n        }\n        return snapshotNodes[0];\n    }\n    function __generateFromSnapshotArg(nodeID, snapshot) {\n        if (snapshot === null) {\n            return;\n        }\n        Object.entries(snapshot).forEach(([argName, snapshot]) => {\n            if (snapshot === null) {\n                return;\n            }\n            let argNodeID;\n            const specification = (0, specification_1.queryElementSpecification)(snapshot.elementName);\n            if (specification.type === 'Data') {\n                argNodeID = __generateFromSnapshotData(snapshot);\n            }\n            else {\n                argNodeID = __generateFromSnapshotExpression(snapshot);\n            }\n            attachArgument(nodeID, argNodeID, argName);\n        });\n    }\n    function __generateFromSnapshotData(snapshot) {\n        const nodeID = addNode(snapshot.elementName);\n        if (snapshot.value) {\n            const instance = (0, warehouse_1.getInstance)(getNode(nodeID).instanceID).instance;\n            if ((0, specification_1.checkValueAssignment)(instance.name, snapshot.value)) {\n                instance.updateLabel(snapshot.value);\n            }\n            else {\n                throw Error(`InvalidDataError: value \"${snapshot.value}\" cannot be assigned to data element \"${instance.name}\"`);\n            }\n        }\n        return nodeID;\n    }\n    function __generateFromSnapshotExpression(snapshot) {\n        const nodeID = addNode(snapshot.elementName);\n        __generateFromSnapshotArg(nodeID, snapshot.argMap);\n        return nodeID;\n    }\n    function __generateFromSnapshotStatement(snapshot) {\n        const nodeID = addNode(snapshot.elementName);\n        __generateFromSnapshotArg(nodeID, snapshot.argMap);\n        return nodeID;\n    }\n    function __generateFromSnapshotBlock(snapshot) {\n        const nodeID = addNode(snapshot.elementName);\n        __generateFromSnapshotArg(nodeID, snapshot.argMap);\n        const innerNodeID = __generateSnapshotList(snapshot.scope);\n        if (innerNodeID !== null) {\n            attachInstructionInside(nodeID, innerNodeID);\n        }\n        return nodeID;\n    }\n    try {\n        snapshot.process.forEach((snapshot) => __generateFromSnapshotBlock(snapshot));\n        snapshot.routine.forEach((snapshot) => __generateFromSnapshotBlock(snapshot));\n        snapshot.crumbs.forEach((snapshotList) => __generateSnapshotList(snapshotList));\n    }\n    catch (e) {\n        resetSyntaxTree();\n        throw e;\n    }\n}\nexports.generateFromSnapshot = generateFromSnapshot;\n/**\n * Assigns the value (label) of the data element instance included in the node `nodeID`.\n * @param nodeID node ID of the syntax tree node\n * @param value value to assign\n * @returns whether successful assignment or not\n */\nfunction assignNodeValue(nodeID, value) {\n    try {\n        const instance = (0, warehouse_1.getInstance)(getNode(nodeID).instanceID).instance;\n        if (instance.type === 'Data' && (0, specification_1.checkValueAssignment)(instance.name, value)) {\n            instance.updateLabel(value);\n        }\n        else {\n            throw Error();\n        }\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.assignNodeValue = assignNodeValue;\n//# sourceMappingURL=syntaxTree.js.map","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TreeNodeBlock = exports.TreeNodeStatement = exports.TreeNodeExpression = exports.TreeNodeData = exports.TreeNode = void 0;\nconst warehouse_1 = require(\"../warehouse/warehouse\");\n// -------------------------------------------------------------------------------------------------\n/**\n * @virtual\n * @class\n * Defines a generic syntax tree node.\n */\nclass TreeNode {\n    constructor(\n    /** Name of the syntax element. */\n    elementName, \n    /** Node ID of the syntax tree node instance. */\n    nodeID, \n    /** Warehouse ID of the syntax element instance. */\n    instanceID) {\n        /** Stores key-value pairs of argument names and corresponding argument nodes. */\n        this._argConnections = {};\n        this._elementName = elementName;\n        this._nodeID = nodeID;\n        this._instanceID = instanceID;\n        const instance = (0, warehouse_1.getInstance)(this._instanceID);\n        instance.instance.argLabels.forEach((label) => (this._argConnections[label] = null));\n    }\n    get nodeID() {\n        return this._nodeID;\n    }\n    get instanceID() {\n        return this._instanceID;\n    }\n    /**\n     * Helper that adds an argument connection.\n     * @param argName - name of the argument\n     * @param node - node instance of the connecting node\n     */\n    _attachArg(argName, node) {\n        this._argConnections[argName] = node;\n    }\n    /**\n     * Helper that removes an argument connection.\n     * @param argName - name of the argument\n     */\n    _detachArg(argName) {\n        this._argConnections[argName] = null;\n    }\n    /**\n     * Helper that generates a snapshot of the arguments.\n     */\n    _getArgSnapshot() {\n        const instance = (0, warehouse_1.getInstance)(this._instanceID);\n        if (instance.instance.argCount === 0) {\n            return null;\n        }\n        this._elementName;\n        const snapshot = {};\n        instance.instance.argLabels.forEach((label) => (snapshot[label] =\n            this._argConnections[label] === null\n                ? null\n                : this._argConnections[label].snapshot));\n        return snapshot;\n    }\n}\nexports.TreeNode = TreeNode;\n/**\n * @virtual\n * @class\n * Defines a generic syntax tree argument element node.\n */\nclass TreeNodeArgument extends TreeNode {\n    constructor() {\n        super(...arguments);\n        this.connectedTo = null;\n    }\n}\n/**\n * @class\n * Defines a syntax tree data element node.\n */\nclass TreeNodeData extends TreeNodeArgument {\n    get elementName() {\n        return this._elementName;\n    }\n    get snapshot() {\n        return {\n            elementName: this._elementName,\n            nodeID: this._nodeID,\n        };\n    }\n}\nexports.TreeNodeData = TreeNodeData;\n/**\n * @class\n * Defines a syntax tree expression element node.\n */\nclass TreeNodeExpression extends TreeNodeArgument {\n    constructor() {\n        super(...arguments);\n        this.argConnections = this._argConnections;\n        this.attachArg = super._attachArg;\n        this.detachArg = super._detachArg;\n    }\n    get elementName() {\n        return this._elementName;\n    }\n    get snapshot() {\n        return {\n            elementName: this._elementName,\n            nodeID: this._nodeID,\n            argMap: this._getArgSnapshot(),\n        };\n    }\n}\nexports.TreeNodeExpression = TreeNodeExpression;\n/**\n * @virtual\n * @class\n * Defines a generic syntax tree instruction element node.\n */\nclass TreeNodeInstruction extends TreeNode {\n    constructor() {\n        super(...arguments);\n        this.argConnections = this._argConnections;\n        this.attachArg = super._attachArg;\n        this.detachArg = super._detachArg;\n        this.beforeConnection = null;\n        this.afterConnection = null;\n        this.nestLevel = 0;\n        this.parentBlock = null;\n    }\n}\n/**\n * @class\n * Defines a syntax tree statement element node.\n */\nclass TreeNodeStatement extends TreeNodeInstruction {\n    get elementName() {\n        return this._elementName;\n    }\n    get snapshot() {\n        return {\n            elementName: this._elementName,\n            nodeID: this._nodeID,\n            argMap: this._getArgSnapshot(),\n        };\n    }\n}\nexports.TreeNodeStatement = TreeNodeStatement;\n/**\n * @class\n * Defines a syntax tree block element node.\n */\nclass TreeNodeBlock extends TreeNodeInstruction {\n    constructor() {\n        super(...arguments);\n        this.innerConnection = null;\n        this.innerCount = 0;\n    }\n    get elementName() {\n        return this._elementName;\n    }\n    get snapshot() {\n        const scope = [];\n        let nextNode = this.innerConnection;\n        while (nextNode !== null) {\n            scope.push(nextNode.snapshot);\n            nextNode = nextNode.afterConnection;\n        }\n        return {\n            elementName: this._elementName,\n            nodeID: this._nodeID,\n            argMap: this._getArgSnapshot(),\n            scope,\n        };\n    }\n}\nexports.TreeNodeBlock = TreeNodeBlock;\n//# sourceMappingURL=node.js.map","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _get.apply(this, arguments);\n}\n\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementValueString = exports.ElementValueNumber = exports.ElementValueBoolean = void 0;\nconst elementArgument_1 = require(\"../../syntax/elements/elementArgument\");\n// -------------------------------------------------------------------------------------------------\n/**\n * @virtual\n * @class\n * Generic class that defines a generic value element.\n *\n * @classdesc\n * Value elements return a stored value.\n */\nclass ElementValue extends elementArgument_1.ElementData {\n    constructor(name, label, returnType, initialValue) {\n        super(name, '', {}, returnType, initialValue);\n        this.updateLabel(label);\n    }\n    /** @throws `Error` (TypeMismatchError) */\n    evaluate() {\n        switch (this.returnType[0]) {\n            case 'boolean':\n                if (this.label === 'true' || this.label === 'false') {\n                    this._value = (this.label === 'true');\n                }\n                else {\n                    throw Error(`TypeMismatchError: ${this.label} is not of type \"boolean\"`);\n                }\n                break;\n            case 'number':\n                if (!isNaN(Number(this.label))) {\n                    this._value = Number(this.label);\n                }\n                else {\n                    throw Error(`TypeMismatchError: ${this.label} is not of type \"number\"`);\n                }\n                break;\n            case 'string':\n            default:\n                this._value = this.label;\n        }\n    }\n}\n/**\n * @class\n * Defines a value element that stores a boolean value.\n * @throws `Error` (TypeMismatchError)\n */\nclass ElementValueBoolean extends ElementValue {\n    constructor(name, label) {\n        super(name, label, ['boolean'], true);\n    }\n}\nexports.ElementValueBoolean = ElementValueBoolean;\n/**\n * @class\n * Defines a value element that stores a number value.\n * @throws `Error` (TypeMismatchError)\n */\nclass ElementValueNumber extends ElementValue {\n    constructor(name, label) {\n        super(name, label, ['number'], 0);\n    }\n}\nexports.ElementValueNumber = ElementValueNumber;\n/**\n * @class\n * Defines a value element that stores a string value.\n * @throws `Error` (TypeMismatchError)\n */\nclass ElementValueString extends ElementValue {\n    constructor(name, label) {\n        super(name, label, ['string'], '');\n    }\n}\nexports.ElementValueString = ElementValueString;\n//# sourceMappingURL=elementValue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementBoxString = exports.ElementBoxNumber = exports.ElementBoxBoolean = exports.ElementBoxGeneric = void 0;\nconst elementInstruction_1 = require(\"../../syntax/elements/elementInstruction\");\nconst interpreter_1 = require(\"../../execution/interpreter\");\n// -------------------------------------------------------------------------------------------------\n/**\n * @virtual\n * @class\n * Generic class that defines a literally generic box element.\n *\n * @classdesc\n * Box elements add (declare) variables to the symbol table.\n */\nclass ElementBox extends elementInstruction_1.ElementStatement {\n    constructor(name, label, types) {\n        super(name, label, {\n            name: ['string'],\n            value: types,\n        });\n    }\n    /** @override */\n    onVisit(params) {\n        switch (typeof params.value) {\n            case 'boolean':\n                (0, interpreter_1.declareVariable)(params.name, 'boolean', params.value);\n                break;\n            case 'number':\n                (0, interpreter_1.declareVariable)(params.name, 'number', params.value);\n                break;\n            case 'string':\n                (0, interpreter_1.declareVariable)(params.name, 'string', params.value);\n                break;\n            default:\n                throw Error('Trespassing access: This should never be reached');\n        }\n    }\n}\n/**\n * @class\n * Defines a box element that declares a variable of any data type.\n */\nclass ElementBoxGeneric extends ElementBox {\n    constructor(name, label) {\n        super(name, label, ['boolean', 'number', 'string']);\n    }\n    /** @override */\n    onVisit(params) {\n        super.onVisit(params);\n    }\n}\nexports.ElementBoxGeneric = ElementBoxGeneric;\n/**\n * @class\n * Defines a box element that declares a variable of boolean type.\n */\nclass ElementBoxBoolean extends ElementBox {\n    constructor(name, label) {\n        super(name, label, ['boolean']);\n    }\n    /** @override */\n    onVisit(params) {\n        super.onVisit(params);\n    }\n}\nexports.ElementBoxBoolean = ElementBoxBoolean;\n/**\n * @class\n * Defines a box element that declares a variable of number type.\n */\nclass ElementBoxNumber extends ElementBox {\n    constructor(name, label) {\n        super(name, label, ['number']);\n    }\n    /** @override */\n    onVisit(params) {\n        super.onVisit(params);\n    }\n}\nexports.ElementBoxNumber = ElementBoxNumber;\n/**\n * @class\n * Defines a box element that declares a variable of string type.\n */\nclass ElementBoxString extends ElementBox {\n    constructor(name, label) {\n        super(name, label, ['string']);\n    }\n    /** @override */\n    onVisit(params) {\n        super.onVisit(params);\n    }\n}\nexports.ElementBoxString = ElementBoxString;\n//# sourceMappingURL=elementBox.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementBoxIdentifierString = exports.ElementBoxIdentifierNumber = exports.ElementBoxIdentifierBoolean = exports.ElementBoxIdentifierGeneric = void 0;\nconst elementArgument_1 = require(\"../../syntax/elements/elementArgument\");\nconst interpreter_1 = require(\"../../execution/interpreter\");\n// -------------------------------------------------------------------------------------------------\n/**\n * @virtual\n * @class\n * Generic class that defines a literally generic box identifier element.\n * @classdesc\n * Box identifier elements fetch variables according to their label from the symbol table.\n * @throws `Error` (ItemNotFoundError)\n */\nclass ElementBoxIdentifier extends elementArgument_1.ElementData {\n    constructor(name, label, returnType, initialValue) {\n        super(name, label, {}, returnType, initialValue);\n    }\n    /** @override */\n    evaluate() {\n        const expectedType = typeof this._value;\n        try {\n            const { dataType, value } = (0, interpreter_1.queryVariable)(this.label);\n            if (this.returnType.length > 1) {\n                this._value = value;\n            }\n            else if (dataType === expectedType) {\n                this._value = value;\n            }\n            else {\n                throw Error('');\n            }\n        }\n        catch (e) {\n            if (this.returnType.length > 1) {\n                throw Error(`ItemNotFoundError: box \"${this.label}\" does not exist`);\n            }\n            else {\n                throw Error(`ItemNotFoundError: box \"${this.label}\" of type \"${expectedType}\" does not exist`);\n            }\n        }\n    }\n}\n/**\n * @class\n * Defines a box identifier element that fetches a variable of any data type based on presence.\n * @throws `Error` (ItemNotFoundError)\n */\nclass ElementBoxIdentifierGeneric extends ElementBoxIdentifier {\n    constructor(name, label) {\n        super(name, label, ['boolean', 'number', 'string'], '');\n    }\n}\nexports.ElementBoxIdentifierGeneric = ElementBoxIdentifierGeneric;\n/**\n * @class\n * Defines a box identifier element that fetches a variable of boolean type based on presence.\n * @throws `Error` (ItemNotFoundError)\n */\nclass ElementBoxIdentifierBoolean extends ElementBoxIdentifier {\n    constructor(name, label) {\n        super(name, label, ['boolean'], true);\n    }\n}\nexports.ElementBoxIdentifierBoolean = ElementBoxIdentifierBoolean;\n/**\n * @class\n * Defines a box identifier element that fetches a variable of number type based on presence.\n * @throws `Error` (ItemNotFoundError)\n */\nclass ElementBoxIdentifierNumber extends ElementBoxIdentifier {\n    constructor(name, label) {\n        super(name, label, ['number'], 0);\n    }\n}\nexports.ElementBoxIdentifierNumber = ElementBoxIdentifierNumber;\n/**\n * @class\n * Defines a box identifier element that fetches a variable of string type based on presence.\n * @throws `Error` (ItemNotFoundError)\n */\nclass ElementBoxIdentifierString extends ElementBoxIdentifier {\n    constructor(name, label) {\n        super(name, label, ['string'], '');\n    }\n}\nexports.ElementBoxIdentifierString = ElementBoxIdentifierString;\n//# sourceMappingURL=elementBoxIdentifier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementOperatorMathModulus = exports.ElementOperatorMathDivide = exports.ElementOperatorMathTimes = exports.ElementOperatorMathMinus = exports.ElementOperatorMathPlus = void 0;\nconst elementArgument_1 = require(\"../../syntax/elements/elementArgument\");\n/**\n * @virtual\n * @class\n * Generic class that defines a generic math operator element.\n *\n * @classdesc\n * Math operator elements are expression elements that take two arguments (operands) and return the\n * result of operation on those arguments.\n */\nclass ElementOperatorMath extends elementArgument_1.ElementExpression {\n    constructor(name, label, returnType, operator, initialValue) {\n        super(name, '', { operand1: returnType, operand2: returnType }, returnType, initialValue);\n        this._operator = operator;\n        this.updateLabel(this._operator);\n    }\n    evaluate(params) {\n        const { operand1, operand2 } = params;\n        switch (this._operator) {\n            case '+':\n                this._value = (typeof operand1 === 'string' || typeof operand2 === 'string'\n                    ? `${operand1}${operand2}`\n                    : operand1 + operand2);\n                break;\n            case '-':\n                this._value = (operand1 - operand2);\n                break;\n            case '*':\n                this._value = (operand1 * operand2);\n                break;\n            case '/':\n                this._value = (operand1 / operand2);\n                break;\n            case '%':\n                this._value = (operand1 % operand2);\n                break;\n        }\n    }\n}\n/**\n * @class\n * Defines a plus math-operator element.\n *\n * @classdesc\n * Performs addition on numbers and concatenation on strings.\n */\nclass ElementOperatorMathPlus extends ElementOperatorMath {\n    constructor(name, label) {\n        super(name, label, ['number', 'string'], '+', 0);\n    }\n}\nexports.ElementOperatorMathPlus = ElementOperatorMathPlus;\n/**\n * @class\n * Defines a minus math-operator element.\n *\n * @classdesc\n * Performs subtraction on numbers.\n */\nclass ElementOperatorMathMinus extends ElementOperatorMath {\n    constructor(name, label) {\n        super(name, label, ['number'], '-', 0);\n    }\n}\nexports.ElementOperatorMathMinus = ElementOperatorMathMinus;\n/**\n * @class\n * Defines a times math-operator element.\n *\n * @classdesc\n * Performs multiplication on numbers.\n */\nclass ElementOperatorMathTimes extends ElementOperatorMath {\n    constructor(name, label) {\n        super(name, label, ['number'], '*', 0);\n    }\n}\nexports.ElementOperatorMathTimes = ElementOperatorMathTimes;\n/**\n * @class\n * Defines a divide math-operator element.\n *\n * @classdesc\n * Performs division on numbers.\n */\nclass ElementOperatorMathDivide extends ElementOperatorMath {\n    constructor(name, label) {\n        super(name, label, ['number'], '/', 0);\n    }\n}\nexports.ElementOperatorMathDivide = ElementOperatorMathDivide;\n/**\n * @class\n * Defines a modulus math-operator element.\n *\n * @classdesc\n * Performs modulus operation on numbers.\n */\nclass ElementOperatorMathModulus extends ElementOperatorMath {\n    constructor(name, label) {\n        super(name, label, ['number'], '%', 0);\n    }\n}\nexports.ElementOperatorMathModulus = ElementOperatorMathModulus;\n//# sourceMappingURL=elementOperatorMath.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementRepeat = void 0;\nconst elementInstruction_1 = require(\"../../syntax/elements/elementInstruction\");\nconst interpreter_1 = require(\"../../execution/interpreter\");\n// -------------------------------------------------------------------------------------------------\n/**\n * @class\n * Defines a repeat block element.\n * @classdesc\n * Repeats the scope as many times as the parameter provided.\n */\nclass ElementRepeat extends elementInstruction_1.ElementBlock {\n    constructor(name, label) {\n        super(name, label, { times: ['number'] });\n        this._counter = 0;\n    }\n    onVisit(params) {\n        this._counter = params.times;\n    }\n    onInnerVisit() {\n        // no use\n    }\n    onInnerExit() {\n        // no use\n    }\n    onExit() {\n        this._counter--;\n        if (this._counter !== 0) {\n            (0, interpreter_1.overrideProgramCounter)('__goinnerfirst__');\n        }\n    }\n}\nexports.ElementRepeat = ElementRepeat;\n//# sourceMappingURL=elementLoop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementIf = void 0;\nconst elementInstruction_1 = require(\"../../syntax/elements/elementInstruction\");\nconst interpreter_1 = require(\"../../execution/interpreter\");\n// -------------------------------------------------------------------------------------------------\n/**\n * @class\n * Defines an If block element.\n * @classdesc\n * Allows entry to scope only if condition is satisfied.\n */\nclass ElementIf extends elementInstruction_1.ElementBlock {\n    constructor(name, label) {\n        super(name, label, { condition: ['boolean'] });\n    }\n    onVisit(params) {\n        if (!params.condition) {\n            (0, interpreter_1.overrideProgramCounter)('__skipscope__');\n        }\n    }\n    onInnerVisit() {\n        // no use\n    }\n    onInnerExit() {\n        // no use\n    }\n    onExit() {\n        // no use\n    }\n}\nexports.ElementIf = ElementIf;\n//# sourceMappingURL=elementConditional.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementRoutine = exports.ElementProcess = void 0;\nconst elementInstruction_1 = require(\"../../syntax/elements/elementInstruction\");\nclass ElementProcess extends elementInstruction_1.ElementBlock {\n    constructor(name, label) {\n        super(name, label, {});\n    }\n    onVisit() {\n        1;\n    }\n    onInnerVisit() {\n        1;\n    }\n    onInnerExit() {\n        1;\n    }\n    onExit() {\n        1;\n    }\n}\nexports.ElementProcess = ElementProcess;\nclass ElementRoutine extends elementInstruction_1.ElementBlock {\n    constructor(name, label) {\n        super(name, label, { name: ['string'] });\n    }\n    onVisit() {\n        1;\n    }\n    onInnerVisit() {\n        1;\n    }\n    onInnerExit() {\n        1;\n    }\n    onExit() {\n        1;\n    }\n}\nexports.ElementRoutine = ElementRoutine;\n//# sourceMappingURL=elementProgram.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementPrint = void 0;\nconst elementInstruction_1 = require(\"../../syntax/elements/elementInstruction\");\n// -------------------------------------------------------------------------------------------------\nclass ElementPrint extends elementInstruction_1.ElementStatement {\n    constructor(name, label) {\n        super(name, label, { value: ['boolean', 'number', 'string'] });\n    }\n    onVisit(params) {\n        // eslint-disable-next-line no-console\n        console.log(params.value);\n    }\n}\nexports.ElementPrint = ElementPrint;\n//# sourceMappingURL=elementPrint.js.map","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flushAllVariables = exports.flushRoutineVariablesAll = exports.flushRoutineVariables = exports.flushProcessVariablesAll = exports.flushProcessVariables = exports.flushGlobalVariables = exports.removeRoutineVariable = exports.getRoutineVariableNamesWithTypesAll = exports.getRoutineVariableNamesAll = exports.getRoutineVariableNamesWithTypes = exports.getRoutineVariableNames = exports.getRoutineVariable = exports.addRoutineVariable = exports.removeProcessVariable = exports.getProcessVariableNamesWithTypesAll = exports.getProcessVariableNamesAll = exports.getProcessVariableNamesWithTypes = exports.getProcessVariableNames = exports.getProcessVariable = exports.addProcessVariable = exports.removeGlobalVariable = exports.getGlobalVariableNamesWithTypes = exports.getGlobalVariableNames = exports.getGlobalVariable = exports.addGlobalVariable = void 0;\n// -- private variables ----------------------------------------------------------------------------\n/** Stores the global table. */\nlet _globalTable = {};\n/** Stores the processes' tables. */\nlet _processTable = {};\n/** Stores the routines' table. */\nlet _routineTable = {};\n// -- private functions ----------------------------------------------------------------------------\n/**\n * A helper that adds a variable for a process or routine. If already present, overwrites it.\n * @param variable - name of the variable\n * @param dataType - data type of the variable\n * @param value - value of the variable\n * @param selector - the key to be used for selection (project ID or routine ID)\n * @param tableName - `process` or `routine`\n */\nfunction _addTableVariable(variable, dataType, value, selector, tableName) {\n    const table = tableName === 'process' ? _processTable : _routineTable;\n    if (!(selector in table)) {\n        table[selector] = {};\n    }\n    table[selector][variable] = { dataType, value };\n}\n/**\n * A helper that fetches a variable for a process or routine.\n * @param variable - name of the variable\n * @param selector - the key to be used for selection (project ID or routine ID)\n * @param tableName - `process` or `routine`\n * @returns the variable entry if present, else `null`\n */\nfunction _getTableVariable(variable, selector, tableName) {\n    const table = tableName === 'process' ? _processTable : _routineTable;\n    return selector in table && variable in table[selector] ? table[selector][variable] : null;\n}\n/**\n * A helper that returns names of all variables for a process or routine.\n * @param selector - the key to be used for selection (project ID or routine ID)\n * @param tableName - `process` or `routine`\n * @returns a list of all variable names for a process or routine\n */\nfunction _getTableVariableNames(selector, tableName) {\n    const table = tableName === 'process' ? _processTable : _routineTable;\n    return selector in table ? Object.keys(table[selector]) : [];\n}\n/**\n * A helper that returns names of all variables for a process or routine with their data types.\n * @param selector - the key to be used for selection (project ID or routine ID)\n * @param tableName - `process` or `routine`\n * @returns an object with key-value pairs of variable names and corresponding data type\n */\nfunction _getTableVariableNamesWithTypes(selector, tableName) {\n    const table = tableName === 'process' ? _processTable : _routineTable;\n    if (!(selector in table)) {\n        return {};\n    }\n    const res = {};\n    Object.entries(table[selector]).forEach(([variable, { dataType }]) => {\n        res[variable] = dataType;\n    });\n    return res;\n}\n/**\n * A helper that returns names of all process or routine variables.\n * @param tableName - `process` or `routine`\n * @returns an object with key-value pairs of process or routine names and corresponding list of\n * variable names\n */\nfunction _getTableVariableNamesAll(tableName) {\n    const table = tableName === 'process' ? _processTable : _routineTable;\n    const res = {};\n    Object.entries(table).forEach(([key, variables]) => {\n        res[key] = Object.keys(variables);\n    });\n    return res;\n}\n/**\n * A helper that returns names and types of all process or routine variables.\n * @param tableName - `process` or `routine`\n * @returns an object with key-value pairs of process or routine names and corresponding object with\n * key-value pairs of variable names and data types.\n */\nfunction _getTableVariableNamesWithTypesAll(tableName) {\n    const table = tableName === 'process' ? _processTable : _routineTable;\n    const res = {};\n    Object.entries(table).forEach(([key, variables]) => {\n        res[key] = {};\n        Object.entries(variables).forEach(([variable, { dataType }]) => {\n            res[key][variable] = dataType;\n        });\n    });\n    return res;\n}\n/**\n * Removes a variable for a process or routine if present.\n * @param variable - name of the variable\n * @param selector - the key to be used for selection (project ID or routine ID)\n * @param tableName - `process` or `routine`\n */\nfunction _removeTableVariable(variable, selector, tableName) {\n    const table = tableName === 'process' ? _processTable : _routineTable;\n    if (selector in table && variable in table[selector]) {\n        delete table[selector][variable];\n    }\n}\n/**\n * A helper that clears all variables for a process or routine.\n * @param selector - the key to be used for selection (project ID or routine ID)\n * @param tableName - `process` or `routine`\n */\nfunction _flushTableVariables(selector, tableName) {\n    const table = tableName === 'process' ? _processTable : _routineTable;\n    if (selector in table) {\n        delete table[selector];\n    }\n}\n// -- public functions -----------------------------------------------------------------------------\n/**\n * Adds a global variable. If already present, overwrites it.\n * @param variable - name of the variable\n * @param dataType - data type of the variable\n * @param value - value of the variable\n */\nfunction addGlobalVariable(variable, dataType, value) {\n    _globalTable[variable] = { dataType, value };\n}\nexports.addGlobalVariable = addGlobalVariable;\n/**\n * Fetches a global variable.\n * @param variable - name of the variable\n * @returns the variable entry if present, else `null`\n */\nfunction getGlobalVariable(variable) {\n    return variable in _globalTable ? _globalTable[variable] : null;\n}\nexports.getGlobalVariable = getGlobalVariable;\n/**\n * Returns names of all global variables.\n * @returns a list of all global variable names\n */\nfunction getGlobalVariableNames() {\n    return Object.keys(_globalTable);\n}\nexports.getGlobalVariableNames = getGlobalVariableNames;\n/**\n * Returns names of all global variables with their data types.\n * @returns an object with key-value pairs of variable names and corresponding data type\n */\nfunction getGlobalVariableNamesWithTypes() {\n    const table = {};\n    Object.entries(_globalTable).forEach(([variable, { dataType }]) => {\n        table[variable] = dataType;\n    });\n    return table;\n}\nexports.getGlobalVariableNamesWithTypes = getGlobalVariableNamesWithTypes;\n/**\n * Removes a global variable if present.\n * @param variable - name of the variable\n */\nfunction removeGlobalVariable(variable) {\n    if (variable in _globalTable) {\n        delete _globalTable[variable];\n    }\n}\nexports.removeGlobalVariable = removeGlobalVariable;\n/**\n * Adds a variable for a process. If already present, overwrites it.\n * @param variable - name of the variable\n * @param dataType - data type of the variable\n * @param value - value of the variable\n * @param process - ID of the process\n */\nfunction addProcessVariable(variable, dataType, value, process) {\n    _addTableVariable(variable, dataType, value, process, 'process');\n}\nexports.addProcessVariable = addProcessVariable;\n/**\n * Fetches a variable for a process.\n * @param variable - name of the variable\n * @param process - ID of the process\n * @returns the variable entry if present, else `null`\n */\nfunction getProcessVariable(variable, process) {\n    return _getTableVariable(variable, process, 'process');\n}\nexports.getProcessVariable = getProcessVariable;\n/**\n * Returns names of all variables for a process.\n * @param process - ID of the process\n * @returns a list of all variable names for a process\n */\nfunction getProcessVariableNames(process) {\n    return _getTableVariableNames(process, 'process');\n}\nexports.getProcessVariableNames = getProcessVariableNames;\n/**\n * Returns names of all variables for a process with their data types.\n * @param process - ID of the process\n * @returns an object with key-value pairs of variable names and corresponding data type\n */\nfunction getProcessVariableNamesWithTypes(process) {\n    return _getTableVariableNamesWithTypes(process, 'process');\n}\nexports.getProcessVariableNamesWithTypes = getProcessVariableNamesWithTypes;\n/**\n * Returns names of all process variables.\n * @returns an object with key-value pairs of process names and corresponding list of variable\n * names\n */\nfunction getProcessVariableNamesAll() {\n    return _getTableVariableNamesAll('process');\n}\nexports.getProcessVariableNamesAll = getProcessVariableNamesAll;\n/**\n * Returns names and types of all process variables.\n * @returns an object with key-value pairs of process names and corresponding object with key-value\n * pairs of variable names and data types.\n */\nfunction getProcessVariableNamesWithTypesAll() {\n    return _getTableVariableNamesWithTypesAll('process');\n}\nexports.getProcessVariableNamesWithTypesAll = getProcessVariableNamesWithTypesAll;\n/**\n * Removes a variable for a process if present.\n * @param variable - name of the variable\n * @param process - ID of the process\n */\nfunction removeProcessVariable(variable, process) {\n    _removeTableVariable(variable, process, 'process');\n}\nexports.removeProcessVariable = removeProcessVariable;\n/**\n * Adds a variable for a routine. If already present, overwrites it.\n * @param variable - name of the variable\n * @param dataType - data type of the variable\n * @param value - value of the variable\n * @param routine - ID of the routine\n */\nfunction addRoutineVariable(variable, dataType, value, routine) {\n    _addTableVariable(variable, dataType, value, routine, 'routine');\n}\nexports.addRoutineVariable = addRoutineVariable;\n/**\n * Fetches a variable for a routine.\n * @param variable - name of the variable\n * @param routine - ID of the routine\n * @returns the variable entry if present, else `null`\n */\nfunction getRoutineVariable(variable, routine) {\n    return _getTableVariable(variable, routine, 'routine');\n}\nexports.getRoutineVariable = getRoutineVariable;\n/**\n * Returns names of all variables for a routine.\n * @param routine - ID of the routine\n * @returns a list of all variable names for a routine\n */\nfunction getRoutineVariableNames(routine) {\n    return _getTableVariableNames(routine, 'routine');\n}\nexports.getRoutineVariableNames = getRoutineVariableNames;\n/**\n * Returns names of all variables for a routine with their data types.\n * @param routine - ID of the routine\n * @returns an object with key-value pairs of variable names and corresponding data type\n */\nfunction getRoutineVariableNamesWithTypes(routine) {\n    return _getTableVariableNamesWithTypes(routine, 'routine');\n}\nexports.getRoutineVariableNamesWithTypes = getRoutineVariableNamesWithTypes;\n/**\n * Returns names of all routine variables.\n * @returns an object with key-value pairs of routine names and corresponding list of variable\n * names\n */\nfunction getRoutineVariableNamesAll() {\n    return _getTableVariableNamesAll('routine');\n}\nexports.getRoutineVariableNamesAll = getRoutineVariableNamesAll;\n/**\n * Returns names and types of all routine variables.\n * @returns an object with key-value pairs of routine names and corresponding object with key-value\n * pairs of variable names and data types.\n */\nfunction getRoutineVariableNamesWithTypesAll() {\n    return _getTableVariableNamesWithTypesAll('routine');\n}\nexports.getRoutineVariableNamesWithTypesAll = getRoutineVariableNamesWithTypesAll;\n/**\n * Removes a variable for a routine if present.\n * @param variable - name of the variable\n * @param routine - ID of the routine\n */\nfunction removeRoutineVariable(variable, routine) {\n    _removeTableVariable(variable, routine, 'routine');\n}\nexports.removeRoutineVariable = removeRoutineVariable;\n/**\n * Clears all global variables.\n */\nfunction flushGlobalVariables() {\n    _globalTable = {};\n}\nexports.flushGlobalVariables = flushGlobalVariables;\n/**\n * Clears all variables for a process.\n * @param process - 0 ID of the process\n */\nfunction flushProcessVariables(process) {\n    _flushTableVariables(process, 'process');\n}\nexports.flushProcessVariables = flushProcessVariables;\n/**\n * Clears all process variables.\n */\nfunction flushProcessVariablesAll() {\n    _processTable = {};\n}\nexports.flushProcessVariablesAll = flushProcessVariablesAll;\n/**\n * Clears all variables for a routine.\n * @param routine - ID of the routine\n */\nfunction flushRoutineVariables(routine) {\n    _flushTableVariables(routine, 'routine');\n}\nexports.flushRoutineVariables = flushRoutineVariables;\n/**\n * Clears all routine variables.\n */\nfunction flushRoutineVariablesAll() {\n    _routineTable = {};\n}\nexports.flushRoutineVariablesAll = flushRoutineVariablesAll;\n/**\n * Clears all variable tables.\n */\nfunction flushAllVariables() {\n    flushGlobalVariables();\n    flushProcessVariablesAll();\n    flushRoutineVariablesAll();\n}\nexports.flushAllVariables = flushAllVariables;\n//# sourceMappingURL=symbolTable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stackTrace = exports.getNextElement = exports.clearPCOverride = exports.setPCOverride = exports.getExecutionItem = exports.setExecutionItem = exports.generateArgumentSequence = exports.validateArgumentSequence = void 0;\nconst node_1 = require(\"../syntax/tree/node\");\nconst syntaxTree_1 = require(\"../syntax/tree/syntaxTree\");\nconst warehouse_1 = require(\"../syntax/warehouse/warehouse\");\n// -- private variables ----------------------------------------------------------------------------\n/** Stores the list of process element nodes. */\nlet _processNodes = [];\n/** Stores the list of routine element nodes. */\nlet _routineNodes = [];\n/** Stores the list of crumb stack top element nodes. */\nlet _crumbNodes = [];\n/** Maintains the parsing state tables. */\nlet _programMap = {\n    process: {},\n    routine: {},\n    crumbs: {},\n};\n/** Stores a reference to the starting node of parsing. */\nlet _executionItem = null;\n// -- private functions ----------------------------------------------------------------------------\n/**\n * Helper that resets the parser.\n */\nfunction _reset() {\n    _processNodes = (0, syntaxTree_1.getProcessNodes)();\n    _routineNodes = (0, syntaxTree_1.getRoutineNodes)();\n    _crumbNodes = (0, syntaxTree_1.getCrumbs)();\n    _programMap = {\n        process: {},\n        routine: {},\n        crumbs: {},\n    };\n    for (const processNode of _processNodes) {\n        _programMap['process'][processNode.nodeID] = {\n            frames: [],\n            pc: null,\n            pcHandler: [],\n            pcOverride: null,\n        };\n    }\n    for (const routineNode of _routineNodes) {\n        _programMap['routine'][routineNode.nodeID] = {\n            frames: [],\n            pc: null,\n            pcHandler: [],\n            pcOverride: null,\n        };\n    }\n    for (const crumbNode of _crumbNodes) {\n        _programMap['crumbs'][crumbNode.nodeID] = {\n            frames: [],\n            pc: null,\n            pcHandler: [],\n            pcOverride: null,\n        };\n    }\n    _executionItem = null;\n}\n// -- public functions -----------------------------------------------------------------------------\n/**\n * Recursively validates the argument sequence for a syntax tree instruction node. Checks if there\n * are `null` argument connections.\n * @param instructionNode - syntax tree instruction node\n * @returns `null` if valid, else an object of the invalid syntax tree non-data node and arg name.\n */\nfunction validateArgumentSequence(instructionNode) {\n    if (Object.keys(instructionNode.argConnections).length === 0) {\n        return null;\n    }\n    function __validateArgumentSequence(node) {\n        for (const [argName, argNode] of Object.entries(node.argConnections)) {\n            if (argNode === null) {\n                return {\n                    instruction: node,\n                    argName,\n                };\n            }\n            else {\n                if (argNode instanceof node_1.TreeNodeExpression) {\n                    const result = __validateArgumentSequence(argNode);\n                    if (result !== null) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    return __validateArgumentSequence(instructionNode);\n}\nexports.validateArgumentSequence = validateArgumentSequence;\n/**\n * Recursively generates the argument sequence for a syntax tree instruction node.\n * @description\n * Expects that argument sequence is valid — no `null` argument connections.\n * @param instructionNode - syntax tree instruction node\n * @returns a list of argument element instances\n */\nfunction generateArgumentSequence(instructionNode) {\n    if (Object.keys(instructionNode.argConnections).length === 0) {\n        return [];\n    }\n    function __generateArgumentSequence(node) {\n        let sequence = [];\n        Object.entries(node.argConnections).forEach(([_, argNode]) => {\n            if (argNode instanceof node_1.TreeNodeExpression) {\n                sequence = [...sequence, ...__generateArgumentSequence(argNode)];\n            }\n            sequence.push((0, warehouse_1.getInstance)(argNode.instanceID).instance);\n        });\n        return sequence;\n    }\n    return __generateArgumentSequence(instructionNode);\n}\nexports.generateArgumentSequence = generateArgumentSequence;\n/**\n * Sets the starting node of parsing.\n * @param nodeID - syntax tree node ID of the starting node.\n */\nfunction setExecutionItem(nodeID) {\n    _reset();\n    let executionItemEntry = undefined;\n    for (const processNode of _processNodes) {\n        if (processNode.nodeID === nodeID) {\n            _executionItem = { node: processNode, bucket: 'process' };\n            executionItemEntry = _programMap['process'][nodeID];\n            break;\n        }\n    }\n    for (const routineNode of _routineNodes) {\n        if (routineNode.nodeID === nodeID) {\n            _executionItem = { node: routineNode, bucket: 'routine' };\n            executionItemEntry = _programMap['routine'][nodeID];\n            break;\n        }\n    }\n    for (const crumbNode of _crumbNodes) {\n        if (crumbNode.nodeID === nodeID) {\n            _executionItem = { node: crumbNode, bucket: 'crumbs' };\n            executionItemEntry = _programMap['crumbs'][nodeID];\n            break;\n        }\n    }\n    if (executionItemEntry !== undefined) {\n        executionItemEntry.pc = _executionItem.node;\n        executionItemEntry.frames.push({\n            node: _executionItem.node,\n            pages: null,\n        });\n    }\n}\nexports.setExecutionItem = setExecutionItem;\n/**\n * Returns the starting syntax tree node ID of the starting node of parsing.\n * @returns - syntax tree node ID if present, else `null`\n */\nfunction getExecutionItem() {\n    return _executionItem ? _executionItem.node.nodeID : null;\n}\nexports.getExecutionItem = getExecutionItem;\n/**\n * Sets a program counter override signal for the current execution item.\n * @param signal - program counter override signal\n */\nfunction setPCOverride(signal) {\n    if (_executionItem === null) {\n        return;\n    }\n    _programMap[_executionItem.bucket][_executionItem.node.nodeID].pcOverride = signal;\n}\nexports.setPCOverride = setPCOverride;\n/**\n * Clears any program counter override signal for the current execution item.\n */\nfunction clearPCOverride() {\n    if (_executionItem === null) {\n        return;\n    }\n    _programMap[_executionItem.bucket][_executionItem.node.nodeID].pcOverride = null;\n}\nexports.clearPCOverride = clearPCOverride;\n/**\n * Returns the next node in execution sequence.\n * @returns - element entry if present, else `null`\n */\nfunction getNextElement() {\n    if (_executionItem === null) {\n        /*\n         * Nothing to execute\n         */\n        return null;\n    }\n    const executionItemEntry = _programMap[_executionItem.bucket][_executionItem.node.nodeID];\n    if (executionItemEntry.pcHandler !== null) {\n        executionItemEntry.pcHandler.forEach((handler) => handler());\n        executionItemEntry.pcHandler = [];\n    }\n    const currentNode = executionItemEntry.pc;\n    const frames = executionItemEntry.frames;\n    if (currentNode === null) {\n        if (frames.length === 0) {\n            /*\n             * Successful end of execution\n             */\n            _reset();\n            return null;\n        }\n        else {\n            /*\n             * ERROR: Missing argument\n             */\n            const frame = frames[frames.length - 2];\n            throw Error(`Invalid access: \"${frame.pages[frame.pages.length - 1].marker}\" of \"${frame.node.elementName}\" (node ID: \"${frame.node.nodeID}\")`);\n        }\n    }\n    const instance = (0, warehouse_1.getInstance)(currentNode.instanceID).instance;\n    function __handlePages() {\n        const frame = frames[frames.length - 1];\n        if (frame.pages === null) {\n            frame.pages = [];\n            Object.entries(currentNode\n                .argConnections).forEach(([argName, argNode]) => frame.pages.push({\n                node: argNode,\n                marker: argName,\n            }));\n            frame.pages = frame.pages.reverse();\n        }\n        if (frame.pages.length !== 0) {\n            if (frame.pages[0].marker === '__rollback__') {\n                executionItemEntry.pcHandler.push(() => {\n                    if (executionItemEntry.pcOverride !== '__goinnerfirst__') {\n                        frames.pop();\n                    }\n                });\n                return { marker: '__rollback__' };\n            }\n            const upcomingNode = frame.pages[frame.pages.length - 1].node;\n            executionItemEntry.pcHandler.push(() => {\n                frames.push({\n                    node: upcomingNode,\n                    pages: null,\n                });\n                executionItemEntry.pc = upcomingNode;\n            });\n            return { element: getNextElement() };\n        }\n        else {\n            if (currentNode instanceof node_1.TreeNodeBlock) {\n                frame.pages = [\n                    {\n                        node: currentNode,\n                        marker: '__rollback__',\n                    },\n                ];\n                __handleInstructionFall(true);\n                return {\n                    element: {\n                        type: 'Instruction',\n                        instance: instance,\n                        marker: null,\n                    },\n                };\n            }\n            frames.pop();\n            let marker = null;\n            if (currentNode instanceof node_1.TreeNodeExpression && frames.length !== 0) {\n                const topFramePages = frames[frames.length - 1].pages;\n                marker = topFramePages[topFramePages.length - 1].marker;\n                frames[frames.length - 1].pages.pop();\n            }\n            return { marker };\n        }\n    }\n    function __handleInstructionFall(goInner) {\n        executionItemEntry.pcHandler.push(() => {\n            let nextNode = currentNode.afterConnection;\n            if (currentNode instanceof node_1.TreeNodeBlock) {\n                if (goInner || executionItemEntry.pcOverride === '__goinnerfirst__') {\n                    nextNode = currentNode.innerConnection;\n                }\n                if (executionItemEntry.pcOverride === '__goinnerlast__') {\n                    nextNode = currentNode.innerConnection;\n                    while (nextNode !== null && nextNode.afterConnection !== null) {\n                        nextNode = nextNode.afterConnection;\n                    }\n                }\n                else if (executionItemEntry.pcOverride === '__skipscope__') {\n                    frames[frames.length - 1].pages = [\n                        {\n                            node: currentNode,\n                            marker: '__rollback__',\n                        },\n                    ];\n                    nextNode = null;\n                }\n            }\n            if (executionItemEntry.pcOverride === '__goup__') {\n                nextNode = currentNode.beforeConnection;\n            }\n            else if (executionItemEntry.pcOverride === '__skip__') {\n                nextNode = currentNode.afterConnection;\n                if (nextNode !== null) {\n                    nextNode = nextNode.afterConnection;\n                }\n            }\n            else if (executionItemEntry.pcOverride === '__repeat__') {\n                nextNode = currentNode;\n            }\n            else if (executionItemEntry.pcOverride === '__rollback__' ||\n                executionItemEntry.pcOverride === '__rollback__i') {\n                if (frames.length > 0) {\n                    frames[frames.length - 1].pages = [\n                        {\n                            node: currentNode,\n                            marker: '__rollback__',\n                        },\n                    ];\n                }\n                nextNode = null;\n            }\n            if (executionItemEntry.pcOverride !== '__rollback__i') {\n                executionItemEntry.pcOverride = null;\n            }\n            if (nextNode === null) {\n                if (frames.length !== 0) {\n                    executionItemEntry.pc = frames[frames.length - 1].node;\n                }\n                else {\n                    executionItemEntry.pc = nextNode;\n                }\n            }\n            else {\n                frames.push({\n                    node: nextNode,\n                    pages: null,\n                });\n                executionItemEntry.pc = nextNode;\n            }\n        });\n    }\n    if (currentNode instanceof node_1.TreeNodeData) {\n        frames.pop();\n        let marker = null;\n        if (frames.length !== 0) {\n            const topFramePages = frames[frames.length - 1].pages;\n            marker = topFramePages[topFramePages.length - 1].marker;\n            frames[frames.length - 1].pages.pop();\n        }\n        const element = {\n            type: 'Argument',\n            instance: instance,\n            marker,\n        };\n        executionItemEntry.pcHandler.push(() => {\n            executionItemEntry.pc = currentNode.connectedTo;\n        });\n        return element;\n    }\n    else if (currentNode instanceof node_1.TreeNodeExpression) {\n        const result = __handlePages();\n        if ('element' in result) {\n            return result.element;\n        }\n        const element = {\n            type: 'Argument',\n            instance: instance,\n            marker: result.marker,\n        };\n        executionItemEntry.pcHandler.push(() => {\n            executionItemEntry.pc = currentNode.connectedTo;\n        });\n        return element;\n    } /* currentNode instanceof TreeNodeStatement || currentNode instanceof TreeNodeBlock */\n    else {\n        const result = __handlePages();\n        if ('element' in result) {\n            return result.element;\n        }\n        __handleInstructionFall();\n        return {\n            type: 'Instruction',\n            instance: currentNode instanceof node_1.TreeNodeStatement\n                ? instance\n                : instance,\n            marker: result.marker,\n        };\n    }\n}\nexports.getNextElement = getNextElement;\n/**\n * Returns the execution call frame stack of the current execution item.\n * @returns a list of execution call frames if execution item is set, else `null`\n */\nfunction stackTrace() {\n    if (_executionItem === null) {\n        return null;\n    }\n    const executionItemEntry = _programMap[_executionItem.bucket][_executionItem.node.nodeID];\n    const currentNode = executionItemEntry.pc;\n    return [\n        ...executionItemEntry.frames.map(({ node, pages }) => ({\n            elementName: node ? node.elementName : null,\n            nodeID: node ? node.nodeID : null,\n            pages: pages\n                ? pages.map(({ node, marker }) => ({\n                    elementName: node ? node.elementName : null,\n                    nodeID: node ? node.nodeID : null,\n                    marker,\n                }))\n                : null,\n        })),\n        {\n            elementName: currentNode ? currentNode.elementName : null,\n            nodeID: currentNode ? currentNode.nodeID : null,\n            pages: null,\n        },\n    ].reverse();\n}\nexports.stackTrace = stackTrace;\n_reset();\n//# sourceMappingURL=parser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst elementValue_1 = require(\"./elements/elementValue\");\nconst elementBox_1 = require(\"./elements/elementBox\");\nconst elementBoxIdentifier_1 = require(\"./elements/elementBoxIdentifier\");\nconst elementOperatorMath_1 = require(\"./elements/elementOperatorMath\");\nconst elementLoop_1 = require(\"./elements/elementLoop\");\nconst elementConditional_1 = require(\"./elements/elementConditional\");\nconst elementProgram_1 = require(\"./elements/elementProgram\");\nconst elementPrint_1 = require(\"./elements/elementPrint\");\n// -------------------------------------------------------------------------------------------------\n/** Stores element specification data entries for factory list of syntax elements. */\nconst _elementSpecificationEntries = {\n    // -- value elements ---------------------------------------------------------------------------\n    'value-boolean': {\n        label: 'true',\n        type: 'Data',\n        category: 'value',\n        prototype: elementValue_1.ElementValueBoolean,\n        values: {\n            types: ['boolean'],\n        },\n    },\n    'value-number': {\n        label: '0',\n        type: 'Data',\n        category: 'value',\n        prototype: elementValue_1.ElementValueNumber,\n        values: {\n            types: ['number'],\n        },\n    },\n    'value-string': {\n        label: 'string',\n        type: 'Data',\n        category: 'value',\n        prototype: elementValue_1.ElementValueString,\n    },\n    // -- box elements -----------------------------------------------------------------------------\n    'box-generic': {\n        label: 'Box',\n        type: 'Statement',\n        category: 'box',\n        prototype: elementBox_1.ElementBoxGeneric,\n    },\n    'box-boolean': {\n        label: 'Box (boolean)',\n        type: 'Statement',\n        category: 'box',\n        prototype: elementBox_1.ElementBoxBoolean,\n    },\n    'box-number': {\n        label: 'Box (number)',\n        type: 'Statement',\n        category: 'box',\n        prototype: elementBox_1.ElementBoxNumber,\n    },\n    'box-string': {\n        label: 'Box (string)',\n        type: 'Statement',\n        category: 'box',\n        prototype: elementBox_1.ElementBoxString,\n    },\n    // -- box identifier elements ------------------------------------------------------------------\n    'boxidentifier-generic': {\n        label: 'Box 1',\n        type: 'Data',\n        category: 'boxidentifier',\n        prototype: elementBoxIdentifier_1.ElementBoxIdentifierGeneric,\n    },\n    'boxidentifier-boolean': {\n        label: 'Box 1',\n        type: 'Data',\n        category: 'boxidentifier',\n        prototype: elementBoxIdentifier_1.ElementBoxIdentifierBoolean,\n    },\n    'boxidentifier-number': {\n        label: 'Box 1',\n        type: 'Data',\n        category: 'boxidentifier',\n        prototype: elementBoxIdentifier_1.ElementBoxIdentifierNumber,\n    },\n    'boxidentifier-string': {\n        label: 'Box 1',\n        type: 'Data',\n        category: 'boxidentifier',\n        prototype: elementBoxIdentifier_1.ElementBoxIdentifierString,\n    },\n    // -- math operator elements -------------------------------------------------------------------\n    'operator-math-plus': {\n        label: '+',\n        type: 'Expression',\n        category: 'operator-math',\n        prototype: elementOperatorMath_1.ElementOperatorMathPlus,\n    },\n    'operator-math-minus': {\n        label: '-',\n        type: 'Expression',\n        category: 'operator-math',\n        prototype: elementOperatorMath_1.ElementOperatorMathMinus,\n    },\n    'operator-math-times': {\n        label: '\\u00d7',\n        type: 'Expression',\n        category: 'operator-math',\n        prototype: elementOperatorMath_1.ElementOperatorMathTimes,\n    },\n    'operator-math-divide': {\n        label: '\\u00f7',\n        type: 'Expression',\n        category: 'operator-math',\n        prototype: elementOperatorMath_1.ElementOperatorMathDivide,\n    },\n    'operator-math-modulus': {\n        label: '%',\n        type: 'Expression',\n        category: 'operator-math',\n        prototype: elementOperatorMath_1.ElementOperatorMathModulus,\n    },\n    // -- loop elements ----------------------------------------------------------------------------\n    'repeat': {\n        label: 'repeat',\n        type: 'Block',\n        category: 'loop',\n        prototype: elementLoop_1.ElementRepeat,\n    },\n    // -- conditional elements ---------------------------------------------------------------------\n    'if': {\n        label: 'if',\n        type: 'Block',\n        category: 'loop',\n        prototype: elementConditional_1.ElementIf,\n    },\n    // -- program elements -------------------------------------------------------------------------\n    'process': {\n        label: 'start',\n        type: 'Block',\n        category: 'program',\n        prototype: elementProgram_1.ElementProcess,\n        allowAbove: false,\n        allowBelow: false,\n    },\n    'routine': {\n        label: 'action',\n        type: 'Block',\n        category: 'program',\n        prototype: elementProgram_1.ElementRoutine,\n        allowAbove: false,\n        allowBelow: false,\n    },\n    // -- print element ----------------------------------------------------------------------------\n    'print': {\n        label: 'print',\n        type: 'Statement',\n        category: 'print',\n        prototype: elementPrint_1.ElementPrint,\n    },\n};\nexports.default = _elementSpecificationEntries;\n//# sourceMappingURL=specification.js.map"],"sourceRoot":""}