{"version":3,"sources":["reportWebVitals.ts","index.ts","view/components/toolbar/resources/pin.svg","view/components/toolbar/resources/unpin.svg","view/components/toolbar/index.tsx","view/components/index.tsx","view/index.ts"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","requestAnimationFrame","btnPinRef","useRef","btnUnpinRef","useEffect","current","loadSVG","element","svgSrc","fetch","res","text","svg","innerHTML","pinSVG","unpinSVG","id","className","ref","setToolbarExtended","title","type","hooks","float","document","getElementById","pinned","_btnFloatPin","children","btnFloatPin","cloneNode","parentNode","replaceChild","_btnPinnedUnpin","btnPinnedUnpin","classList","remove","add","addEventListener","pin","unpin","toolbar","unsetToolbarExtended","App","createItem","params","location","position","item","createElement","appendChild","_createToolbarItem","wrapper","_createWorkspaceItem","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.70f37424.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import reportWebVitals from './reportWebVitals';\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// =================================================================================================\n\nimport './view';\n\nrequestAnimationFrame(() => import('./config'));\n\n// =================================================================================================\n\n// import './archive/index';\n","export default __webpack_public_path__ + \"static/media/pin.15ed3209.svg\";","export default __webpack_public_path__ + \"static/media/unpin.16ecbee7.svg\";","import { useEffect, useRef } from 'react';\n\n// -- resources ------------------------------------------------------------------------------------\n\nimport pinSVG from './resources/pin.svg';\nimport unpinSVG from './resources/unpin.svg';\n\n// -- stylesheet -----------------------------------------------------------------------------------\n\nimport './index.scss';\n\n// -- component definition -------------------------------------------------------------------------\n\n/**\n * Toolbar component.\n * @param props - React props (title)\n * @returns root JSX element of the Toolbar component\n */\nexport default function (): JSX.Element {\n  const btnPinRef = useRef(null);\n  const btnUnpinRef = useRef(null);\n\n  useEffect(() => {\n    btnPinRef.current!;\n    btnUnpinRef.current!;\n\n    const loadSVG = (element: HTMLButtonElement, svgSrc: string) => {\n      fetch(svgSrc)\n        .then((res) => res.text())\n        .then((svg) => (element.innerHTML = svg));\n    };\n\n    loadSVG(btnPinRef.current!, pinSVG);\n    loadSVG(btnUnpinRef.current!, unpinSVG);\n  }, []);\n\n  return (\n    <div id=\"toolbar-wrapper\">\n      <section id=\"toolbar\">\n        <div className=\"toolbar-cluster\" id=\"toolbar-cluster-a\"></div>\n        <div className=\"toolbar-cluster\" id=\"toolbar-cluster-b\"></div>\n      </section>\n      <section className=\"toolbar-extended toolbar-extended-hidden\" id=\"toolbar-float\">\n        <div className=\"toolbar-extended-head\" id=\"toolbar-float-head\">\n          <h3 className=\"toolbar-extended-head-title\" id=\"toolbar-float-title\">\n            Header\n          </h3>\n          <button className=\"toolbar-extended-head-btn\" id=\"toolbar-float-btn-pin\" ref={btnPinRef}>\n            Pin\n          </button>\n        </div>\n        <div className=\"toolbar-extended-content\" id=\"toolbar-float-content\"></div>\n      </section>\n      <section className=\"toolbar-extended toolbar-extended-hidden\" id=\"toolbar-pinned\">\n        <div className=\"toolbar-extended-head\" id=\"toolbar-pinned-head\">\n          <h3 className=\"toolbar-extended-head-title\" id=\"toolbar-pinned-title\">\n            Header\n          </h3>\n          <button\n            className=\"toolbar-extended-head-btn\"\n            id=\"toolbar-pinned-btn-unpin\"\n            ref={btnUnpinRef}\n          >\n            Unpin\n          </button>\n        </div>\n        <div className=\"toolbar-extended-content\" id=\"toolbar-pinned-content\"></div>\n      </section>\n    </div>\n  );\n}\n\n/**\n * Mounts Extended Toolbar subcomponent.\n * @param title title of the Extended Toolbar\n * @param type `float` or `pinned` Extended Toolbar\n * @param hooks external callbacks to hook on to component's actions\n * @returns DOM element of the Extended Toolbar's content container\n */\nexport function setToolbarExtended(\n  title: string,\n  type: 'float' | 'pinned',\n  hooks: {\n    pin: CallableFunction;\n    unpin: CallableFunction;\n  },\n): HTMLDivElement {\n  const float = document.getElementById('toolbar-float')!;\n  const pinned = document.getElementById('toolbar-pinned')!;\n\n  const _btnFloatPin = float.children[0].children[1] as HTMLButtonElement;\n  const btnFloatPin = _btnFloatPin.cloneNode(true);\n  _btnFloatPin.parentNode!.replaceChild(btnFloatPin, _btnFloatPin);\n\n  const _btnPinnedUnpin = pinned.children[0].children[1] as HTMLButtonElement;\n  const btnPinnedUnpin = _btnPinnedUnpin.cloneNode(true);\n  _btnPinnedUnpin.parentNode!.replaceChild(btnPinnedUnpin, _btnPinnedUnpin);\n\n  float.classList.remove('toolbar-extended-hidden');\n  pinned.classList.remove('toolbar-extended-hidden');\n\n  if (type === 'float') {\n    pinned.classList.add('toolbar-extended-hidden');\n    float.classList.remove('toolbar-extended-hidden');\n  } else {\n    float.classList.add('toolbar-extended-hidden');\n    pinned.classList.remove('toolbar-extended-hidden');\n  }\n\n  btnFloatPin.addEventListener('click', () => {\n    float.classList.add('toolbar-extended-hidden');\n    pinned.classList.remove('toolbar-extended-hidden');\n\n    hooks.pin();\n  });\n  btnPinnedUnpin.addEventListener('click', () => {\n    pinned.classList.add('toolbar-extended-hidden');\n    float.classList.remove('toolbar-extended-hidden');\n\n    hooks.unpin();\n  });\n\n  const toolbar = type === 'float' ? float : pinned;\n\n  const headTitle = toolbar.children[0].children[0] as HTMLHeadingElement;\n  headTitle.innerHTML = title;\n\n  return toolbar.children[1] as HTMLDivElement;\n}\n\nexport function unsetToolbarExtended(): void {\n  const float = document.getElementById('toolbar-float')!;\n  const pinned = document.getElementById('toolbar-pinned')!;\n\n  const _btnFloatPin = float.children[0].children[1] as HTMLButtonElement;\n  const btnFloatPin = _btnFloatPin.cloneNode(true);\n  _btnFloatPin.parentNode!.replaceChild(btnFloatPin, _btnFloatPin);\n\n  const _btnPinnedUnpin = pinned.children[0].children[1] as HTMLButtonElement;\n  const btnPinnedUnpin = _btnPinnedUnpin.cloneNode(true);\n  _btnPinnedUnpin.parentNode!.replaceChild(btnPinnedUnpin, _btnPinnedUnpin);\n\n  float.classList.add('toolbar-extended-hidden');\n  pinned.classList.add('toolbar-extended-hidden');\n}\n","import Toolbar from './toolbar';\n\nimport './index.scss';\n\nexport default function App(): JSX.Element {\n  return (\n    <>\n      <Toolbar />\n      <div id=\"workspace\"></div>\n    </>\n  );\n}\n\n// -------------------------------------------------------------------------------------------------\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import './components';\n\n// -- private functions ----------------------------------------------------------------------------\n\nfunction _createToolbarItem(\n    type: 'container' | 'button',\n    position: 'cluster-a' | 'cluster-b',\n): HTMLElement {\n    const item = document.createElement(type === 'container' ? 'div' : 'button');\n    document.getElementById(`toolbar-${position}`)!.appendChild(item);\n\n    item.classList.add('toolbar-cluster-item');\n    if (type === 'button') {\n        item.classList.add('toolbar-cluster-item-btn');\n    }\n\n    return item;\n}\n\nfunction _createWorkspaceItem(): HTMLElement {\n    const wrapper = document.createElement('div');\n    document.getElementById('workspace')!.appendChild(wrapper);\n\n    return wrapper;\n}\n\n// -- public functions -----------------------------------------------------------------------------\n\n/**\n * Creates a new component in the UI framework.\n * @param params component parameters\n * @returns DOM element of the new component\n */\nexport function createItem(\n    params:\n        | {\n              /** location to mount component */\n              location: 'workspace';\n          }\n        | {\n              /** location to mount component */\n              location: 'toolbar';\n              /** whether component is a toolbar container item or a toolbar button */\n              type: 'container' | 'button';\n              /** cluster (group of component items) */\n              position: 'cluster-a' | 'cluster-b';\n          },\n): HTMLElement {\n    if (params.location === 'toolbar') {\n        return _createToolbarItem(params.type, params.position);\n    } /* if (params.location === 'workspace') */ else {\n        return _createWorkspaceItem();\n    }\n}\n\nexport { setToolbarExtended, unsetToolbarExtended } from './components/toolbar';\n"],"sourceRoot":""}